cscope 15 $HOME/COMPILER/project2               0000231226
	@analyze.c

9 
	~"globÆs.h
"

10 
	~"symèb.h
"

11 
	~"™Æyze.h
"

14 
	gloˇti⁄
 = 0;

21 
	$åavî£
–
TªeNode
 * 
t
,

22 (* 
¥eProc
Ë(
TªeNode
 *),

23 (* 
po°Proc
Ë(
TªeNode
 *) )

24 { i‡(
t
 !
NULL
)

25 { 
	`¥eProc
(
t
);

26 { 
i
;

27 
i
=0; i < 
MAXCHILDREN
; i++)

28 
	`åavî£
(
t
->
chûd
[
i
],
¥eProc
,
po°Proc
);

30 
	`po°Proc
(
t
);

31 
	`åavî£
(
t
->
siblög
,
¥eProc
,
po°Proc
);

33 
	}
}

39 
	$nuŒProc
(
TªeNode
 * 
t
)

40 { i‡(
t
==
NULL
) ;

42 
	}
}

48 
	$ö£πNode
–
TªeNode
 * 
t
)

49 { 
t
->
nodeköd
)

50 { 
StmtK
:

51 
t
->
köd
.
°mt
)

52 { 
AssignK
:

53 
RódK
:

54 i‡(
	`°_lookup
(
t
->
©å
.
«me
) == -1)

56 
	`°_ö£π
(
t
->
©å
.
«me
,t->
löío
,
loˇti⁄
++);

60 
	`°_ö£π
(
t
->
©å
.
«me
,t->
löío
,0);

66 
ExpK
:

67 
t
->
köd
.
exp
)

68 { 
IdK
:

69 i‡(
	`°_lookup
(
t
->
©å
.
«me
) == -1)

71 
	`°_ö£π
(
t
->
©å
.
«me
,t->
löío
,
loˇti⁄
++);

75 
	`°_ö£π
(
t
->
©å
.
«me
,t->
löío
,0);

84 
	}
}

89 
	$buûdSymèb
(
TªeNode
 * 
sy¡axTªe
)

90 { 
	`åavî£
(
sy¡axTªe
,
ö£πNode
,
nuŒProc
);

91 i‡(
Tø˚A«lyze
)

92 { 
	`Ârötf
(
li°ög
,"\nSymbolÅable:\n\n");

93 
	`¥ötSymTab
(
li°ög
);

95 
	}
}

97 
	$ty≥Eº‹
(
TªeNode
 * 
t
, * 
mesßge
)

98 { 
	`Ârötf
(
li°ög
,"Ty≥Éº‹áàlöê%d: %s\n",
t
->
löío
,
mesßge
);

99 
Eº‹
 = 
TRUE
;

100 
	}
}

105 
	$checkNode
(
TªeNode
 * 
t
)

106 { 
t
->
nodeköd
)

107 { 
ExpK
:

108 
t
->
köd
.
exp
)

109 { 
OpK
:

110 i‡((
t
->
chûd
[0]->
ty≥
 !
I¡egî
) ||

111 (
t
->
chûd
[1]->
ty≥
 !
I¡egî
))

112 
	`ty≥Eº‹
(
t
,"OpáppliedÅoÇon-integer");

113 i‡((
t
->
©å
.
›
 =
EQ
Ë|| (t->©å.› =
LT
))

114 
t
->
ty≥
 = 
Boﬁón
;

116 
t
->
ty≥
 = 
I¡egî
;

118 
C⁄°K
:

119 
IdK
:

120 
t
->
ty≥
 = 
I¡egî
;

126 
StmtK
:

127 
t
->
köd
.
°mt
)

128 { 
IfK
:

129 i‡(
t
->
chûd
[0]->
ty≥
 =
I¡egî
)

130 
	`ty≥Eº‹
(
t
->
chûd
[0],"ifÅest isÇot Boolean");

132 
AssignK
:

133 i‡(
t
->
chûd
[0]->
ty≥
 !
I¡egî
)

134 
	`ty≥Eº‹
(
t
->
chûd
[0],"assignment ofÇon-integer value");

136 
WrôeK
:

137 i‡(
t
->
chûd
[0]->
ty≥
 !
I¡egî
)

138 
	`ty≥Eº‹
(
t
->
chûd
[0],"write ofÇon-integer value");

140 
RïótK
:

141 i‡(
t
->
chûd
[1]->
ty≥
 =
I¡egî
)

142 
	`ty≥Eº‹
(
t
->
chûd
[1],"repeatÅest isÇot Boolean");

152 
	}
}

157 
	$ty≥Check
(
TªeNode
 * 
sy¡axTªe
)

158 { 
	`åavî£
(
sy¡axTªe
,
nuŒProc
,
checkNode
);

159 
	}
}

	@analyze.h

8 #i‚de‡
_ANALYZE_H_


9 
	#_ANALYZE_H_


	)

14 
buûdSymèb
(
TªeNode
 *);

19 
ty≥Check
(
TªeNode
 *);

	@cgen.c

10 
	~"globÆs.h
"

11 
	~"symèb.h
"

12 
	~"code.h
"

13 
	~"cgí.h
"

19 
	gtmpOff£t
 = 0;

22 
cGí
 (
TªeNode
 * 
åì
);

25 
	$gíStmt
–
TªeNode
 * 
åì
)

26 { 
TªeNode
 * 
p1
, * 
p2
, * 
p3
;

27 
ßvedLoc1
,
ßvedLoc2
,
cuºítLoc
;

28 
loc
;

29 
åì
->
köd
.
°mt
) {

31 
IfK
 :

32 i‡(
Tø˚Code
Ë
	`emôCommít
("-> if") ;

33 
p1
 = 
åì
->
chûd
[0] ;

34 
p2
 = 
åì
->
chûd
[1] ;

35 
p3
 = 
åì
->
chûd
[2] ;

37 
	`cGí
(
p1
);

38 
ßvedLoc1
 = 
	`emôSkù
(1) ;

39 
	`emôCommít
("if: jumpÅoÉlse belongs here");

41 
	`cGí
(
p2
);

42 
ßvedLoc2
 = 
	`emôSkù
(1) ;

43 
	`emôCommít
("if: jumpÅoÉnd belongs here");

44 
cuºítLoc
 = 
	`emôSkù
(0) ;

45 
	`emôBackup
(
ßvedLoc1
) ;

46 
	`emôRM_Abs
("JEQ",
ac
,
cuºítLoc
,"if: jmpÅoÉlse");

47 
	`emôRe°‹e
() ;

49 
	`cGí
(
p3
);

50 
cuºítLoc
 = 
	`emôSkù
(0) ;

51 
	`emôBackup
(
ßvedLoc2
) ;

52 
	`emôRM_Abs
("LDA",
pc
,
cuºítLoc
,"jmpÅoÉnd") ;

53 
	`emôRe°‹e
() ;

54 i‡(
Tø˚Code
Ë
	`emôCommít
("<- if") ;

57 
RïótK
:

58 i‡(
Tø˚Code
Ë
	`emôCommít
("->Ñepeat") ;

59 
p1
 = 
åì
->
chûd
[0] ;

60 
p2
 = 
åì
->
chûd
[1] ;

61 
ßvedLoc1
 = 
	`emôSkù
(0);

62 
	`emôCommít
("repeat: jumpáfter body comes back here");

64 
	`cGí
(
p1
);

66 
	`cGí
(
p2
);

67 
	`emôRM_Abs
("JEQ",
ac
,
ßvedLoc1
,"repeat: jmp backÅo body");

68 i‡(
Tø˚Code
Ë
	`emôCommít
("<-Ñepeat") ;

71 
AssignK
:

72 i‡(
Tø˚Code
Ë
	`emôCommít
("->ássign") ;

74 
	`cGí
(
åì
->
chûd
[0]);

76 
loc
 = 
	`°_lookup
(
åì
->
©å
.
«me
);

77 
	`emôRM
("ST",
ac
,
loc
,
gp
,"assign: store value");

78 i‡(
Tø˚Code
Ë
	`emôCommít
("<-ássign") ;

81 
RódK
:

82 
	`emôRO
("IN",
ac
,0,0,"read integer value");

83 
loc
 = 
	`°_lookup
(
åì
->
©å
.
«me
);

84 
	`emôRM
("ST",
ac
,
loc
,
gp
,"read: store value");

86 
WrôeK
:

88 
	`cGí
(
åì
->
chûd
[0]);

90 
	`emôRO
("OUT",
ac
,0,0,"writeác");

95 
	}
}

98 
	$gíExp
–
TªeNode
 * 
åì
)

99 { 
loc
;

100 
TªeNode
 * 
p1
, * 
p2
;

101 
åì
->
köd
.
exp
) {

103 
C⁄°K
 :

104 i‡(
Tø˚Code
Ë
	`emôCommít
("-> Const") ;

106 
	`emôRM
("LDC",
ac
,
åì
->
©å
.
vÆ
,0,"load const");

107 i‡(
Tø˚Code
Ë
	`emôCommít
("<- Const") ;

110 
IdK
 :

111 i‡(
Tø˚Code
Ë
	`emôCommít
("-> Id") ;

112 
loc
 = 
	`°_lookup
(
åì
->
©å
.
«me
);

113 
	`emôRM
("LD",
ac
,
loc
,
gp
,"load id value");

114 i‡(
Tø˚Code
Ë
	`emôCommít
("<- Id") ;

117 
OpK
 :

118 i‡(
Tø˚Code
Ë
	`emôCommít
("-> Op") ;

119 
p1
 = 
åì
->
chûd
[0];

120 
p2
 = 
åì
->
chûd
[1];

122 
	`cGí
(
p1
);

124 
	`emôRM
("ST",
ac
,
tmpOff£t
--,
mp
,"op:ÖushÜeft");

126 
	`cGí
(
p2
);

128 
	`emôRM
("LD",
ac1
,++
tmpOff£t
,
mp
,"op:ÜoadÜeft");

129 
åì
->
©å
.
›
) {

130 
PLUS
 :

131 
	`emôRO
("ADD",
ac
,
ac1
,ac,"op +");

133 
MINUS
 :

134 
	`emôRO
("SUB",
ac
,
ac1
,ac,"op -");

136 
TIMES
 :

137 
	`emôRO
("MUL",
ac
,
ac1
,ac,"op *");

139 
OVER
 :

140 
	`emôRO
("DIV",
ac
,
ac1
,ac,"op /");

142 
LT
 :

143 
	`emôRO
("SUB",
ac
,
ac1
,ac,"op <") ;

144 
	`emôRM
("JLT",
ac
,2,
pc
,"br ifÅrue") ;

145 
	`emôRM
("LDC",
ac
,0,ac,"false case") ;

146 
	`emôRM
("LDA",
pc
,1,pc,"unconditional jmp") ;

147 
	`emôRM
("LDC",
ac
,1,ac,"true case") ;

149 
EQ
 :

150 
	`emôRO
("SUB",
ac
,
ac1
,ac,"op ==") ;

151 
	`emôRM
("JEQ",
ac
,2,
pc
,"br ifÅrue");

152 
	`emôRM
("LDC",
ac
,0,ac,"false case") ;

153 
	`emôRM
("LDA",
pc
,1,pc,"unconditional jmp") ;

154 
	`emôRM
("LDC",
ac
,1,ac,"true case") ;

157 
	`emôCommít
("BUG: Unknown operator");

160 i‡(
Tø˚Code
Ë
	`emôCommít
("<- Op") ;

166 
	}
}

171 
	$cGí
–
TªeNode
 * 
åì
)

172 { i‡(
åì
 !
NULL
)

173 { 
åì
->
nodeköd
) {

174 
StmtK
:

175 
	`gíStmt
(
åì
);

177 
ExpK
:

178 
	`gíExp
(
åì
);

183 
	`cGí
(
åì
->
siblög
);

185 
	}
}

196 
	$codeGí
(
TªeNode
 * 
sy¡axTªe
, * 
codefûe
)

197 { * 
s
 = 
	`mÆloc
(
	`°æí
(
codefûe
)+7);

198 
	`°r˝y
(
s
,"File: ");

199 
	`°rˇt
(
s
,
codefûe
);

200 
	`emôCommít
("TINY CompilationÅo TM Code");

201 
	`emôCommít
(
s
);

203 
	`emôCommít
("StandardÖrelude:");

204 
	`emôRM
("LD",
mp
,0,
ac
,"load maxaddress fromÜocation 0");

205 
	`emôRM
("ST",
ac
,0,ac,"clearÜocation 0");

206 
	`emôCommít
("End of standardÖrelude.");

208 
	`cGí
(
sy¡axTªe
);

210 
	`emôCommít
("End ofÉxecution.");

211 
	`emôRO
("HALT",0,0,0,"");

212 
	}
}

	@cgen.h

8 #i‚de‡
_CGEN_H_


9 
	#_CGEN_H_


	)

17 
codeGí
(
TªeNode
 * 
sy¡axTªe
, * 
codefûe
);

	@cminus.l

9 
	~"globÆs.h
"

10 
	~"utû.h
"

11 
	~"sˇn.h
"

13 
	gtokíSåög
[
MAXTOKENLEN
+1];

14 
	gch
=0;

17 
digô
 [0-9]

18 
numbî
 {
digô
}+

19 
Àâî
 [
a
-
zA
-
Z
]

20 
idítifõr
 {
Àâî
}({Àâî}|{
digô
})*

21 
√wlöe
 \
n


22 
whôe•a˚
 [ \
t
]+

24 %% /* 
	$yyÀx
 */

25 "öt" {  
INT
; }

26 "if" {  
IF
; }

27 "ñ£" {  
ELSE
; }

28 "whûe" {  
WHILE
; }

29 "ªtu∫" {  
RETURN
; }

30 "void" {  
VOID
; }

31 "+" {  
PLUS
; }

32 "-" {  
MINUS
; }

33 "*" {  
TIMES
; }

34 "/" {  
OVER
; }

35 "<" {  
LT
; }

36 "<=" {  
LE
; }

37 ">" {  
GT
; }

38 ">=" {  
GE
; }

39 "==" {  
EQ
; }

40 "!=" {  
NE
; }

41 "=" {  
ASSIGN
; }

42 ";" {  
SEMI
; }

43 "," {  
COMMA
; }

44 "(" {  
LPAREN
; }

45 ")" {  
RPAREN
; }

46 "[" {  
LBRACE
; }

47 "]" {  
RBRACE
; }

48 "{" {  
LCURLY
; }

49 "}" {  
RCURLY
; }

50 {
numbî
} {  
NUM
; }

51 {
idítifõr
} {  
ID
; }

52 {
√wlöe
} { 
löío
++; }

53 {
whôe•a˚
} { }

54 . { 
ERROR
; }

55 <<
EOF
>> { 
ENDFILE
; }

57 
cuºít
;

58 
√xt
;

60 
cuºít
 = 
	`öput
();

62 i‡(
cuºít
 == '*') {

63 
√xt
=
	`öput
();

64 if(
√xt
=='/') ;

65 
	`u≈ut
(
√xt
);

68 i‡(
cuºít
 =0 || cuºíà=
EOF
) {

69  
ENDFILE
;

72 i‡(
cuºít
 == '\n') {

73 
löío
++;

78 
	}
%%

80 
TokíTy≥
 
	$gëTokí
()

81 { 
fú°Time
 = 
TRUE
;

82 
TokíTy≥
 
cuºítTokí
;

83 i‡(
fú°Time
)

84 { 
fú°Time
 = 
FALSE
;

85 
löío
++;

86 
yyö
 = 
sour˚
;

87 
yyout
 = 
li°ög
;

89 
cuºítTokí
 = 
	`yyÀx
();

90 
	`°∫˝y
(
tokíSåög
,
yyãxt
,
MAXTOKENLEN
);

91 i‡(
Tø˚Sˇn
) {

92 
	`Ârötf
(
li°ög
,"\t%d: ",
löío
);

93 
	`¥ötTokí
(
cuºítTokí
,
tokíSåög
);

95  
cuºítTokí
;

96 
	}
}

	@cminus.y

12 
	#YYPARSER


	)

14 
	~"globÆs.h
"

15 
	~"utû.h
"

16 
	~"sˇn.h
"

17 
	~"∑r£.h
"

21 
	#YYSTYPE
 
TªeNode
 *

	)

22 
	gßvedNumbî
;

23 * 
	gßvedName
;

25 
ExpTy≥
 
	gßvedTy≥
;

26 
TªeNode
 * 
	gßvedTªe
;

27 
yyÀx
();

28 
¥öt_debug_öfo
();

30 
yyîr‹
(* 
mesßge
);

39 %
tokí
 
IF
 
ELSE
 
INT
 
RETURN
 
VOID
 
WHILE


40 %
tokí
 
ID
 
NUM


41 %
tokí
 
LT
 
LE
 
GT
 
GE
 
EQ
 
NE
 
SEMI


42 %
tokí
 
LPAREN
 
RPAREN
 
LCURLY
 
RCURLY
 
LBRACE
 
RBRACE


43 %
À·
 
PLUS
 
MINUS


44 %
À·
 
TIMES
 
OVER
 
COMMA


46 %
right
 
ASSIGN


47 %
right
 
THEN
 
ELSE


48 %
tokí
 
ERROR


51 %% /* 
	$yy∑r£
 */ 
	`yyÀx
()

57 
¥ogøm
 : 
de˛_li°
 { 
ßvedTªe
 = 
$1
;}

60 
de˛_li°
 : de˛_li° 
de˛¨©i⁄


61 { 
YYSTYPE
 
t
 = 
$1
;

62 i‡(
t
 !
NULL
)

63 { 
t
->
siblög
 !
NULL
)

64 
t
 =Å->
siblög
;

65 
t
->
siblög
 = 
$2
;

66 
$$
 = 
$1
; }

67 
$$
 = 
$2
;

69 | 
de˛¨©i⁄
 { 
$$
 = 
$1
; }

72 
de˛¨©i⁄
 : 
v¨_de˛
 { 
$$
 = 
$1
; }

73 | 
func_de˛
 { 
$$
 = 
$1
; }

76 
id
 : 
ID


77 { 
$$
 = 
	`√wExpNode
(
IdK
,
löío
);

78 
ßvedName
 = 
	`c›ySåög
(
tokíSåög
);

79 
$$
->
©å
.
«me
=
ßvedName
;

82 
num
 : 
NUM


83 { 
$$
 = 
	`√wExpNode
(
C⁄°K
,
löío
);

84 
ßvedNumbî
 = 
	`©oi
(
tokíSåög
);

85 
$$
->
©å
.
vÆ
 = 
ßvedNumbî
;

89 
v¨_de˛
 : 
ty≥_•ec
 
id
 
SEMI


90 { 
$$
 = 
	`√wDe˛Node
(
V¨K
, 
$2
->
löío
);

91 
$$
->
ty≥
 = 
$1
->type;

92 
$$
->
©å
.
«me
 = 
$2
->attr.name;

95 | 
ty≥_•ec
 
id
 
LBRACE
 
num
 
RBRACE
 
SEMI


96 { 
$$
 = 
	`√wDe˛Node
(
AºK
,
$2
->
löío
);

97 
$$
->
ty≥
 = (
$1
->ty≥=
I¡egî
Ë? 
I¡Aºay
 : 
VoidAºay
;

98 
$$
->
©å
.
«me
 =
$2
->attr.name;

99 
$$
->
chûd
[0] = 
$4
;

103 
ty≥_•ec
 : 
INT


104 { 
$$
 = 
	`√wDe˛Node
(
Ty≥K
,
löío
);

105 
$$
->
ty≥
 = 
I¡egî
;

107 | 
VOID


108 { 
$$
 = 
	`√wDe˛Node
(
Ty≥K
,
löío
);

109 
$$
->
ty≥
 = 
Void
;

113 
func_de˛
 : 
ty≥_•ec
 
id
 
LPAREN
 
∑øms
 
RPAREN
 
comp_°mt


114 { 
$$
 = 
	`√wDe˛Node
(
FuncK
,
$2
->
löío
);

115 
$$
->
ty≥
 = 
$1
->type;

116 
$$
->
©å
.
«me
 = 
$2
->attr.name;

117 
$$
->
chûd
[0] = 
$4
;

118 
$$
->
chûd
[1] = 
$6
;

122 
∑øms
 : 
∑øm_li°
 { 
$$
 = 
$1
; }

123 | 
VOID
 { 
$$
 = 
	`√wDe˛Node
(
VoidP¨amK
,
löío
); }

125 
∑øm_li°
 :Ö¨am_li° 
COMMA
 
∑øm


126 { 
YYSTYPE
 
t
 = 
$1
;

127 i‡(
t
 !
NULL
)

128 { 
t
->
siblög
 !
NULL
)

129 
t
 =Å->
siblög
;

130 
t
->
siblög
 = 
$3
;

131 
$$
 = 
$1
; }

132 
$$
 = 
$3
;

134 | 
∑øm
 { 
$$
 = 
$1
; }

137 
∑øm
 : 
ty≥_•ec
 
id


138 { 
$$
 = 
	`√wDe˛Node
(
P¨amK
,
$2
->
löío
);

139 
$$
->
ty≥
 = 
$1
->type;

140 
$$
->
©å
.
«me
 = 
	`c›ySåög
(
ßvedName
);

142 | 
ty≥_•ec
 
id
 
LBRACE
 
RBRACE


143 { 
$$
 = 
	`√wDe˛Node
(
AºP¨amK
,
$2
->
löío
);

144 
$$
->
ty≥
 = (
$1
->ty≥==
I¡egî
)?
I¡Aºay
:
VoidAºay
;

145 
$$
->
©å
.
«me
 = 
	`c›ySåög
(
ßvedName
);

149 
comp_°mt
 : 
LCURLY
 
loˇl_de˛
 
°mt_li°
 
RCURLY


150 { 
$$
 = 
	`√wStmtNode
(
CompoundK
, 
$4
->
löío
);

151 
$$
->
chûd
[0] = 
$2
 ? $2 : 
NULL
;

152 
$$
->
chûd
[1] = 
$3
 ? $3 : 
NULL
;

156 
loˇl_de˛
 :Üoˇl_de˛ 
v¨_de˛


157 { 
YYSTYPE
 
t
 = 
$1
;

158 i‡(
t
 !
NULL
)

159 { 
t
->
siblög
 !
NULL
)

160 
t
 =Å->
siblög
;

161 
t
->
siblög
 = 
$2
;

162 
$$
 = 
$1
; }

163 
$$
 = 
$2
;

165 | { 
$$
 = 
NULL
; }

168 
°mt_li°
 : stmt_li° 
°©emít


169 { 
YYSTYPE
 
t
 = 
$1
;

170 i‡(
t
 !
NULL
)

171 { 
t
->
siblög
 !
NULL
)

172 
t
 =Å->
siblög
;

173 
t
->
siblög
 = 
$2
;

174 
$$
 = 
$1
; }

175 
$$
 = 
$2
;

177 | { 
$$
 = 
NULL
; }

180 
°©emít
 : 
exp_°mt
 { 
$$
 = 
$1
; }

181 | 
comp_°mt
 { 
$$
 = 
$1
; }

182 | 
£À˘_°mt
 { 
$$
 = 
$1
; }

183 | 
ôî_°mt
 { 
$$
 = 
$1
; }

184 | 
ªtu∫_°mt
 { 
$$
 = 
$1
; }

185 | 
ERROR
 
SEMI
 { 
	`yyîr‹
("Sy¡axÉº‹ i¿°©emít."); 
yyîrok
; }

188 
exp_°mt
 : 
ex¥essi⁄
 
SEMI
 { 
$$
 = 
$1
; }

189 | 
SEMI
 { 
$$
 = 
NULL
; }

192 
£À˘_°mt
: 
IF
 
LPAREN
 
ex¥essi⁄
 
RPAREN
 
°©emít


193 { 
$$
 = 
	`√wStmtNode
(
IfK
,
$5
->
löío
);

194 
$$
->
chûd
[0] = 
$3
;

195 
$$
->
chûd
[1] = 
$5
;

196 } %
¥ec
 
THEN


197 | 
IF
 
LPAREN
 
ex¥essi⁄
 
RPAREN
 
°©emít
 
ELSE
 statement

198 { 
$$
 = 
	`√wStmtNode
(
El£K
,
$7
->
löío
);

199 
$$
->
chûd
[0] = 
$3
;

200 
$$
->
chûd
[1] = 
$5
;

201 
$$
->
chûd
[2] = 
$7
;

204 
ôî_°mt
 : 
WHILE
 
LPAREN
 
ex¥essi⁄
 
RPAREN
 
°©emít


205 { 
$$
 = 
	`√wStmtNode
(
WhûeK
,
$5
->
löío
);

206 
$$
->
chûd
[0] = 
$3
;

207 
$$
->
chûd
[1] = 
$5
;

211 
ªtu∫_°mt
 : 
RETURN
 
SEMI


212 { 
$$
 = 
	`√wStmtNode
(
Rëu∫K
,
$2
->
löío
);

214 | 
RETURN
 
ex¥essi⁄
 
SEMI


215 { 
$$
 = 
	`√wStmtNode
(
Rëu∫K
,
$3
->
löío
);

216 
$$
->
chûd
[0] = 
$2
;

220 
ex¥essi⁄
 : 
v¨
 
ASSIGN
Éxpression

221 { 
$$
 = 
	`√wExpNode
(
AssignK
,
$1
->
löío
);

222 
$$
->
chûd
[0] = 
$1
;

223 
$$
->
chûd
[1] = 
$3
;

225 | 
sim∂e_exp
 { 
$$
 = 
$1
; }

228 
v¨
 : 
id


229 { 
$$
 = 
	`√wExpNode
(
V¨ExpK
,
$1
->
löío
);

230 
$$
->
©å
.
«me
 = 
	`c›ySåög
(
ßvedName
);

232 | 
id
 
LBRACE
 
ex¥essi⁄
 
RBRACE


233 { 
$$
 = 
	`√wExpNode
(
V¨ExpK
,
$1
->
löío
);

234 
$$
->
©å
.
«me
 = 
$1
->attr.name;

235 
$$
->
chûd
[0] = 
$3
;

239 
sim∂e_exp
 : 
add_exp
 
LT
ádd_exp

240 { 
$$
 = 
	`√wExpNode
(
OpK
, 
$1
->
löío
);

241 
$$
->
chûd
[0] = 
$1
;

242 
$$
->
©å
.
›
 =
LT
;

243 
$$
->
chûd
[1] = 
$3
;

245 | 
add_exp
 
LE
ádd_exp

246 { 
$$
 = 
	`√wExpNode
(
OpK
, 
$1
->
löío
);

247 
$$
->
chûd
[0] = 
$1
;

248 
$$
->
©å
.
›
 =
LE
;

249 
$$
->
chûd
[1] = 
$3
;

251 |
add_exp
 
GT
ádd_exp

252 { 
$$
 = 
	`√wExpNode
(
OpK
, 
$1
->
löío
);

253 
$$
->
chûd
[0] = 
$1
;

254 
$$
->
©å
.
›
 = 
GT
;

255 
$$
->
chûd
[1] = 
$3
;

257 |
add_exp
 
GE
ádd_exp

258 { 
$$
 = 
	`√wExpNode
(
OpK
, 
$1
->
löío
);

259 
$$
->
chûd
[0] = 
$1
;

260 
$$
->
©å
.
›
 = 
GE
;

261 
$$
->
chûd
[1] = 
$3
;

263 | 
add_exp
 
EQ
ádd_exp

264 { 
$$
 = 
	`√wExpNode
(
OpK
, 
$1
->
löío
);

265 
$$
->
chûd
[0] = 
$1
;

266 
$$
->
©å
.
›
 = 
EQ
;

267 
$$
->
chûd
[1] = 
$3
;

269 | 
add_exp
 
NE
ádd_exp

270 { 
$$
 = 
	`√wExpNode
(
OpK
, 
$1
->
löío
);

271 
$$
->
chûd
[0] = 
$1
;

272 
$$
->
©å
.
›
 = 
NE
;

273 
$$
->
chûd
[1] = 
$3
;

275 | 
add_exp
 { 
$$
 = 
$1
; }

280 
add_exp
 :ádd_ex∞
PLUS
 
ãrm


281 { 
$$
 = 
	`√wExpNode
(
OpK
, 
$1
->
löío
);

282 
$$
->
chûd
[0] = 
$1
;

283 
$$
->
chûd
[1] = 
$3
;

284 
$$
->
©å
.
›
 = 
PLUS
;

286 | 
add_exp
 
MINUS
 
ãrm


287 { 
$$
 = 
	`√wExpNode
(
OpK
, 
$1
->
löío
);

288 
$$
->
chûd
[0] = 
$1
;

289 
$$
->
chûd
[1] = 
$3
;

290 
$$
->
©å
.
›
 = 
MINUS
;

292 | 
ãrm
 { 
$$
 = 
$1
; }

295 
ãrm
 :Åîm 
TIMES
 
Á˘‹


296 { 
$$
 = 
	`√wExpNode
(
OpK
, 
$1
->
löío
);

297 
$$
->
chûd
[0] = 
$1
;

298 
$$
->
©å
.
›
 = 
TIMES
;

299 
$$
->
chûd
[1] = 
$3
;

301 | 
ãrm
 
OVER
 
Á˘‹


302 { 
$$
 = 
	`√wExpNode
(
OpK
, 
$1
->
löío
);

303 
$$
->
chûd
[0] = 
$1
;

304 
$$
->
©å
.
›
 = 
OVER
;

305 
$$
->
chûd
[1] = 
$3
;

307 | 
Á˘‹
 { 
$$
 = 
$1
; }

310 
Á˘‹
 : 
LPAREN
 
ex¥essi⁄
 
RPAREN
 { 
$$
 = 
$2
; }

311 | 
v¨
 { 
$$
 = 
$1
; }

312 | 
ˇŒ
 { 
$$
 = 
$1
; }

313 | 
num


314 { 
$$
 = 
	`√wExpNode
(
C⁄°K
, 
$1
->
löío
);

315 
$$
->
©å
.
vÆ
=
ßvedNumbî
;

319 
ˇŒ
 : 
id
 
LPAREN
 
¨gs
 
RPAREN


320 { 
$$
 = 
	`√wExpNode
(
CÆlK
, 
$1
->
löío
);

321 
$$
->
©å
.
«me
 = 
$1
->attr.name;

322 
$$
->
chûd
[0] = 
$3
;

326 
¨gs
 : 
¨g_li°
 { 
$$
 = 
$1
; }

327 | { 
$$
 = 
NULL
; }

330 
¨g_li°
 :árg_li° 
COMMA
 
ex¥essi⁄


331 { 
YYSTYPE
 
t
 = 
$1
;

332 i‡(
t
 !
NULL
)

333 { 
t
->
siblög
 !
NULL
)

334 
t
 =Å->
siblög
;

335 
t
->
siblög
 = 
$3
;

336 
$$
 = 
$1
; }

337 
$$
 = 
$3
;

339 | 
ex¥essi⁄
 { 
$$
 = 
$1
; }

342 
	}
%%

348 
	$yyîr‹
(* 
mesßge
) {

349 
	`Ârötf
(
li°ög
,"Sy¡axÉº‹áàlöê%d: %s\n",
löío
,
mesßge
);

350 
	`Ârötf
(
li°ög
,"CurrentÅoken: ");

351 
	`¥ötTokí
(
yych¨
,
tokíSåög
);

352 
Eº‹
 = 
TRUE
;

354 
	}
}

358 
	$yyÀx
() {

359  
	`gëTokí
();

360 
	}
}

362 
TªeNode
 * 
	$∑r£
() {

363 
	`yy∑r£
();

364  
ßvedTªe
;

365 
	}
}

	@code.c

9 
	~"globÆs.h
"

10 
	~"code.h
"

13 
	gemôLoc
 = 0 ;

18 
	ghighEmôLoc
 = 0;

23 
	$emôCommít
–* 
c
 )

24 { i‡(
Tø˚Code
Ë
	`Ârötf
(
code
,"* %s\n",
c
);
	}
}

34 
	$emôRO
–*
›
, 
r
, 
s
, 
t
, *
c
)

35 { 
	`Ârötf
(
code
,"%3d: %5† %d,%d,%d ",
emôLoc
++,
›
,
r
,
s
,
t
);

36 i‡(
Tø˚Code
Ë
	`Ârötf
(
code
,"\t%s",
c
) ;

37 
	`Ârötf
(
code
,"\n") ;

38 i‡(
highEmôLoc
 < 
emôLoc
) highEmitLoc =ÉmitLoc ;

39 
	}
}

49 
	$emôRM
–* 
›
, 
r
, 
d
, 
s
, *
c
)

50 { 
	`Ârötf
(
code
,"%3d: %5† %d,%d(%dË",
emôLoc
++,
›
,
r
,
d
,
s
);

51 i‡(
Tø˚Code
Ë
	`Ârötf
(
code
,"\t%s",
c
) ;

52 
	`Ârötf
(
code
,"\n") ;

53 i‡(
highEmôLoc
 < 
emôLoc
) highEmitLoc =ÉmitLoc ;

54 
	}
}

60 
	$emôSkù
–
howM™y
)

61 { 
i
 = 
emôLoc
;

62 
emôLoc
 +
howM™y
 ;

63 i‡(
highEmôLoc
 < 
emôLoc
) highEmitLoc =ÉmitLoc ;

64  
i
;

65 
	}
}

70 
	$emôBackup
–
loc
)

71 { i‡(
loc
 > 
highEmôLoc
Ë
	`emôCommít
("BUG inÉmitBackup");

72 
emôLoc
 = 
loc
 ;

73 
	}
}

79 
	$emôRe°‹e
()

80 { 
emôLoc
 = 
highEmôLoc
;
	}
}

90 
	$emôRM_Abs
–*
›
, 
r
, 
a
, * 
c
)

91 { 
	`Ârötf
(
code
,"%3d: %5s %d,%d(%d) ",

92 
emôLoc
,
›
,
r
,
a
-”môLoc+1),
pc
);

93 ++
emôLoc
 ;

94 i‡(
Tø˚Code
Ë
	`Ârötf
(
code
,"\t%s",
c
) ;

95 
	`Ârötf
(
code
,"\n") ;

96 i‡(
highEmôLoc
 < 
emôLoc
) highEmitLoc =ÉmitLoc ;

97 
	}
}

	@code.h

9 #i‚de‡
_CODE_H_


10 
	#_CODE_H_


	)

13 
	#pc
 7

	)

18 
	#mp
 6

	)

24 
	#gp
 5

	)

27 
	#ac
 0

	)

30 
	#ac1
 1

	)

37 
emôCommít
–* 
c
 );

47 
emôRO
–*
›
, 
r
, 
s
, 
t
, *
c
);

57 
emôRM
–* 
›
, 
r
, 
d
, 
s
, *
c
);

63 
emôSkù
–
howM™y
);

68 
emôBackup
–
loc
);

74 
emôRe°‹e
();

84 
emôRM_Abs
–*
›
, 
r
, 
a
, * 
c
);

	@globals.h

9 #i‚de‡
_GLOBALS_H_


10 
	#_GLOBALS_H_


	)

12 
	~<°dio.h
>

13 
	~<°dlib.h
>

14 
	~<˘y≥.h
>

15 
	~<°rög.h
>

17 #i‚de‡
YYPARSER


20 
	~"y.èb.h
"

23 
	#ENDFILE
 0

	)

26 #i‚de‡
FALSE


27 
	#FALSE
 0

	)

30 #i‚de‡
TRUE


31 
	#TRUE
 1

	)

35 
	#MAXRESERVED
 6

	)

37 
	tTokíTy≥
;

50 
FILE
* 
sour˚
;

51 
FILE
* 
li°ög
;

52 
FILE
* 
code
;

54 
löío
;

60 íum {
	mStmtK
,
	mExpK
, 
	mDe˛K
} 
	tNodeKöd
;

62 íum {
	mV¨K
, 
	mAºK
, 
	mFuncK
, 
	mPømsK
, 
	mP¨amK
, 
	mVoidP¨amK
, 
	mAºP¨amK
} 
	tDe˛Köd
;

64 íum {
	mIfK
,
	mEl£K
, 
	mWhûeK
, 
	mCompoundK
, 
	mRëu∫K
 } 
	tStmtKöd
;

65 íum {
	mCÆlK
,
	mAssignK
,
	mOpK
,
	mC⁄°K
,
	mIdK
, 
	mTy≥K
, 
	mV¨ExpK
} 
	tExpKöd
;

68 íum {
	mVoid
,
	mI¡egî
,
	mI¡Aºay
,
	mVoidAºay
} 
	tExpTy≥
;

70 
	#MAXCHILDREN
 3

	)

72 
	såìNode


73 { 
åìNode
 * 
	mchûd
[
MAXCHILDREN
];

74 
åìNode
 * 
	msiblög
;

75 
	mlöío
;

76 
NodeKöd
 
	mnodeköd
;

77 uni⁄ { 
StmtKöd
 
	m°mt
; 
ExpKöd
 
	mexp
; 
De˛Köd
 
	mde˛
;} 
	mköd
;

78 uni⁄ { 
TokíTy≥
 
	m›
;

79 
	mvÆ
;

80 * 
	m«me
; } 
	m©å
;

81 
ExpTy≥
 
	mty≥
;

82 } 
	tTªeNode
;

92 
EchoSour˚
;

98 
Tø˚Sˇn
;

104 
Tø˚P¨£
;

109 
Tø˚A«lyze
;

114 
Tø˚Code
;

117 
Eº‹
;

	@lex.yy.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#FLEX_SCANNER


	)

9 
	#YY_FLEX_MAJOR_VERSION
 2

	)

10 
	#YY_FLEX_MINOR_VERSION
 6

	)

11 
	#YY_FLEX_SUBMINOR_VERSION
 4

	)

12 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

13 
	#FLEX_BETA


	)

19 
	~<°dio.h
>

20 
	~<°rög.h
>

21 
	~<î∫o.h
>

22 
	~<°dlib.h
>

28 #i‚de‡
FLEXINT_H


29 
	#FLEXINT_H


	)

33 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

38 #i‚de‡
__STDC_LIMIT_MACROS


39 
	#__STDC_LIMIT_MACROS
 1

	)

42 
	~<öây≥s.h
>

43 
öt8_t
 
	tÊex_öt8_t
;

44 
uöt8_t
 
	tÊex_uöt8_t
;

45 
öt16_t
 
	tÊex_öt16_t
;

46 
uöt16_t
 
	tÊex_uöt16_t
;

47 
öt32_t
 
	tÊex_öt32_t
;

48 
uöt32_t
 
	tÊex_uöt32_t
;

50 sig√d 
	tÊex_öt8_t
;

51 
	tÊex_öt16_t
;

52 
	tÊex_öt32_t
;

53 
	tÊex_uöt8_t
;

54 
	tÊex_uöt16_t
;

55 
	tÊex_uöt32_t
;

58 #i‚de‡
INT8_MIN


59 
	#INT8_MIN
 (-128)

	)

61 #i‚de‡
INT16_MIN


62 
	#INT16_MIN
 (-32767-1)

	)

64 #i‚de‡
INT32_MIN


65 
	#INT32_MIN
 (-2147483647-1)

	)

67 #i‚de‡
INT8_MAX


68 
	#INT8_MAX
 (127)

	)

70 #i‚de‡
INT16_MAX


71 
	#INT16_MAX
 (32767)

	)

73 #i‚de‡
INT32_MAX


74 
	#INT32_MAX
 (2147483647)

	)

76 #i‚de‡
UINT8_MAX


77 
	#UINT8_MAX
 (255U)

	)

79 #i‚de‡
UINT16_MAX


80 
	#UINT16_MAX
 (65535U)

	)

82 #i‚de‡
UINT32_MAX


83 
	#UINT32_MAX
 (4294967295U)

	)

86 #i‚de‡
SIZE_MAX


87 
	#SIZE_MAX
 (~(
size_t
)0)

	)

97 
	#yyc⁄°
 c⁄°

	)

99 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

100 
	#yyn‹ëu∫
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

102 
	#yyn‹ëu∫


	)

106 
	#YY_NULL
 0

	)

111 
	#YY_SC_TO_UI
(
c
Ë((
YY_CHAR
Ë(c))

	)

117 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

122 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

123 
	#YYSTATE
 
YY_START


	)

125 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

127 
	#YY_NEW_FILE
 
	`yyª°¨t
–
yyö
 )

	)

128 
	#YY_END_OF_BUFFER_CHAR
 0

	)

131 #i‚de‡
YY_BUF_SIZE


132 #ifde‡
__ü64__


137 
	#YY_BUF_SIZE
 32768

	)

139 
	#YY_BUF_SIZE
 16384

	)

145 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

147 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


148 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

149 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

152 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


153 
	#YY_TYPEDEF_YY_SIZE_T


	)

154 
size_t
 
	tyy_size_t
;

157 
yyÀng
;

159 
FILE
 *
yyö
, *
yyout
;

161 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

162 
	#EOB_ACT_END_OF_FILE
 1

	)

163 
	#EOB_ACT_LAST_MATCH
 2

	)

165 
	#YY_LESS_LINENO
(
n
)

	)

166 
	#YY_LINENO_REWIND_TO
(
±r
)

	)

169 
	#yyÀss
(
n
) \

173 
yyÀss_ma¸o_¨g
 = (
n
); \

174 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

175 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

176 
YY_RESTORE_YY_MORE_OFFSET
 \

177 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

178 
YY_DO_BEFORE_ACTION
; \

180  0 )

	)

181 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

183 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


184 
	#YY_STRUCT_YY_BUFFER_STATE


	)

185 
	syy_buf„r_°©e


187 
FILE
 *
	myy_öput_fûe
;

189 *
	myy_ch_buf
;

190 *
	myy_buf_pos
;

195 
	myy_buf_size
;

200 
	myy_n_ch¨s
;

206 
	myy_is_our_buf„r
;

213 
	myy_is_öãø˘ive
;

219 
	myy_©_bﬁ
;

221 
	myy_bs_löío
;

222 
	myy_bs_cﬁumn
;

227 
	myy_fûl_buf„r
;

229 
	myy_buf„r_°©us
;

231 
	#YY_BUFFER_NEW
 0

	)

232 
	#YY_BUFFER_NORMAL
 1

	)

243 
	#YY_BUFFER_EOF_PENDING
 2

	)

249 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

250 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

251 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 
NULL
;

259 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

260 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

261 : 
NULL
)

	)

265 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

268 
	gyy_hﬁd_ch¨
;

269 
	gyy_n_ch¨s
;

270 
	gyyÀng
;

273 *
	gyy_c_buf_p
 = 
NULL
;

274 
	gyy_öô
 = 0;

275 
	gyy_°¨t
 = 0;

280 
	gyy_did_buf„r_swôch_⁄_eof
;

282 
yyª°¨t
 ( 
FILE
 *
öput_fûe
 );

283 
yy_swôch_to_buf„r
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 );

284 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 ( 
FILE
 *
fûe
, 
size
 );

285 
yy_dñëe_buf„r
 ( 
YY_BUFFER_STATE
 
b
 );

286 
yy_Êush_buf„r
 ( 
YY_BUFFER_STATE
 
b
 );

287 
yypush_buf„r_°©e
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 );

288 
yyp›_buf„r_°©e
 ( );

290 
yyísuª_buf„r_°ack
 ( );

291 
yy_lﬂd_buf„r_°©e
 ( );

292 
yy_öô_buf„r
 ( 
YY_BUFFER_STATE
 
b
, 
FILE
 *
fûe
 );

293 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
–
YY_CURRENT_BUFFER
 )

	)

295 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 ( *
ba£
, 
yy_size_t
 
size
 );

296 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 ( c⁄° *
yy_°r
 );

297 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 ( c⁄° *
byãs
, 
Àn
 );

299 *
yyÆloc
 ( 
yy_size_t
 );

300 *
yyªÆloc
 ( *, 
yy_size_t
 );

301 
yy‰ì
 ( * );

303 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

304 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

306 i‡–! 
YY_CURRENT_BUFFER
 ){ \

307 
	`yyísuª_buf„r_°ack
 (); \

308 
YY_CURRENT_BUFFER_LVALUE
 = \

309 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

311 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

312 }

	)

313 
	#yy_£t_bﬁ
(
©_bﬁ
) \

315 i‡–! 
YY_CURRENT_BUFFER
 ){\

316 
	`yyísuª_buf„r_°ack
 (); \

317 
YY_CURRENT_BUFFER_LVALUE
 = \

318 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

320 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

321 }

	)

322 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

325 
Êex_uöt8_t
 
	tYY_CHAR
;

327 
FILE
 *
	gyyö
 = 
NULL
, *
	gyyout
 = NULL;

329 
	tyy_°©e_ty≥
;

331 
yylöío
;

332 
	gyylöío
 = 1;

334 *
yyãxt
;

335 #ifde‡
yyãxt_±r


336 #unde‡
yyãxt_±r


338 
	#yyãxt_±r
 
yyãxt


	)

340 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ( );

341 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 ( yy_°©e_ty≥ 
cuºít_°©e
 );

342 
yy_gë_√xt_buf„r
 ( );

343 
yyn‹ëu∫
 
yy_Áèl_îr‹
 ( c⁄° * 
msg
 );

348 
	#YY_DO_BEFORE_ACTION
 \

349 (
yyãxt_±r
Ë
yy_bp
; \

350 
yyÀng
 = (Ë(
yy_˝
 - 
yy_bp
); \

351 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

352 *
yy_˝
 = '\0'; \

353 (
yy_c_buf_p
Ë
yy_˝
;

	)

354 
	#YY_NUM_RULES
 32

	)

355 
	#YY_END_OF_BUFFER
 33

	)

358 
	syy_å™s_öfo


360 
Êex_öt32_t
 
	myy_vîify
;

361 
Êex_öt32_t
 
	myy_nxt
;

363 c⁄° 
Êex_öt16_t
 
	gyy_ac˚±
[57] =

373 c⁄° 
YY_CHAR
 
	gyy_ec
[256] =

405 c⁄° 
YY_CHAR
 
	gyy_mëa
[36] =

413 c⁄° 
Êex_öt16_t
 
	gyy_ba£
[58] =

423 c⁄° 
Êex_öt16_t
 
	gyy_def
[58] =

433 c⁄° 
Êex_öt16_t
 
	gyy_nxt
[101] =

448 c⁄° 
Êex_öt16_t
 
	gyy_chk
[101] =

463 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

464 *
	gyy_œ°_ac˚±ög_˝os
;

466 
yy_Êex_debug
;

467 
	gyy_Êex_debug
 = 0;

472 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

473 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

474 
	#YY_MORE_ADJ
 0

	)

475 
	#YY_RESTORE_YY_MORE_OFFSET


	)

476 *
	gyyãxt
;

485 
	~"globÆs.h
"

486 
	~"utû.h
"

487 
	~"sˇn.h
"

489 
	gtokíSåög
[
MAXTOKENLEN
+1];

490 
	gch
=0;

494 
	#INITIAL
 0

	)

496 #i‚de‡
YY_NO_UNISTD_H


501 
	~<uni°d.h
>

504 #i‚de‡
YY_EXTRA_TYPE


505 
	#YY_EXTRA_TYPE
 *

	)

508 
yy_öô_globÆs
 ( );

513 
yyÀx_de°roy
 ( );

515 
yygë_debug
 ( );

517 
yy£t_debug
 ( 
debug_Êag
 );

519 
YY_EXTRA_TYPE
 
yygë_exåa
 ( );

521 
yy£t_exåa
 ( 
YY_EXTRA_TYPE
 
u£r_deföed
 );

523 
FILE
 *
yygë_ö
 ( );

525 
yy£t_ö
 ( 
FILE
 * 
_ö_°r
 );

527 
FILE
 *
yygë_out
 ( );

529 
yy£t_out
 ( 
FILE
 * 
_out_°r
 );

531 
yygë_Àng
 ( );

533 *
yygë_ãxt
 ( );

535 
yygë_löío
 ( );

537 
yy£t_löío
 ( 
_löe_numbî
 );

543 #i‚de‡
YY_SKIP_YYWRAP


544 #ifde‡
__˝lu•lus


545 "C" 
yywøp
 ( );

547 
yywøp
 ( );

551 #i‚de‡
YY_NO_UNPUT


553 
yyu≈ut
 ( 
c
, *
buf_±r
 );

557 #i‚de‡
yyãxt_±r


558 
yy_Êex_°∫˝y
 ( *, const *, );

561 #ifde‡
YY_NEED_STRLEN


562 
yy_Êex_°æí
 ( const * );

565 #i‚de‡
YY_NO_INPUT


566 #ifde‡
__˝lu•lus


567 
yyöput
 ( );

569 
öput
 ( );

575 #i‚de‡
YY_READ_BUF_SIZE


576 #ifde‡
__ü64__


578 
	#YY_READ_BUF_SIZE
 16384

	)

580 
	#YY_READ_BUF_SIZE
 8192

	)

585 #i‚de‡
ECHO


589 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
yyãxt
, (
size_t
Ë
yyÀng
, 1, 
yyout
 )Ë{} } 0)

	)

595 #i‚de‡
YY_INPUT


596 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

597 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

599 
c
 = '*'; \

600 
n
; \

601  
n
 = 0;Ç < 
max_size
 && \

602 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

603 
buf
[
n
] = (Ë
c
; \

604 i‡–
c
 == '\n' ) \

605 
buf
[
n
++] = (Ë
c
; \

606 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

607 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

608 
ªsu…
 = 
n
; \

612 
î∫o
=0; \

613  (
ªsu…
 = (Ë
	`‰ód
(
buf
, 1, (
yy_size_t
Ë
max_size
, 
yyö
)Ë=0 && 
	`„º‹
(yyin)) \

615 if–
î∫o
 !
EINTR
) \

617 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

620 
î∫o
=0; \

621 
	`˛óªº
(
yyö
); \

625 

	)

632 #i‚de‡
yyãrmö©e


633 
	#yyãrmö©e
(Ë 
YY_NULL


	)

637 #i‚de‡
YY_START_STACK_INCR


638 
	#YY_START_STACK_INCR
 25

	)

642 #i‚de‡
YY_FATAL_ERROR


643 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

651 #i‚de‡
YY_DECL


652 
	#YY_DECL_IS_OURS
 1

	)

654 
yyÀx
 ();

656 
	#YY_DECL
 
	`yyÀx
 ()

	)

662 #i‚de‡
YY_USER_ACTION


663 
	#YY_USER_ACTION


	)

667 #i‚de‡
YY_BREAK


668 
	#YY_BREAK
 ;

	)

671 
	#YY_RULE_SETUP
 \

672 
YY_USER_ACTION


	)

676 
	gYY_DECL


678 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

679 *
	gyy_˝
, *
	gyy_bp
;

680 
	gyy_a˘
;

682 i‡–!(
	gyy_öô
) )

684 (
	gyy_öô
) = 1;

686 #ifde‡
YY_USER_INIT


687 
	gYY_USER_INIT
;

690 i‡–! (
	gyy_°¨t
) )

691 (
	gyy_°¨t
) = 1;

693 i‡–! 
	gyyö
 )

694 
	gyyö
 = 
°dö
;

696 i‡–! 
	gyyout
 )

697 
	gyyout
 = 
°dout
;

699 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

700 
yyísuª_buf„r_°ack
 ();

701 
	gYY_CURRENT_BUFFER_LVALUE
 =

702 
yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

705 
yy_lﬂd_buf„r_°©e
( );

715 
	gyy_˝
 = (
yy_c_buf_p
);

718 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

723 
	gyy_bp
 = 
yy_˝
;

725 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

726 
	gyy_m©ch
:

729 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ;

730 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

732 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

733 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

735  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

737 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

738 i‡–
	gyy_cuºít_°©e
 >= 57 )

739 
yy_c
 = 
yy_mëa
[yy_c];

741 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
];

742 ++
	gyy_˝
;

744  
	gyy_ba£
[
yy_cuºít_°©e
] != 65 );

746 
	gyy_föd_a˘i⁄
:

747 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

748 i‡–
	gyy_a˘
 == 0 )

750 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

751 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

752 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

755 
	gYY_DO_BEFORE_ACTION
;

757 
	gdo_a˘i⁄
:

759  
yy_a˘
 )

763 *
yy_˝
 = (
yy_hﬁd_ch¨
);

764 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

765 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

766 
	gyy_föd_a˘i⁄
;

769 
YY_RULE_SETUP


771 {  
INT
; }

772 
YY_BREAK


774 
YY_RULE_SETUP


776 {  
IF
; }

777 
YY_BREAK


779 
YY_RULE_SETUP


781 {  
ELSE
; }

782 
YY_BREAK


784 
YY_RULE_SETUP


786 {  
WHILE
; }

787 
YY_BREAK


789 
YY_RULE_SETUP


791 {  
RETURN
; }

792 
YY_BREAK


794 
YY_RULE_SETUP


796 {  
VOID
; }

797 
YY_BREAK


799 
YY_RULE_SETUP


801 {  
PLUS
; }

802 
YY_BREAK


804 
YY_RULE_SETUP


806 {  
MINUS
; }

807 
YY_BREAK


809 
YY_RULE_SETUP


811 {  
TIMES
; }

812 
YY_BREAK


814 
YY_RULE_SETUP


816 {  
OVER
; }

817 
YY_BREAK


819 
YY_RULE_SETUP


821 {  
LT
; }

822 
YY_BREAK


824 
YY_RULE_SETUP


826 {  
LE
; }

827 
YY_BREAK


829 
YY_RULE_SETUP


831 {  
GT
; }

832 
YY_BREAK


834 
YY_RULE_SETUP


836 {  
GE
; }

837 
YY_BREAK


839 
YY_RULE_SETUP


841 {  
EQ
; }

842 
YY_BREAK


844 
YY_RULE_SETUP


846 {  
NE
; }

847 
YY_BREAK


849 
YY_RULE_SETUP


851 {  
ASSIGN
; }

852 
YY_BREAK


854 
YY_RULE_SETUP


856 {  
SEMI
; }

857 
YY_BREAK


859 
YY_RULE_SETUP


861 {  
COMMA
; }

862 
YY_BREAK


864 
YY_RULE_SETUP


866 {  
LPAREN
; }

867 
YY_BREAK


869 
YY_RULE_SETUP


871 {  
RPAREN
; }

872 
YY_BREAK


874 
YY_RULE_SETUP


876 {  
LBRACE
; }

877 
YY_BREAK


879 
YY_RULE_SETUP


881 {  
RBRACE
; }

882 
YY_BREAK


884 
YY_RULE_SETUP


886 {  
LCURLY
; }

887 
YY_BREAK


889 
YY_RULE_SETUP


891 {  
RCURLY
; }

892 
YY_BREAK


894 
YY_RULE_SETUP


896 {  
NUM
; }

897 
YY_BREAK


899 
YY_RULE_SETUP


901 {  
ID
; }

902 
YY_BREAK


905 
YY_RULE_SETUP


907 { 
löío
++; }

908 
YY_BREAK


910 
YY_RULE_SETUP


913 
YY_BREAK


915 
YY_RULE_SETUP


917 { 
ERROR
; }

918 
YY_BREAK


919 
YY_STATE_EOF
(
INITIAL
):

921 { 
ENDFILE
; }

922 
YY_BREAK


924 
YY_RULE_SETUP


927 
cuºít
;

928 
	g√xt
;

930 
	gcuºít
 = 
öput
();

932 i‡(
	gcuºít
 == '*') {

933 
√xt
=
öput
();

934 if(
	g√xt
=='/') ;

935 
u≈ut
(
√xt
);

938 i‡(
	gcuºít
 =0 || 
cuºít
 =
EOF
) {

939  
ENDFILE
;

942 i‡(
	gcuºít
 == '\n') {

943 
löío
++;

947 
YY_BREAK


949 
YY_RULE_SETUP


951 
ECHO
;

952 
	gYY_BREAK


955 
	gYY_END_OF_BUFFER
:

958 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

961 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

962 
YY_RESTORE_YY_MORE_OFFSET


964 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

975 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

976 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
yyö
;

977 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

987 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

989 
yy_°©e_ty≥
 
yy_√xt_°©e
;

991 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

993 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1004 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1006 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1008 i‡–
	gyy_√xt_°©e
 )

1011 
	gyy_˝
 = ++(
yy_c_buf_p
);

1012 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1013 
	gyy_m©ch
;

1018 
	gyy_˝
 = (
yy_c_buf_p
);

1019 
	gyy_föd_a˘i⁄
;

1023  
yy_gë_√xt_buf„r
( ) )

1025 
	gEOB_ACT_END_OF_FILE
:

1027 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1029 i‡–
yywøp
( ) )

1040 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1042 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1043 
	gdo_a˘i⁄
;

1048 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1049 
	gYY_NEW_FILE
;

1054 
	gEOB_ACT_CONTINUE_SCAN
:

1055 (
yy_c_buf_p
) =

1056 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1058 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1060 
	gyy_˝
 = (
yy_c_buf_p
);

1061 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1062 
	gyy_m©ch
;

1064 
	gEOB_ACT_LAST_MATCH
:

1065 (
yy_c_buf_p
) =

1066 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1068 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1070 
	gyy_˝
 = (
yy_c_buf_p
);

1071 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1072 
	gyy_föd_a˘i⁄
;

1078 
YY_FATAL_ERROR
(

1092 
	$yy_gë_√xt_buf„r
 ()

1094 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1095 *
sour˚
 = (
yyãxt_±r
);

1096 
numbî_to_move
, 
i
;

1097 
ªt_vÆ
;

1099 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1100 
	`YY_FATAL_ERROR
(

1103 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1105 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1110  
EOB_ACT_END_OF_FILE
;

1118  
EOB_ACT_LAST_MATCH
;

1125 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
) - 1);

1127  
i
 = 0; i < 
numbî_to_move
; ++i )

1128 *(
de°
++Ë*(
sour˚
++);

1130 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1134 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1138 
num_to_ªad
 =

1139 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1141  
num_to_ªad
 <= 0 )

1145 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER_LVALUE
;

1147 
yy_c_buf_p_off£t
 =

1148 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1150 i‡–
b
->
yy_is_our_buf„r
 )

1152 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1154 i‡–
√w_size
 <= 0 )

1155 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1157 
b
->
yy_buf_size
 *= 2;

1159 
b
->
yy_ch_buf
 = (*)

1161 
	`yyªÆloc
–(*Ë
b
->
yy_ch_buf
,

1162 (
yy_size_t
Ë(
b
->
yy_buf_size
 + 2) );

1166 
b
->
yy_ch_buf
 = 
NULL
;

1168 i‡–! 
b
->
yy_ch_buf
 )

1169 
	`YY_FATAL_ERROR
(

1172 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1174 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1175 
numbî_to_move
 - 1;

1179 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1180 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1183 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1184 (
yy_n_ch¨s
), 
num_to_ªad
 );

1186 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1189 i‡–(
yy_n_ch¨s
) == 0 )

1191 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1193 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1194 
	`yyª°¨t
–
yyö
 );

1199 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1200 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1201 
YY_BUFFER_EOF_PENDING
;

1206 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1208 i‡(((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1210 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1211 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`yyªÆloc
(

1212 (*Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
, (
yy_size_t
Ë
√w_size
 );

1213 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1214 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1216 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 = (Ë(
√w_size
 - 2);

1219 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1220 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1221 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1223 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1225  
ªt_vÆ
;

1226 
	}
}

1230 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1232 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1233 *
yy_˝
;

1235 
yy_cuºít_°©e
 = (
yy_°¨t
);

1237  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1239 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1240 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1242 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1243 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1245  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1247 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1248 i‡–
yy_cuºít_°©e
 >= 57 )

1249 
yy_c
 = 
yy_mëa
[yy_c];

1251 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + 
yy_c
];

1254  
yy_cuºít_°©e
;

1255 
	}
}

1262 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1264 
yy_is_jam
;

1265 *
yy_˝
 = (
yy_c_buf_p
);

1267 
YY_CHAR
 
yy_c
 = 1;

1268 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1270 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1271 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1273  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1275 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1276 i‡–
yy_cuºít_°©e
 >= 57 )

1277 
yy_c
 = 
yy_mëa
[yy_c];

1279 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + 
yy_c
];

1280 
yy_is_jam
 = (
yy_cuºít_°©e
 == 56);

1282  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1283 
	}
}

1285 #i‚de‡
YY_NO_UNPUT


1287 
	$yyu≈ut
 (
c
, * 
yy_bp
 )

1289 *
yy_˝
;

1291 
yy_˝
 = (
yy_c_buf_p
);

1294 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1296 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1299 
numbî_to_move
 = (
yy_n_ch¨s
) + 2;

1300 *
de°
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[

1301 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 + 2];

1302 *
sour˚
 =

1303 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
];

1305  
sour˚
 > 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1306 *--
de°
 = *--
sour˚
;

1308 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

1309 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

1310 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 =

1311 (
yy_n_ch¨s
Ë(Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
;

1313 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1314 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

1317 *--
yy_˝
 = (Ë
c
;

1319 (
yyãxt_±r
Ë
yy_bp
;

1320 (
yy_hﬁd_ch¨
Ë*
yy_˝
;

1321 (
yy_c_buf_p
Ë
yy_˝
;

1322 
	}
}

1326 #i‚de‡
YY_NO_INPUT


1327 #ifde‡
__˝lu•lus


1328 
	$yyöput
 ()

1330 
	$öput
 ()

1334 
c
;

1336 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1338 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1344 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1346 *(
yy_c_buf_p
) = '\0';

1350 
off£t
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
));

1351 ++(
yy_c_buf_p
);

1353  
	`yy_gë_√xt_buf„r
( ) )

1355 
EOB_ACT_LAST_MATCH
:

1367 
	`yyª°¨t
–
yyö
 );

1371 
EOB_ACT_END_OF_FILE
:

1373 i‡–
	`yywøp
( ) )

1376 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1377 
YY_NEW_FILE
;

1378 #ifde‡
__˝lu•lus


1379  
	`yyöput
();

1381  
	`öput
();

1385 
EOB_ACT_CONTINUE_SCAN
:

1386 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1392 
c
 = *(*Ë(
yy_c_buf_p
);

1393 *(
yy_c_buf_p
) = '\0';

1394 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1396  
c
;

1397 
	}
}

1405 
	$yyª°¨t
 (
FILE
 * 
öput_fûe
 )

1408 i‡–! 
YY_CURRENT_BUFFER
 ){

1409 
	`yyísuª_buf„r_°ack
 ();

1410 
YY_CURRENT_BUFFER_LVALUE
 =

1411 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

1414 
	`yy_öô_buf„r
–
YY_CURRENT_BUFFER
, 
öput_fûe
 );

1415 
	`yy_lﬂd_buf„r_°©e
( );

1416 
	}
}

1422 
	$yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1430 
	`yyísuª_buf„r_°ack
 ();

1431 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1434 i‡–
YY_CURRENT_BUFFER
 )

1437 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1438 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1439 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1442 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1443 
	`yy_lﬂd_buf„r_°©e
( );

1450 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1451 
	}
}

1453 
	$yy_lﬂd_buf„r_°©e
 ()

1455 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1456 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1457 
yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1458 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1459 
	}
}

1467 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1469 
YY_BUFFER_STATE
 
b
;

1471 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
––
yy_buf„r_°©e
 ) );

1472 i‡–! 
b
 )

1473 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1475 
b
->
yy_buf_size
 = 
size
;

1480 
b
->
yy_ch_buf
 = (*Ë
	`yyÆloc
–(
yy_size_t
Ë(b->
yy_buf_size
 + 2) );

1481 i‡–! 
b
->
yy_ch_buf
 )

1482 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1484 
b
->
yy_is_our_buf„r
 = 1;

1486 
	`yy_öô_buf„r
–
b
, 
fûe
 );

1488  
b
;

1489 
	}
}

1495 
	$yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1498 i‡–! 
b
 )

1501 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1502 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1504 i‡–
b
->
yy_is_our_buf„r
 )

1505 
	`yy‰ì
–(*Ë
b
->
yy_ch_buf
 );

1507 
	`yy‰ì
–(*Ë
b
 );

1508 
	}
}

1514 
	$yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1517 
€ºno
 = 
î∫o
;

1519 
	`yy_Êush_buf„r
–
b
 );

1521 
b
->
yy_öput_fûe
 = 
fûe
;

1522 
b
->
yy_fûl_buf„r
 = 1;

1528 i‡(
b
 !
YY_CURRENT_BUFFER
){

1529 
b
->
yy_bs_löío
 = 1;

1530 
b
->
yy_bs_cﬁumn
 = 0;

1533 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1535 
î∫o
 = 
€ºno
;

1536 
	}
}

1542 
	$yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1544 i‡–! 
b
 )

1547 
b
->
yy_n_ch¨s
 = 0;

1553 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1554 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1556 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1558 
b
->
yy_©_bﬁ
 = 1;

1559 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1561 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1562 
	`yy_lﬂd_buf„r_°©e
( );

1563 
	}
}

1571 
	$yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1573 i‡(
√w_buf„r
 =
NULL
)

1576 
	`yyísuª_buf„r_°ack
();

1579 i‡–
YY_CURRENT_BUFFER
 )

1582 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1583 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1584 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1588 i‡(
YY_CURRENT_BUFFER
)

1589 (
yy_buf„r_°ack_t›
)++;

1590 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1593 
	`yy_lﬂd_buf„r_°©e
( );

1594 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1595 
	}
}

1601 
	$yyp›_buf„r_°©e
 ()

1603 i‡(!
YY_CURRENT_BUFFER
)

1606 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1607 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1608 i‡((
yy_buf„r_°ack_t›
) > 0)

1609 --(
yy_buf„r_°ack_t›
);

1611 i‡(
YY_CURRENT_BUFFER
) {

1612 
	`yy_lﬂd_buf„r_°©e
( );

1613 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1615 
	}
}

1620 
	$yyísuª_buf„r_°ack
 ()

1622 
yy_size_t
 
num_to_Æloc
;

1624 i‡(!(
yy_buf„r_°ack
)) {

1630 
num_to_Æloc
 = 1;

1631 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyÆloc


1632 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1634 i‡–! (
yy_buf„r_°ack
) )

1635 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

1637 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1639 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1640 (
yy_buf„r_°ack_t›
) = 0;

1644 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1647 
yy_size_t
 
grow_size
 = 8 ;

1649 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1650 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyªÆloc


1651 ((
yy_buf„r_°ack
),

1652 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1654 i‡–! (
yy_buf„r_°ack
) )

1655 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

1658 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1659 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1661 
	}
}

1669 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1671 
YY_BUFFER_STATE
 
b
;

1673 i‡–
size
 < 2 ||

1674 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1675 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1677  
NULL
;

1679 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
––
yy_buf„r_°©e
 ) );

1680 i‡–! 
b
 )

1681 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

1683 
b
->
yy_buf_size
 = (Ë(
size
 - 2);

1684 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1685 
b
->
yy_is_our_buf„r
 = 0;

1686 
b
->
yy_öput_fûe
 = 
NULL
;

1687 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1688 
b
->
yy_is_öãø˘ive
 = 0;

1689 
b
->
yy_©_bﬁ
 = 1;

1690 
b
->
yy_fûl_buf„r
 = 0;

1691 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1693 
	`yy_swôch_to_buf„r
–
b
 );

1695  
b
;

1696 
	}
}

1706 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
 (c⁄° * 
yy°r
 )

1709  
	`yy_sˇn_byãs
–
yy°r
, (Ë
	`°æí
(yystr) );

1710 
	}
}

1719 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
 (c⁄° * 
yybyãs
, 
_yybyãs_Àn
 )

1721 
YY_BUFFER_STATE
 
b
;

1722 *
buf
;

1723 
yy_size_t
 
n
;

1724 
i
;

1727 
n
 = (
yy_size_t
Ë(
_yybyãs_Àn
 + 2);

1728 
buf
 = (*Ë
	`yyÆloc
–
n
 );

1729 i‡–! 
buf
 )

1730 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

1732  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

1733 
buf
[
i
] = 
yybyãs
[i];

1735 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1737 
b
 = 
	`yy_sˇn_buf„r
–
buf
, 
n
 );

1738 i‡–! 
b
 )

1739 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

1744 
b
->
yy_is_our_buf„r
 = 1;

1746  
b
;

1747 
	}
}

1749 #i‚de‡
YY_EXIT_FAILURE


1750 
	#YY_EXIT_FAILURE
 2

	)

1753 
yyn‹ëu∫
 
	$yy_Áèl_îr‹
 (c⁄° * 
msg
 )

1755 
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1756 
	`exô
–
YY_EXIT_FAILURE
 );

1757 
	}
}

1761 #unde‡
yyÀss


1762 
	#yyÀss
(
n
) \

1766 
yyÀss_ma¸o_¨g
 = (
n
); \

1767 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

1768 
yyãxt
[
yyÀng
] = (
yy_hﬁd_ch¨
); \

1769 (
yy_c_buf_p
Ë
yyãxt
 + 
yyÀss_ma¸o_¨g
; \

1770 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

1771 *(
yy_c_buf_p
) = '\0'; \

1772 
yyÀng
 = 
yyÀss_ma¸o_¨g
; \

1774  0 )

	)

1781 
	$yygë_löío
 ()

1784  
yylöío
;

1785 
	}
}

1790 
FILE
 *
	$yygë_ö
 ()

1792  
yyö
;

1793 
	}
}

1798 
FILE
 *
	$yygë_out
 ()

1800  
yyout
;

1801 
	}
}

1806 
	$yygë_Àng
 ()

1808  
yyÀng
;

1809 
	}
}

1815 *
	$yygë_ãxt
 ()

1817  
yyãxt
;

1818 
	}
}

1824 
	$yy£t_löío
 (
_löe_numbî
 )

1827 
yylöío
 = 
_löe_numbî
;

1828 
	}
}

1836 
	$yy£t_ö
 (
FILE
 * 
_ö_°r
 )

1838 
yyö
 = 
_ö_°r
 ;

1839 
	}
}

1841 
	$yy£t_out
 (
FILE
 * 
_out_°r
 )

1843 
yyout
 = 
_out_°r
 ;

1844 
	}
}

1846 
	$yygë_debug
 ()

1848  
yy_Êex_debug
;

1849 
	}
}

1851 
	$yy£t_debug
 (
_bdebug
 )

1853 
yy_Êex_debug
 = 
_bdebug
 ;

1854 
	}
}

1856 
	$yy_öô_globÆs
 ()

1862 (
yy_buf„r_°ack
Ë
NULL
;

1863 (
yy_buf„r_°ack_t›
) = 0;

1864 (
yy_buf„r_°ack_max
) = 0;

1865 (
yy_c_buf_p
Ë
NULL
;

1866 (
yy_öô
) = 0;

1867 (
yy_°¨t
) = 0;

1870 #ifde‡
YY_STDINIT


1871 
yyö
 = 
°dö
;

1872 
yyout
 = 
°dout
;

1874 
yyö
 = 
NULL
;

1875 
yyout
 = 
NULL
;

1882 
	}
}

1885 
	$yyÀx_de°roy
 ()

1889 
YY_CURRENT_BUFFER
){

1890 
	`yy_dñëe_buf„r
–
YY_CURRENT_BUFFER
 );

1891 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1892 
	`yyp›_buf„r_°©e
();

1896 
	`yy‰ì
((
yy_buf„r_°ack
) );

1897 (
yy_buf„r_°ack
Ë
NULL
;

1901 
	`yy_öô_globÆs
( );

1904 
	}
}

1910 #i‚de‡
yyãxt_±r


1911 
	$yy_Êex_°∫˝y
 (* 
s1
, c⁄° * 
s2
, 
n
 )

1914 
i
;

1915  
i
 = 0; i < 
n
; ++i )

1916 
s1
[
i
] = 
s2
[i];

1917 
	}
}

1920 #ifde‡
YY_NEED_STRLEN


1921 
	$yy_Êex_°æí
 (c⁄° * 
s
 )

1923 
n
;

1924  
n
 = 0; 
s
[n]; ++n )

1927  
n
;

1928 
	}
}

1931 *
	$yyÆloc
 (
yy_size_t
 
size
 )

1933  
	`mÆloc
(
size
);

1934 
	}
}

1936 *
	$yyªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

1946  
	`ªÆloc
(
±r
, 
size
);

1947 
	}
}

1949 
	$yy‰ì
 (* 
±r
 )

1951 
	`‰ì
–(*Ë
±r
 );

1952 
	}
}

1954 
	#YYTABLES_NAME
 "yyèbÀs"

	)

1959 
TokíTy≥
 
	$gëTokí
()

1960 { 
fú°Time
 = 
TRUE
;

1961 
TokíTy≥
 
cuºítTokí
;

1962 i‡(
fú°Time
)

1963 { 
fú°Time
 = 
FALSE
;

1964 
löío
++;

1965 
yyö
 = 
sour˚
;

1966 
yyout
 = 
li°ög
;

1968 
cuºítTokí
 = 
	`yyÀx
();

1969 
	`°∫˝y
(
tokíSåög
,
yyãxt
,
MAXTOKENLEN
);

1970 i‡(
Tø˚Sˇn
) {

1971 
	`Ârötf
(
li°ög
,"\t%d: ",
löío
);

1972 
	`¥ötTokí
(
cuºítTokí
,
tokíSåög
);

1974  
cuºítTokí
;

1975 
	}
}

	@main.c

8 
	~"globÆs.h
"

11 
	#NO_PARSE
 
FALSE


	)

13 
	#NO_ANALYZE
 
TRUE


	)

18 
	#NO_CODE
 
FALSE


	)

20 
	~"utû.h
"

21 #i‡
NO_PARSE


22 
	~"sˇn.h
"

24 
	~"∑r£.h
"

25 #i‡!
NO_ANALYZE


26 
	~"™Æyze.h
"

27 #i‡!
NO_CODE


28 
	~"cgí.h
"

34 
	glöío
 = 0;

35 
FILE
 * 
	gsour˚
;

36 
FILE
 * 
	gli°ög
;

37 
FILE
 * 
	gcode
;

40 
	gEchoSour˚
 = 
FALSE
;

41 
	gTø˚Sˇn
 = 
FALSE
;

42 
	gTø˚P¨£
 = 
TRUE
;

43 
	gTø˚A«lyze
 = 
FALSE
;

44 
	gTø˚Code
 = 
FALSE
;

46 
	gEº‹
 = 
FALSE
;

48 
	$maö
–
¨gc
, * 
¨gv
[] )

49 { 
TªeNode
 * 
sy¡axTªe
;

50 
pgm
[120];

51 i‡(
¨gc
 != 2)

52 { 
	`Ârötf
(
°dîr
,"ußge: %†<fûíame>\n",
¨gv
[0]);

53 
	`exô
(1);

55 
	`°r˝y
(
pgm
,
¨gv
[1]) ;

56 i‡(
	`°rchr
 (
pgm
, '.'Ë=
NULL
)

57 
	`°rˇt
(
pgm
,".tny");

58 
sour˚
 = 
	`f›í
(
pgm
,"r");

59 i‡(
sour˚
==
NULL
)

60 { 
	`Ârötf
(
°dîr
,"Fûê%†nŸ found\n",
pgm
);

61 
	`exô
(1);

63 
li°ög
 = 
°dout
;

64 
	`Ârötf
(
li°ög
,"\nTINY COMPILATION: %s\n",
pgm
);

65 #i‡
NO_PARSE


66 
	`gëTokí
()!=
ENDFILE
);

68 
sy¡axTªe
 = 
	`∑r£
();

69 i‡(
Tø˚P¨£
) {

70 
	`Ârötf
(
li°ög
,"\nSyntaxÅree:\n");

71 
	`¥ötTªe
(
sy¡axTªe
);

73 #i‡!
NO_ANALYZE


74 i‡(! 
Eº‹
)

75 { i‡(
Tø˚A«lyze
Ë
	`Ârötf
(
li°ög
,"\nBuilding Symbol Table...\n");

76 
	`buûdSymèb
(
sy¡axTªe
);

77 i‡(
Tø˚A«lyze
Ë
	`Ârötf
(
li°ög
,"\nChecking Types...\n");

78 
	`ty≥Check
(
sy¡axTªe
);

79 i‡(
Tø˚A«lyze
Ë
	`Ârötf
(
li°ög
,"\nType Checking Finished\n");

81 #i‡!
NO_CODE


82 i‡(! 
Eº‹
)

83 { * 
codefûe
;

84 
‚Àn
 = 
	`°rc•n
(
pgm
,".");

85 
codefûe
 = (*Ë
	`ˇŒoc
(
‚Àn
+4, ());

86 
	`°∫˝y
(
codefûe
,
pgm
,
‚Àn
);

87 
	`°rˇt
(
codefûe
,".tm");

88 
code
 = 
	`f›í
(
codefûe
,"w");

89 i‡(
code
 =
NULL
)

90 { 
	`¥ötf
("U«bÀÅÿ›í %s\n",
codefûe
);

91 
	`exô
(1);

93 
	`codeGí
(
sy¡axTªe
,
codefûe
);

94 
	`f˛o£
(
code
);

99 
	`f˛o£
(
sour˚
);

101 
	}
}

	@parse.c

8 
	~"globÆs.h
"

9 
	~"utû.h
"

10 
	~"sˇn.h
"

11 
	~"∑r£.h
"

13 
TokíTy≥
 
	gtokí
;

16 
TªeNode
 * 
°mt_£quí˚
();

17 
TªeNode
 * 
°©emít
();

18 
TªeNode
 * 
if_°mt
();

19 
TªeNode
 * 
ª≥©_°mt
();

20 
TªeNode
 * 
assign_°mt
();

21 
TªeNode
 * 
ªad_°mt
();

22 
TªeNode
 * 
wrôe_°mt
();

23 
TªeNode
 * 
exp
();

24 
TªeNode
 * 
sim∂e_exp
();

25 
TªeNode
 * 
ãrm
();

26 
TªeNode
 * 
Á˘‹
();

28 
	$sy¡axEº‹
(* 
mesßge
)

29 { 
	`Ârötf
(
li°ög
,"\n>>> ");

30 
	`Ârötf
(
li°ög
,"Sy¡axÉº‹áàlöê%d: %s",
löío
,
mesßge
);

31 
Eº‹
 = 
TRUE
;

32 
	}
}

34 
	$m©ch
(
TokíTy≥
 
ex≥˘ed
)

35 { i‡(
tokí
 =
ex≥˘ed
Ëtokí = 
	`gëTokí
();

37 
	`sy¡axEº‹
("unexpectedÅoken -> ");

38 
	`¥ötTokí
(
tokí
,
tokíSåög
);

39 
	`Ârötf
(
li°ög
," ");

41 
	}
}

43 
TªeNode
 * 
	$°mt_£quí˚
()

44 { 
TªeNode
 * 
t
 = 
	`°©emít
();

45 
TªeNode
 * 
p
 = 
t
;

46 (
tokí
!=
ENDFILE
Ë&& (tokí!=
END
) &&

47 (
tokí
!=
ELSE
Ë&& (tokí!=
UNTIL
))

48 { 
TªeNode
 * 
q
;

49 
	`m©ch
(
SEMI
);

50 
q
 = 
	`°©emít
();

51 i‡(
q
!=
NULL
) {

52 i‡(
t
==
NULL
Ëà
p
 = 
q
;

54 { 
p
->
siblög
 = 
q
;

55 
p
 = 
q
;

59  
t
;

60 
	}
}

62 
TªeNode
 * 
	$°©emít
()

63 { 
TªeNode
 * 
t
 = 
NULL
;

64 
tokí
) {

65 
IF
 : 
t
 = 
	`if_°mt
(); ;

66 
REPEAT
 : 
t
 = 
	`ª≥©_°mt
(); ;

67 
ID
 : 
t
 = 
	`assign_°mt
(); ;

68 
READ
 : 
t
 = 
	`ªad_°mt
(); ;

69 
WRITE
 : 
t
 = 
	`wrôe_°mt
(); ;

70  : 
	`sy¡axEº‹
("unexpectedÅoken -> ");

71 
	`¥ötTokí
(
tokí
,
tokíSåög
);

72 
tokí
 = 
	`gëTokí
();

75  
t
;

76 
	}
}

78 
TªeNode
 * 
	$if_°mt
()

79 { 
TªeNode
 * 
t
 = 
	`√wStmtNode
(
IfK
);

80 
	`m©ch
(
IF
);

81 i‡(
t
!=
NULL
Ët->
chûd
[0] = 
	`exp
();

82 
	`m©ch
(
THEN
);

83 i‡(
t
!=
NULL
Ët->
chûd
[1] = 
	`°mt_£quí˚
();

84 i‡(
tokí
==
ELSE
) {

85 
	`m©ch
(
ELSE
);

86 i‡(
t
!=
NULL
Ët->
chûd
[2] = 
	`°mt_£quí˚
();

88 
	`m©ch
(
END
);

89  
t
;

90 
	}
}

92 
TªeNode
 * 
	$ª≥©_°mt
()

93 { 
TªeNode
 * 
t
 = 
	`√wStmtNode
(
RïótK
);

94 
	`m©ch
(
REPEAT
);

95 i‡(
t
!=
NULL
Ët->
chûd
[0] = 
	`°mt_£quí˚
();

96 
	`m©ch
(
UNTIL
);

97 i‡(
t
!=
NULL
Ët->
chûd
[1] = 
	`exp
();

98  
t
;

99 
	}
}

101 
TªeNode
 * 
	$assign_°mt
()

102 { 
TªeNode
 * 
t
 = 
	`√wStmtNode
(
AssignK
);

103 i‡((
t
!=
NULL
Ë&& (
tokí
==
ID
))

104 
t
->
©å
.
«me
 = 
	`c›ySåög
(
tokíSåög
);

105 
	`m©ch
(
ID
);

106 
	`m©ch
(
ASSIGN
);

107 i‡(
t
!=
NULL
Ët->
chûd
[0] = 
	`exp
();

108  
t
;

109 
	}
}

111 
TªeNode
 * 
	$ªad_°mt
()

112 { 
TªeNode
 * 
t
 = 
	`√wStmtNode
(
RódK
);

113 
	`m©ch
(
READ
);

114 i‡((
t
!=
NULL
Ë&& (
tokí
==
ID
))

115 
t
->
©å
.
«me
 = 
	`c›ySåög
(
tokíSåög
);

116 
	`m©ch
(
ID
);

117  
t
;

118 
	}
}

120 
TªeNode
 * 
	$wrôe_°mt
()

121 { 
TªeNode
 * 
t
 = 
	`√wStmtNode
(
WrôeK
);

122 
	`m©ch
(
WRITE
);

123 i‡(
t
!=
NULL
Ët->
chûd
[0] = 
	`exp
();

124  
t
;

125 
	}
}

127 
TªeNode
 * 
	$exp
()

128 { 
TªeNode
 * 
t
 = 
	`sim∂e_exp
();

129 i‡((
tokí
==
LT
)||—okí==
EQ
)) {

130 
TªeNode
 * 
p
 = 
	`√wExpNode
(
OpK
);

131 i‡(
p
!=
NULL
) {

132 
p
->
chûd
[0] = 
t
;

133 
p
->
©å
.
›
 = 
tokí
;

134 
t
 = 
p
;

136 
	`m©ch
(
tokí
);

137 i‡(
t
!=
NULL
)

138 
t
->
chûd
[1] = 
	`sim∂e_exp
();

140  
t
;

141 
	}
}

143 
TªeNode
 * 
	$sim∂e_exp
()

144 { 
TªeNode
 * 
t
 = 
	`ãrm
();

145 (
tokí
==
PLUS
)||—okí==
MINUS
))

146 { 
TªeNode
 * 
p
 = 
	`√wExpNode
(
OpK
);

147 i‡(
p
!=
NULL
) {

148 
p
->
chûd
[0] = 
t
;

149 
p
->
©å
.
›
 = 
tokí
;

150 
t
 = 
p
;

151 
	`m©ch
(
tokí
);

152 
t
->
chûd
[1] = 
	`ãrm
();

155  
t
;

156 
	}
}

158 
TªeNode
 * 
	$ãrm
()

159 { 
TªeNode
 * 
t
 = 
	`Á˘‹
();

160 (
tokí
==
TIMES
)||—okí==
OVER
))

161 { 
TªeNode
 * 
p
 = 
	`√wExpNode
(
OpK
);

162 i‡(
p
!=
NULL
) {

163 
p
->
chûd
[0] = 
t
;

164 
p
->
©å
.
›
 = 
tokí
;

165 
t
 = 
p
;

166 
	`m©ch
(
tokí
);

167 
p
->
chûd
[1] = 
	`Á˘‹
();

170  
t
;

171 
	}
}

173 
TªeNode
 * 
	$Á˘‹
()

174 { 
TªeNode
 * 
t
 = 
NULL
;

175 
tokí
) {

176 
NUM
 :

177 
t
 = 
	`√wExpNode
(
C⁄°K
);

178 i‡((
t
!=
NULL
Ë&& (
tokí
==
NUM
))

179 
t
->
©å
.
vÆ
 = 
	`©oi
(
tokíSåög
);

180 
	`m©ch
(
NUM
);

182 
ID
 :

183 
t
 = 
	`√wExpNode
(
IdK
);

184 i‡((
t
!=
NULL
Ë&& (
tokí
==
ID
))

185 
t
->
©å
.
«me
 = 
	`c›ySåög
(
tokíSåög
);

186 
	`m©ch
(
ID
);

188 
LPAREN
 :

189 
	`m©ch
(
LPAREN
);

190 
t
 = 
	`exp
();

191 
	`m©ch
(
RPAREN
);

194 
	`sy¡axEº‹
("unexpectedÅoken -> ");

195 
	`¥ötTokí
(
tokí
,
tokíSåög
);

196 
tokí
 = 
	`gëTokí
();

199  
t
;

200 
	}
}

208 
TªeNode
 * 
	$∑r£
()

209 { 
TªeNode
 * 
t
;

210 
tokí
 = 
	`gëTokí
();

211 
t
 = 
	`°mt_£quí˚
();

212 i‡(
tokí
!=
ENDFILE
)

213 
	`sy¡axEº‹
("CodeÉnds before file\n");

214  
t
;

215 
	}
}

	@parse.h

8 #i‚de‡
_PARSE_H_


9 
	#_PARSE_H_


	)

14 
TªeNode
 * 
∑r£
();

	@scan.c

8 
	~"globÆs.h
"

9 
	~"utû.h
"

10 
	~"sˇn.h
"

14 { 
	mSTART
,
	mINEQ
,
	mINCOMMENT
,
	mINNE
,
	mINLT
,
	mINGT
,
	mINNUM
,
	mINID
,
	mDONE
,
	mINCOMMENT_
 }

15 
	tSèãTy≥
;

18 
	gtokíSåög
[
MAXTOKENLEN
+1];

22 
	#BUFLEN
 256

	)

24 
	glöeBuf
[
BUFLEN
];

25 
	glöïos
 = 0;

26 
	gbufsize
 = 0;

27 
	gEOF_Êag
 = 
FALSE
;

33 
	$gëNextCh¨
()

34 { i‡(!(
löïos
 < 
bufsize
))

35 { 
löío
++;

36 i‡(
	`fgës
(
löeBuf
,
BUFLEN
-1,
sour˚
))

37 { i‡(
EchoSour˚
Ë
	`Ârötf
(
li°ög
,"%4d: %s",
löío
,
löeBuf
);

38 
bufsize
 = 
	`°æí
(
löeBuf
);

39 
löïos
 = 0;

40  
löeBuf
[
löïos
++];

43 { 
EOF_Êag
 = 
TRUE
;

44  
EOF
;

47  
löeBuf
[
löïos
++];

48 
	}
}

53 
	$ungëNextCh¨
()

54 { i‡(!
EOF_Êag
Ë
löïos
-- ;
	}
}

58 { * 
	m°r
;

59 
TokíTy≥
 
	mtok
;

60 } 
	gª£rvedW‹ds
[
MAXRESERVED
]

61 {{"if",
IF
},{"ñ£",
ELSE
},{"whûe",
WHILE
},

62 {"ªtu∫",
RETURN
},{"öt",
INT
},{"void",
VOID
},};

66 
TokíTy≥
 
	$ª£rvedLookup
 (* 
s
)

67 { 
i
;

68 
i
=0;i<
MAXRESERVED
;i++)

69 i‡(!
	`°rcmp
(
s
,
ª£rvedW‹ds
[
i
].
°r
))

70  
ª£rvedW‹ds
[
i
].
tok
;

71  
ID
;

72 
	}
}

80 
TokíTy≥
 
	$gëTokí
()

82 
tokíSåögIndex
 = 0;

84 
TokíTy≥
 
cuºítTokí
;

86 
SèãTy≥
 
°©e
 = 
START
;

88 
ßve
;

89 
°©e
 !
DONE
)

90 { 
c
 = 
	`gëNextCh¨
();

91 
√xt
;

92 
ßve
 = 
TRUE
;

93 
°©e
)

94 { 
START
:

95 i‡(
	`isdigô
(
c
))

96 
°©e
 = 
INNUM
;

97 i‡(
	`ißÕha
(
c
))

98 
°©e
 = 
INID
;

99 i‡(
c
=='!')

100 
°©e
 = 
INNE
;

101 i‡(
c
=='>')

102 
°©e
 = 
INGT
;

103 i‡(
c
=='<')

104 
°©e
 = 
INLT
;

105 i‡(
c
 == '=')

106 
°©e
 = 
INEQ
;

108 i‡(
c
 == '*') {

109 
°©e
 = 
DONE
;

110 
cuºítTokí
 = 
TIMES
;

112 i‡((
c
 == ' ') || (c == '\t') || (c == '\n'))

113 
ßve
 = 
FALSE
;

115 i‡(
c
 == '/')

117 
√xt
=
	`gëNextCh¨
();

118 if(
√xt
=='*'){

120 
ßve
 = 
FALSE
;

121 
°©e
 = 
INCOMMENT
;

124 
	`ungëNextCh¨
();

125 
°©e
 = 
DONE
;

126 
cuºítTokí
 = 
OVER
;

133 
°©e
 = 
DONE
;

134 
c
)

135 { 
EOF
:

136 
ßve
 = 
FALSE
;

137 
cuºítTokí
 = 
ENDFILE
;

141 
cuºítTokí
 = 
PLUS
;

144 
cuºítTokí
 = 
MINUS
;

147 
cuºítTokí
 = 
LPAREN
;

150 
cuºítTokí
 = 
RPAREN
;

153 
cuºítTokí
 = 
LCURLY
;

156 
cuºítTokí
 = 
RCURLY
;

159 
cuºítTokí
 = 
LBRACE
;

162 
cuºítTokí
 = 
RBRACE
;

165 
cuºítTokí
 = 
SEMI
;

168 
cuºítTokí
 = 
COMMA
;

171 
cuºítTokí
 = 
ERROR
;

177 
INCOMMENT
:

178 
ßve
 = 
FALSE
;

179 i‡(
c
 =
EOF
)

180 { 
°©e
=
DONE
;

181 
cuºítTokí
 = 
ENDFILE
;

183 i‡(
c
 == '*'){

184 
°©e
 = 
INCOMMENT_
;

187 
INCOMMENT_
:

188 
ßve
 = 
FALSE
;

189 i‡(
c
 ='/'){ 
°©e
 = 
START
; }

190 i‡(
c
 =
EOF
) {

191 
°©e
 = 
DONE
;

192 
cuºítTokí
 = 
ENDFILE
;

194 i‡(
c
=='*'Ë{
°©e
 =
INCOMMENT_
;}

195 {
°©e
 = 
INCOMMENT
;}

197 
INEQ
:

198 
°©e
 = 
DONE
;

199 i‡(
c
 == '=')

200 
cuºítTokí
 = 
EQ
;

201 i‡(
c
 =
EOF
) {

202 
°©e
 = 
DONE
;

203 
cuºítTokí
 = 
ENDFILE
;

207 
	`ungëNextCh¨
();

208 
cuºítTokí
 = 
ASSIGN
;

212 
INGT
:

213 
°©e
 = 
DONE
;

214 i‡(
c
 == '=')

215 
cuºítTokí
 = 
GE
;

216 i‡(
c
 =
EOF
) {

217 
°©e
 = 
DONE
;

218 
cuºítTokí
 = 
ENDFILE
;

222 
	`ungëNextCh¨
();

223 
ßve
 = 
FALSE
;

224 
cuºítTokí
 = 
GT
;

227 
INLT
:

228 
°©e
 = 
DONE
;

229 i‡(
c
 == '=')

230 
cuºítTokí
 = 
LE
;

231 i‡(
c
 =
EOF
) {

232 
°©e
 = 
DONE
;

233 
cuºítTokí
 = 
ENDFILE
;

237 
	`ungëNextCh¨
();

238 
ßve
 = 
FALSE
;

239 
cuºítTokí
 = 
LT
;

242 
INNE
:

243 
°©e
 = 
DONE
;

244 i‡(
c
 == '=')

245 
cuºítTokí
 = 
NE
;

246 i‡(
c
 =
EOF
) {

247 
°©e
 = 
DONE
;

248 
cuºítTokí
 = 
ENDFILE
;

252 
	`ungëNextCh¨
();

253 
ßve
 = 
FALSE
;

254 
cuºítTokí
 = 
ERROR
;

258 
INNUM
:

259 i‡(
c
 =
EOF
) {

260 
°©e
 = 
DONE
;

261 
cuºítTokí
 = 
ENDFILE
;

263 i‡(!
	`isdigô
(
c
))

265 
	`ungëNextCh¨
();

266 
ßve
 = 
FALSE
;

267 
°©e
 = 
DONE
;

268 
cuºítTokí
 = 
NUM
;

271 
INID
:

272 i‡(
	`ißÕha
(
c
)||
	`isdigô
(c)){

273 
°©e
 = 
INID
;

275 i‡(
c
 =
EOF
) {

276 
°©e
 = 
DONE
;

277 
cuºítTokí
 = 
ENDFILE
;

281 
	`ungëNextCh¨
();

282 
ßve
 = 
FALSE
;

283 
°©e
 = 
DONE
;

284 
cuºítTokí
 = 
ID
;

287 
DONE
:

289 
	`Ârötf
(
li°ög
,"Sˇ¬î Bug: sèã%d\n",
°©e
);

290 
°©e
 = 
DONE
;

291 
cuºítTokí
 = 
ERROR
;

294 i‡((
ßve
Ë&& (
tokíSåögIndex
 <
MAXTOKENLEN
))

295 
tokíSåög
[
tokíSåögIndex
++] = (Ë
c
;

296 i‡(
°©e
 =
DONE
)

297 { 
tokíSåög
[
tokíSåögIndex
] = '\0';

298 i‡(
cuºítTokí
 =
ID
)

299 
cuºítTokí
 = 
	`ª£rvedLookup
(
tokíSåög
);

302 i‡(
Tø˚Sˇn
) {

303 
	`Ârötf
(
li°ög
,"\t%d: ",
löío
);

304 
	`¥ötTokí
(
cuºítTokí
,
tokíSåög
);

306  
cuºítTokí
;

307 
	}
}

	@scan.h

8 #i‚de‡
_SCAN_H_


9 
	#_SCAN_H_


	)

12 
	#MAXTOKENLEN
 40

	)

15 
tokíSåög
[
MAXTOKENLEN
+1];

20 
TokíTy≥
 
gëTokí
();

	@symtab.c

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

14 
	~"symèb.h
"

17 
	#SIZE
 211

	)

21 
	#SHIFT
 4

	)

24 
	$hash
 ( * 
key
 )

25 { 
ãmp
 = 0;

26 
i
 = 0;

27 
key
[
i
] != '\0')

28 { 
ãmp
 = (—em∞<< 
SHIFT
Ë+ 
key
[
i
]Ë% 
SIZE
;

29 ++
i
;

31  
ãmp
;

32 
	}
}

37 
	sLöeLi°Rec


38 { 
	mlöío
;

39 
LöeLi°Rec
 * 
	m√xt
;

40 } * 
	tLöeLi°
;

48 
	sBuckëLi°Rec


49 { * 
	m«me
;

50 
LöeLi°
 
	mlöes
;

51 
	mmemloc
 ;

52 
BuckëLi°Rec
 * 
	m√xt
;

53 } * 
	tBuckëLi°
;

56 
BuckëLi°
 
	ghashTabÀ
[
SIZE
];

63 
	$°_ö£π
–* 
«me
, 
löío
, 
loc
 )

64 { 
h
 = 
	`hash
(
«me
);

65 
BuckëLi°
 
l
 = 
hashTabÀ
[
h
];

66 (
l
 !
NULL
Ë&& (
	`°rcmp
(
«me
,l->name) != 0))

67 
l
 =Ü->
√xt
;

68 i‡(
l
 =
NULL
)

69 { 
l
 = (
BuckëLi°
Ë
	`mÆloc
((
BuckëLi°Rec
));

70 
l
->
«me
 =Çame;

71 
l
->
löes
 = (
LöeLi°
Ë
	`mÆloc
((
LöeLi°Rec
));

72 
l
->
löes
->
löío
 =Üineno;

73 
l
->
memloc
 = 
loc
;

74 
l
->
löes
->
√xt
 = 
NULL
;

75 
l
->
√xt
 = 
hashTabÀ
[
h
];

76 
hashTabÀ
[
h
] = 
l
; }

78 { 
LöeLi°
 
t
 = 
l
->
löes
;

79 
t
->
√xt
 !
NULL
)Å =Å->next;

80 
t
->
√xt
 = (
LöeLi°
Ë
	`mÆloc
((
LöeLi°Rec
));

81 
t
->
√xt
->
löío
 =Üineno;

82 
t
->
√xt
->√xà
NULL
;

84 
	}
}

89 
	$°_lookup
 ( * 
«me
 )

90 { 
h
 = 
	`hash
(
«me
);

91 
BuckëLi°
 
l
 = 
hashTabÀ
[
h
];

92 (
l
 !
NULL
Ë&& (
	`°rcmp
(
«me
,l->name) != 0))

93 
l
 =Ü->
√xt
;

94 i‡(
l
 =
NULL
)  -1;

95  
l
->
memloc
;

96 
	}
}

102 
	$¥ötSymTab
(
FILE
 * 
li°ög
)

103 { 
i
;

104 
	`Ârötf
(
li°ög
,"Variable Name Location Line Numbers\n");

105 
	`Ârötf
(
li°ög
,"------------- -------- ------------\n");

106 
i
=0;i<
SIZE
;++i)

107 { i‡(
hashTabÀ
[
i
] !
NULL
)

108 { 
BuckëLi°
 
l
 = 
hashTabÀ
[
i
];

109 
l
 !
NULL
)

110 { 
LöeLi°
 
t
 = 
l
->
löes
;

111 
	`Ârötf
(
li°ög
,"%-14†",
l
->
«me
);

112 
	`Ârötf
(
li°ög
,"%-8d ",
l
->
memloc
);

113 
t
 !
NULL
)

114 { 
	`Ârötf
(
li°ög
,"%4d ",
t
->
löío
);

115 
t
 =Å->
√xt
;

117 
	`Ârötf
(
li°ög
,"\n");

118 
l
 =Ü->
√xt
;

122 
	}
}

	@symtab.h

9 #i‚de‡
_SYMTAB_H_


10 
	#_SYMTAB_H_


	)

17 
°_ö£π
–* 
«me
, 
löío
, 
loc
 );

22 
°_lookup
 ( * 
«me
 );

28 
¥ötSymTab
(
FILE
 * 
li°ög
);

	@tm.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~<˘y≥.h
>

13 #i‚de‡
TRUE


14 
	#TRUE
 1

	)

16 #i‚de‡
FALSE


17 
	#FALSE
 0

	)

21 
	#IADDR_SIZE
 1024

	)

22 
	#DADDR_SIZE
 1024

	)

23 
	#NO_REGS
 8

	)

24 
	#PC_REG
 7

	)

26 
	#LINESIZE
 121

	)

27 
	#WORDSIZE
 20

	)

32 
	m›˛RR
,

33 
	m›˛RM
,

34 
	m›˛RA


35 } 
	tOPCLASS
;

39 
	m›HALT
,

40 
	m›IN
,

41 
	m›OUT
,

42 
	m›ADD
,

43 
	m›SUB
,

44 
	m›MUL
,

45 
	m›DIV
,

46 
	m›RRLim
,

49 
	m›LD
,

50 
	m›ST
,

51 
	m›RMLim
,

54 
	m›LDA
,

55 
	m›LDC
,

56 
	m›JLT
,

57 
	m›JLE
,

58 
	m›JGT
,

59 
	m›JGE
,

60 
	m›JEQ
,

61 
	m›JNE
,

62 
	m›RALim


63 } 
	tOPCODE
;

66 
	m§OKAY
,

67 
	m§HALT
,

68 
	m§IMEM_ERR
,

69 
	m§DMEM_ERR
,

70 
	m§ZERODIVIDE


71 } 
	tSTEPRESULT
;

74 
	mi›
 ;

75 
	mürg1
 ;

76 
	mürg2
 ;

77 
	mürg3
 ;

78 } 
	tINSTRUCTION
;

81 
	gûoc
 = 0 ;

82 
	gdloc
 = 0 ;

83 
	gåa˚Êag
 = 
FALSE
;

84 
	gicou¡Êag
 = 
FALSE
;

86 
INSTRUCTION
 
	giMem
 [
IADDR_SIZE
];

87 
	gdMem
 [
DADDR_SIZE
];

88 
	gªg
 [
NO_REGS
];

90 * 
	g›CodeTab
[]

98 * 
	g°ïResu…Tab
[]

103 
	gpgmName
[20];

104 
FILE
 *
	gpgm
 ;

106 
	gö_Löe
[
LINESIZE
] ;

107 
	glöeLí
 ;

108 
	göCﬁ
 ;

109 
	gnum
 ;

110 
	gw‹d
[
WORDSIZE
] ;

111 
	gch
 ;

112 
	gd⁄e
 ;

115 
	$›Cœss
–
c
 )

116 { i‡–
c
 <
›RRLim
Ë ( 
›˛RR
 );

117 i‡–
c
 <
›RMLim
Ë ( 
›˛RM
 );

118  ( 
›˛RA
 );

119 
	}
}

122 
	$wrôeIn°ru˘i⁄
 ( 
loc
 )

123 { 
	`¥ötf
–"%5d: ", 
loc
) ;

124 i‡–(
loc
 >0Ë&& (lo¯< 
IADDR_SIZE
) )

125 { 
	`¥ötf
("%6s%3d,", 
›CodeTab
[
iMem
[
loc
].
i›
], iMem[loc].
ürg1
);

126  
	`›Cœss
(
iMem
[
loc
].
i›
) )

127 { 
›˛RR
: 
	`¥ötf
("%1d,%1d", 
iMem
[
loc
].
ürg2
, iMem[loc].
ürg3
);

129 
›˛RM
:

130 
›˛RA
: 
	`¥ötf
("%3d(%1d)", 
iMem
[
loc
].
ürg2
, iMem[loc].
ürg3
);

133 
	`¥ötf
 ("\n") ;

135 
	}
}

138 
	$gëCh
 ()

139 { i‡(++
öCﬁ
 < 
löeLí
)

140 
ch
 = 
ö_Löe
[
öCﬁ
] ;

141 
ch
 = ' ' ;

142 
	}
}

145 
	$n⁄Bœnk
 ()

146 { (
öCﬁ
 < 
löeLí
)

147 && (
ö_Löe
[
öCﬁ
] == ' ') )

148 
öCﬁ
++ ;

149 i‡(
öCﬁ
 < 
löeLí
)

150 { 
ch
 = 
ö_Löe
[
öCﬁ
] ;

151  
TRUE
 ; }

153 { 
ch
 = ' ' ;

154  
FALSE
 ; }

155 
	}
}

158 
	$gëNum
 ()

159 { 
sign
;

160 
ãrm
;

161 
ãmp
 = 
FALSE
;

162 
num
 = 0 ;

164 { 
sign
 = 1;

165  
	`n⁄Bœnk
(Ë&& ((
ch
 == '+') || (ch == '-')) )

166 { 
ãmp
 = 
FALSE
 ;

167 i‡(
ch
 ='-'Ë
sign
 = - sign ;

168 
	`gëCh
();

170 
ãrm
 = 0 ;

171 
	`n⁄Bœnk
();

172 
	`isdigô
(
ch
))

173 { 
ãmp
 = 
TRUE
 ;

174 
ãrm
 =Åîm * 10 + ( 
ch
 - '0' ) ;

175 
	`gëCh
();

177 
num
 =Çum + (
ãrm
 * 
sign
) ;

178 }  (
	`n⁄Bœnk
()Ë&& ((
ch
 == '+') || (ch == '-')) ) ;

179  
ãmp
;

180 
	}
}

183 
	$gëW‹d
 ()

184 { 
ãmp
 = 
FALSE
;

185 
Àngth
 = 0;

186 i‡(
	`n⁄Bœnk
 ())

187 { 
	`iß um
(
ch
))

188 { i‡(
Àngth
 < 
WORDSIZE
-1Ë
w‹d
 [Àngth++] = 
ch
 ;

189 
	`gëCh
() ;

191 
w‹d
[
Àngth
] = '\0';

192 
ãmp
 = (
Àngth
 != 0);

194  
ãmp
;

195 
	}
}

198 
	$skùCh
 ( 
c
 )

199 { 
ãmp
 = 
FALSE
;

200 i‡–
	`n⁄Bœnk
(Ë&& (
ch
 =
c
) )

201 { 
	`gëCh
();

202 
ãmp
 = 
TRUE
;

204  
ãmp
;

205 
	}
}

208 
	$©EOL
()

209 {  ( ! 
	`n⁄Bœnk
 ());

210 
	}
}

213 
	$îr‹
–* 
msg
, 
löeNo
, 
ö°No
)

214 { 
	`¥ötf
("Löê%d",
löeNo
);

215 i‡(
ö°No
 >0Ë
	`¥ötf
(" (Instruction %d)",instNo);

216 
	`¥ötf
(" %s\n",
msg
);

217  
FALSE
;

218 
	}
}

221 
	$ªadIn°ru˘i⁄s
 ()

222 { 
OPCODE
 
›
;

223 
¨g1
, 
¨g2
, 
¨g3
;

224 
loc
, 
ªgNo
, 
löeNo
;

225 
ªgNo
 = 0 ;ÑegNÿ< 
NO_REGS
 ;ÑegNo++)

226 
ªg
[
ªgNo
] = 0 ;

227 
dMem
[0] = 
DADDR_SIZE
 - 1 ;

228 
loc
 = 1 ;Üo¯< 
DADDR_SIZE
 ;Üoc++)

229 
dMem
[
loc
] = 0 ;

230 
loc
 = 0 ;Üo¯< 
IADDR_SIZE
 ;Üoc++)

231 { 
iMem
[
loc
].
i›
 = 
›HALT
 ;

232 
iMem
[
loc
].
ürg1
 = 0 ;

233 
iMem
[
loc
].
ürg2
 = 0 ;

234 
iMem
[
loc
].
ürg3
 = 0 ;

236 
löeNo
 = 0 ;

237 ! 
	`„of
(
pgm
))

238 { 
	`fgës
–
ö_Löe
, 
LINESIZE
-2, 
pgm
 ) ;

239 
öCﬁ
 = 0 ;

240 
löeNo
++;

241 
löeLí
 = 
	`°æí
(
ö_Löe
)-1 ;

242 i‡(
ö_Löe
[
löeLí
]=='\n') in_Line[lineLen] = '\0' ;

243 
ö_Löe
[++
löeLí
] = '\0';

244 i‡–(
	`n⁄Bœnk
()Ë&& (
ö_Löe
[
öCﬁ
] != '*') )

245 { i‡(! 
	`gëNum
())

246  
	`îr‹
("BadÜoˇti⁄", 
löeNo
,-1);

247 
loc
 = 
num
;

248 i‡(
loc
 > 
IADDR_SIZE
)

249  
	`îr‹
("Loˇti⁄Åoÿœrge",
löeNo
,
loc
);

250 i‡(! 
	`skùCh
(':'))

251  
	`îr‹
("Missög cﬁ⁄", 
löeNo
,
loc
);

252 i‡(! 
	`gëW‹d
 ())

253  
	`îr‹
("Missög opcode", 
löeNo
,
loc
);

254 
›
 = 
›HALT
 ;

255 (
›
 < 
›RALim
)

256 && (
	`°∫cmp
(
›CodeTab
[
›
], 
w‹d
, 4) != 0) )

257 
›
++ ;

258 i‡(
	`°∫cmp
(
›CodeTab
[
›
], 
w‹d
, 4) != 0)

259  
	`îr‹
("IŒegÆ opcode", 
löeNo
,
loc
);

260  
	`›Cœss
(
›
) )

261 { 
›˛RR
 :

263 i‡–(! 
	`gëNum
 ()Ë|| (
num
 < 0Ë|| (num >
NO_REGS
) )

264  
	`îr‹
("Bad fú°Ñegi°î", 
löeNo
,
loc
);

265 
¨g1
 = 
num
;

266 i‡–! 
	`skùCh
(','))

267  
	`îr‹
("Missög comma", 
löeNo
, 
loc
);

268 i‡–(! 
	`gëNum
 ()Ë|| (
num
 < 0Ë|| (num >
NO_REGS
) )

269  
	`îr‹
("Bad sec⁄dÑegi°î", 
löeNo
, 
loc
);

270 
¨g2
 = 
num
;

271 i‡–! 
	`skùCh
(','))

272  
	`îr‹
("Missög comma", 
löeNo
,
loc
);

273 i‡–(! 
	`gëNum
 ()Ë|| (
num
 < 0Ë|| (num >
NO_REGS
) )

274  
	`îr‹
("BadÅhúdÑegi°î", 
löeNo
,
loc
);

275 
¨g3
 = 
num
;

278 
›˛RM
 :

279 
›˛RA
 :

281 i‡–(! 
	`gëNum
 ()Ë|| (
num
 < 0Ë|| (num >
NO_REGS
) )

282  
	`îr‹
("Bad fú°Ñegi°î", 
löeNo
,
loc
);

283 
¨g1
 = 
num
;

284 i‡–! 
	`skùCh
(','))

285  
	`îr‹
("Missög comma", 
löeNo
,
loc
);

286 i‡(! 
	`gëNum
 ())

287  
	`îr‹
("Bad di•œ˚mít", 
löeNo
,
loc
);

288 
¨g2
 = 
num
;

289 i‡–! 
	`skùCh
('(') && ! skipCh(',') )

290  
	`îr‹
("Missög LP¨í", 
löeNo
,
loc
);

291 i‡–(! 
	`gëNum
 ()Ë|| (
num
 < 0Ë|| (num >
NO_REGS
))

292  
	`îr‹
("Bad sec⁄dÑegi°î", 
löeNo
,
loc
);

293 
¨g3
 = 
num
;

296 
iMem
[
loc
].
i›
 = 
›
;

297 
iMem
[
loc
].
ürg1
 = 
¨g1
;

298 
iMem
[
loc
].
ürg2
 = 
¨g2
;

299 
iMem
[
loc
].
ürg3
 = 
¨g3
;

302  
TRUE
;

303 
	}
}

307 
STEPRESULT
 
	$°ïTM
 ()

308 { 
INSTRUCTION
 
cuºítö°ru˘i⁄
 ;

309 
pc
 ;

310 
r
,
s
,
t
,
m
 ;

311 
ok
 ;

313 
pc
 = 
ªg
[
PC_REG
] ;

314 i‡–(
pc
 < 0Ë|| (p¯> 
IADDR_SIZE
) )

315  
§IMEM_ERR
 ;

316 
ªg
[
PC_REG
] = 
pc
 + 1 ;

317 
cuºítö°ru˘i⁄
 = 
iMem
[ 
pc
 ] ;

318 
	`›Cœss
(
cuºítö°ru˘i⁄
.
i›
) )

319 { 
›˛RR
 :

321 
r
 = 
cuºítö°ru˘i⁄
.
ürg1
 ;

322 
s
 = 
cuºítö°ru˘i⁄
.
ürg2
 ;

323 
t
 = 
cuºítö°ru˘i⁄
.
ürg3
 ;

326 
›˛RM
 :

328 
r
 = 
cuºítö°ru˘i⁄
.
ürg1
 ;

329 
s
 = 
cuºítö°ru˘i⁄
.
ürg3
 ;

330 
m
 = 
cuºítö°ru˘i⁄
.
ürg2
 + 
ªg
[
s
] ;

331 i‡–(
m
 < 0Ë|| (m > 
DADDR_SIZE
))

332  
§DMEM_ERR
 ;

335 
›˛RA
 :

337 
r
 = 
cuºítö°ru˘i⁄
.
ürg1
 ;

338 
s
 = 
cuºítö°ru˘i⁄
.
ürg3
 ;

339 
m
 = 
cuºítö°ru˘i⁄
.
ürg2
 + 
ªg
[
s
] ;

343  
cuºítö°ru˘i⁄
.
i›
)

345 
›HALT
 :

347 
	`¥ötf
("HALT: %1d,%1d,%1d\n",
r
,
s
,
t
);

348  
§HALT
 ;

351 
›IN
 :

354 { 
	`¥ötf
("Enter value for IN instruction: ") ;

355 
	`fÊush
 (
°dö
);

356 
	`fÊush
 (
°dout
);

357 
	`gës
(
ö_Löe
);

358 
löeLí
 = 
	`°æí
(
ö_Löe
) ;

359 
öCﬁ
 = 0;

360 
ok
 = 
	`gëNum
();

361 i‡–! 
ok
 ) 
	`¥ötf
 ("Illegal value\n");

362 
ªg
[
r
] = 
num
;

364 ! 
ok
);

367 
›OUT
 :

368 
	`¥ötf
 ("OUT in°ru˘i⁄Öröts: %d\n", 
ªg
[
r
] ) ;

370 
›ADD
 : 
ªg
[
r
] =Ñeg[
s
] +Ñeg[
t
] ; ;

371 
›SUB
 : 
ªg
[
r
] =Ñeg[
s
] -Ñeg[
t
] ; ;

372 
›MUL
 : 
ªg
[
r
] =Ñeg[
s
] *Ñeg[
t
] ; ;

374 
›DIV
 :

376 i‡–
ªg
[
t
] !0 )Ñeg[
r
] =Ñeg[
s
] /Ñeg[t];

377  
§ZERODIVIDE
 ;

381 
›LD
 : 
ªg
[
r
] = 
dMem
[
m
] ; ;

382 
›ST
 : 
dMem
[
m
] = 
ªg
[
r
] ; ;

385 
›LDA
 : 
ªg
[
r
] = 
m
 ; ;

386 
›LDC
 : 
ªg
[
r
] = 
cuºítö°ru˘i⁄
.
ürg2
 ; ;

387 
›JLT
 : i‡–
ªg
[
r
] < 0 )Ñeg[
PC_REG
] = 
m
 ; ;

388 
›JLE
 : i‡–
ªg
[
r
] <0 )Ñeg[
PC_REG
] = 
m
 ; ;

389 
›JGT
 : i‡–
ªg
[
r
] > 0 )Ñeg[
PC_REG
] = 
m
 ; ;

390 
›JGE
 : i‡–
ªg
[
r
] >0 )Ñeg[
PC_REG
] = 
m
 ; ;

391 
›JEQ
 : i‡–
ªg
[
r
] =0 )Ñeg[
PC_REG
] = 
m
 ; ;

392 
›JNE
 : i‡–
ªg
[
r
] !0 )Ñeg[
PC_REG
] = 
m
 ; ;

396  
§OKAY
 ;

397 
	}
}

400 
	$doComm™d
 ()

401 { 
cmd
;

402 
°ï˙t
=0, 
i
;

403 
¥öt˙t
;

404 
°ïResu…
;

405 
ªgNo
, 
loc
;

407 { 
	`¥ötf
 ("Enter command: ");

408 
	`fÊush
 (
°dö
);

409 
	`fÊush
 (
°dout
);

410 
	`gës
(
ö_Löe
);

411 
löeLí
 = 
	`°æí
(
ö_Löe
);

412 
öCﬁ
 = 0;

414 ! 
	`gëW‹d
 ());

416 
cmd
 = 
w‹d
[0] ;

417  
cmd
 )

420 
åa˚Êag
 = !Åraceflag ;

421 
	`¥ötf
("TracingÇow ");

422 i‡–
åa˚Êag
 ) 
	`¥ötf
("on.\n"); printf("off.\n");

427 
	`¥ötf
("Commandsáre:\n");

428 
	`¥ötf
(" s(tep <n> "\

430 
	`¥ötf
(" g(o "\

432 
	`¥ötf
("Ñ(egs "\

434 
	`¥ötf
(" i(Mem <b <n>> "\

436 
	`¥ötf
(" d(Mem <b <n>> "\

438 
	`¥ötf
("Å(race "\

440 
	`¥ötf
("Ö(rint "\

443 
	`¥ötf
(" c(lear "\

445 
	`¥ötf
(" h(elp "\

447 
	`¥ötf
(" q(uit "\

453 
icou¡Êag
 = ! icountflag ;

454 
	`¥ötf
("Printing instruction countÇow ");

455 i‡–
icou¡Êag
 ) 
	`¥ötf
("on.\n"); printf("off.\n");

460 i‡–
	`©EOL
 ()Ë
°ï˙t
 = 1;

461 i‡–
	`gëNum
 ()Ë
°ï˙t
 = 
	`abs
(
num
);

462 
	`¥ötf
("Step count?\n");

465 'g' : 
°ï˙t
 = 1 ; ;

469 
i
 = 0; i < 
NO_REGS
; i++)

470 { 
	`¥ötf
("%1d: %4d ", 
i
,
ªg
[i]);

471 i‡–(
i
 % 4Ë=3 ) 
	`¥ötf
 ("\n");

477 
¥öt˙t
 = 1 ;

478 i‡–
	`gëNum
 ())

479 { 
ûoc
 = 
num
 ;

480 i‡–
	`gëNum
 ()Ë
¥öt˙t
 = 
num
 ;

482 i‡–! 
	`©EOL
 ())

483 
	`¥ötf
 ("InstructionÜocations?\n");

485 { (
ûoc
 >0Ë&& (ûo¯< 
IADDR_SIZE
)

486 && (
¥öt˙t
 > 0) )

487 { 
	`wrôeIn°ru˘i⁄
(
ûoc
);

488 
ûoc
++ ;

489 
¥öt˙t
-- ;

496 
¥öt˙t
 = 1 ;

497 i‡–
	`gëNum
 ())

498 { 
dloc
 = 
num
 ;

499 i‡–
	`gëNum
 ()Ë
¥öt˙t
 = 
num
 ;

501 i‡–! 
	`©EOL
 ())

502 
	`¥ötf
("DataÜocations?\n");

504 { (
dloc
 >0Ë&& (dlo¯< 
DADDR_SIZE
)

505 && (
¥öt˙t
 > 0))

506 { 
	`¥ötf
("%5d: %5d\n",
dloc
,
dMem
[dloc]);

507 
dloc
++;

508 
¥öt˙t
--;

515 
ûoc
 = 0;

516 
dloc
 = 0;

517 
°ï˙t
 = 0;

518 
ªgNo
 = 0;ÑegNÿ< 
NO_REGS
 ;ÑegNo++)

519 
ªg
[
ªgNo
] = 0 ;

520 
dMem
[0] = 
DADDR_SIZE
 - 1 ;

521 
loc
 = 1 ;Üo¯< 
DADDR_SIZE
 ;Üoc++)

522 
dMem
[
loc
] = 0 ;

525 'q' :  
FALSE
;

527  : 
	`¥ötf
("Comm™d %¯unknown.\n", 
cmd
); ;

529 
°ïResu…
 = 
§OKAY
;

530 i‡–
°ï˙t
 > 0 )

531 { i‡–
cmd
 == 'g' )

532 { 
°ï˙t
 = 0;

533 
°ïResu…
 =
§OKAY
)

534 { 
ûoc
 = 
ªg
[
PC_REG
] ;

535 i‡–
åa˚Êag
 ) 
	`wrôeIn°ru˘i⁄
–
ûoc
 ) ;

536 
°ïResu…
 = 
	`°ïTM
 ();

537 
°ï˙t
++;

539 i‡–
icou¡Êag
 )

540 
	`¥ötf
("Numbî o‡ö°ru˘i⁄†execuãd = %d\n",
°ï˙t
);

543 { (
°ï˙t
 > 0Ë&& (
°ïResu…
 =
§OKAY
))

544 { 
ûoc
 = 
ªg
[
PC_REG
] ;

545 i‡–
åa˚Êag
 ) 
	`wrôeIn°ru˘i⁄
–
ûoc
 ) ;

546 
°ïResu…
 = 
	`°ïTM
 ();

547 
°ï˙t
-- ;

550 
	`¥ötf
–"%s\n",
°ïResu…Tab
[
°ïResu…
] );

552  
TRUE
;

553 
	}
}

560 
	$maö
–
¨gc
, * 
¨gv
[] )

561 { i‡(
¨gc
 != 2)

562 { 
	`¥ötf
("ußge: %†<fûíame>\n",
¨gv
[0]);

563 
	`exô
(1);

565 
	`°r˝y
(
pgmName
,
¨gv
[1]) ;

566 i‡(
	`°rchr
 (
pgmName
, '.'Ë=
NULL
)

567 
	`°rˇt
(
pgmName
,".tm");

568 
pgm
 = 
	`f›í
(
pgmName
,"r");

569 i‡(
pgm
 =
NULL
)

570 { 
	`¥ötf
("fûê'%s'ÇŸ found\n",
pgmName
);

571 
	`exô
(1);

575 i‡–! 
	`ªadIn°ru˘i⁄s
 ())

576 
	`exô
(1) ;

580 
	`¥ötf
("TM simulation (enter h for help)...\n");

582 
d⁄e
 = ! 
	`doComm™d
 ();

583 ! 
d⁄e
 );

584 
	`¥ötf
("Simulation done.\n");

586 
	}
}

	@util.c

9 
	~"globÆs.h
"

10 
	~"utû.h
"

15 
	$¥ötTokí
–
TokíTy≥
 
tokí
, c⁄° * 
tokíSåög
 )

16 { 
tokí
)

18 
IF
:

19 
ELSE
:

20 
WHILE
:

21 
RETURN
:

22 
INT
:

23 
VOID
: 
	`Ârötf
(
li°ög
,

24 "ª£rved w‹d: %s\n",
tokíSåög
); ;

25 
ASSIGN
: 
	`Ârötf
(
li°ög
,"=\n"); ;

26 
EQ
: 
	`Ârötf
(
li°ög
,"==\n"); ;

27 
NE
: 
	`Ârötf
(
li°ög
,"!=\n"); ;

28 
LT
: 
	`Ârötf
(
li°ög
,"<\n"); ;

29 
LE
: 
	`Ârötf
(
li°ög
,"<=\n"); ;

30 
GT
: 
	`Ârötf
(
li°ög
,">\n"); ;

31 
GE
: 
	`Ârötf
(
li°ög
,">=\n"); ;

32 
PLUS
: 
	`Ârötf
(
li°ög
,"+\n"); ;

33 
MINUS
: 
	`Ârötf
(
li°ög
,"-\n"); ;

34 
TIMES
: 
	`Ârötf
(
li°ög
,"*\n"); ;

35 
OVER
: 
	`Ârötf
(
li°ög
,"/\n"); ;

36 
LPAREN
: 
	`Ârötf
(
li°ög
,"(\n"); ;

37 
RPAREN
: 
	`Ârötf
(
li°ög
,")\n"); ;

38 
LBRACE
: 
	`Ârötf
(
li°ög
,"[\n"); ;

39 
RBRACE
: 
	`Ârötf
(
li°ög
,"]\n"); ;

40 
LCURLY
: 
	`Ârötf
(
li°ög
,"{\n"); ;

41 
RCURLY
: 
	`Ârötf
(
li°ög
,"}\n"); ;

42 
SEMI
: 
	`Ârötf
(
li°ög
,";\n"); ;

43 
COMMA
: 
	`Ârötf
(
li°ög
,",\n"); ;

44 
ENDFILE
: 
	`Ârötf
(
li°ög
, "EOF\n"); ;

45 
NUM
:

46 
	`Ârötf
(
li°ög
,

47 "NUM, vÆ%s\n",
tokíSåög
);

49 
ID
:

50 
	`Ârötf
(
li°ög
,

51 "ID,Çame%s\n",
tokíSåög
);

53 
ERROR
:

54 
	`Ârötf
(
li°ög
,

55 "ERROR: %s\n",
tokíSåög
);

59 
	`Ârötf
(
li°ög
,"Unknow¿tokí: %d\n",
tokí
);

61 
	}
}

66 
TªeNode
 * 
	$√wStmtNode
(
StmtKöd
 
köd
, 
löío
)

67 { 
TªeNode
 * 
t
 = (TªeNodê*Ë
	`mÆloc
((TreeNode));

68 
i
;

69 i‡(
t
==
NULL
)

70 
	`Ârötf
(
li°ög
,"Ouào‡mem‹yÉº‹áàlöê%d\n",
löío
);

72 
i
=0;i<
MAXCHILDREN
;i++Ë
t
->
chûd
[i] = 
NULL
;

73 
t
->
siblög
 = 
NULL
;

74 
t
->
nodeköd
 = 
StmtK
;

75 
t
->
köd
.
°mt
 = kind;

76 
t
->
löío
 =Üineno;

78  
t
;

79 
	}
}

84 
TªeNode
 * 
	$√wExpNode
(
ExpKöd
 
köd
, 
löío
)

85 { 
TªeNode
 * 
t
 = (TªeNodê*Ë
	`mÆloc
((TreeNode));

86 
i
;

87 i‡(
t
==
NULL
)

88 
	`Ârötf
(
li°ög
,"Ouào‡mem‹yÉº‹áàlöê%d\n",
löío
);

90 
i
=0;i<
MAXCHILDREN
;i++Ë
t
->
chûd
[i] = 
NULL
;

91 
t
->
siblög
 = 
NULL
;

92 
t
->
nodeköd
 = 
ExpK
;

93 
t
->
köd
.
exp
 = kind;

94 
t
->
löío
 =Üineno;

95 
t
->
ty≥
 = 
Void
;

97  
t
;

98 
	}
}

99 
TªeNode
 * 
	$√wDe˛Node
(
De˛Köd
 
köd
, 
löío
)

100 { 
TªeNode
 * 
t
 = (TªeNodê*Ë
	`mÆloc
((TreeNode));

101 
i
;

102 i‡(
t
==
NULL
)

103 
	`Ârötf
(
li°ög
,"Ouào‡mem‹yÉº‹áàlöê%d\n",
löío
);

106 
i
=0;i<
MAXCHILDREN
;i++Ë
t
->
chûd
[i] = 
NULL
;

107 
t
->
siblög
 = 
NULL
;

108 
t
->
nodeköd
 = 
De˛K
;

109 
t
->
köd
.
de˛
 = kind;

110 
t
->
löío
 =Üineno;

111 
t
->
ty≥
 = 
Void
;

113  
t
;

114 
	}
}

118 * 
	$c›ySåög
(c⁄° * 
s
)

119 { 
n
;

120 * 
t
;

121 i‡(
s
==
NULL
)  NULL;

122 
n
 = 
	`°æí
(
s
)+1;

123 
t
 = 
	`mÆloc
(
n
);

124 i‡(
t
==
NULL
)

125 
	`Ârötf
(
li°ög
,"Ouào‡mem‹yÉº‹áàlöê%d\n",
löío
);

126 
	`°r˝y
(
t
,
s
);

127  
t
;

128 
	}
}

133 
	gödíäo
 = 0;

136 
	#INDENT
 
ödíäo
+=2

	)

137 
	#UNINDENT
 
ödíäo
-=2

	)

140 
	$¥ötS∑˚s
()

141 { 
i
;

142 
i
=0;i<
ödíäo
;i++)

143 
	`Ârötf
(
li°ög
," ");

144 
	}
}

149 
	$¥ötTªe
–
TªeNode
 * 
åì
 )

150 { 
i
;

151 
INDENT
;

152 
åì
 !
NULL
) {

153 
	`¥ötS∑˚s
();

155 i‡(
åì
->
nodeköd
==
StmtK
)

156 { 
åì
->
köd
.
°mt
) {

157 
IfK
:

158 
	`Ârötf
(
li°ög
,"If Statement:\n");

160 
El£K
:

161 
	`Ârötf
(
li°ög
,"If-Else Statement:\n");

163 
WhûeK
:

164 
	`Ârötf
(
li°ög
,"While Statement:\n");

166 
CompoundK
:

167 
	`Ârötf
(
li°ög
,"Compound Statement:\n");

169 
Rëu∫K
:

170 
	`Ârötf
(
li°ög
,"Return Statement:\n");

173 
	`Ârötf
(
li°ög
,"Unknown ExpNode kind\n");

177 i‡(
åì
->
nodeköd
==
ExpK
)

178 { 
åì
->
köd
.
exp
) {

179 
OpK
:

180 
	`Ârötf
(
li°ög
,"Op: ");

181 
	`¥ötTokí
(
åì
->
©å
.
›
,"\0");

183 
V¨ExpK
:

184 
	`Ârötf
(
li°ög
,"V¨übÀ:Çamê%s\n",
åì
->
©å
.
«me
);

186 
C⁄°K
:

187 
	`Ârötf
(
li°ög
,"C⁄°: %d\n",
åì
->
©å
.
vÆ
);

189 
CÆlK
:

190 
	`Ârötf
(
li°ög
,"CÆl: fun˘i⁄Çamê%s\n",
åì
->
©å
.
«me
);

192 
AssignK
:

193 
	`Ârötf
(
li°ög
,"Assign:\n");

196 
	`Ârötf
(
li°ög
,"Unknown ExpNode kind\n");

200 i‡(
åì
->
nodeköd
==
De˛K
){

201 
åì
->
köd
.
de˛
){

202 
V¨K
:

203 
	`Ârötf
(
li°ög
,"V¨übÀ De˛¨©i⁄:Çamê%s,Åy≥ = %s\n",
åì
->
©å
.
«me
,—ªe->
ty≥
==
I¡egî
)?"int":"void");

205 
AºK
:

206 
	`Ârötf
(
li°ög
,"V¨übÀ De˛¨©i⁄:Çamê%s,Åy≥ = %s\n",
åì
->
©å
.
«me
,—ªe->
ty≥
==
I¡Aºay
)?"int[]":"void[]");

208 
FuncK
:

209 
	`Ârötf
(
li°ög
,"Fun˘i⁄ De˛¨©i⁄:Çamê%s,Ñëu∫Åy≥ = %s\n",
åì
->
©å
.
«me
,—ªe->
ty≥
==
I¡egî
)?"int":"void");

211 
P¨amK
:

212 
	`Ârötf
(
li°ög
,"P¨amëî:Çamê%s,Åy≥ = %s\n",
åì
->
©å
.
«me
, (åì->
ty≥
==
I¡egî
)?"int":"void");

214 
VoidP¨amK
:

215 
	`Ârötf
(
li°ög
,"Void Parameter\n");

217 
AºP¨amK
:

218 
	`Ârötf
(
li°ög
,"P¨amëî:Çamê%s,Åy≥ = %s\n",
åì
->
©å
.
«me
,—ªe->
ty≥
==
I¡Aºay
)?"int[]":"void[]");

221 
	`Ârötf
(
li°ög
,"Unknown DeclNode kind\n");

225 
	`Ârötf
(
li°ög
,"UnknownÇode kind\n");

226 
i
=0;i<
MAXCHILDREN
;i++)

227 
	`¥ötTªe
(
åì
->
chûd
[
i
]);

228 
åì
 =Åªe->
siblög
;

230 
UNINDENT
;

247 
	}
}

	@util.h

8 #i‚de‡
_UTIL_H_


9 
	#_UTIL_H_


	)

14 
¥ötTokí
–
TokíTy≥
, const * );

19 
TªeNode
 * 
√wStmtNode
(
StmtKöd
,);

24 
TªeNode
 * 
√wExpNode
(
ExpKöd
,);

25 
TªeNode
 * 
√wDe˛Node
(
De˛Köd
,);

29 * 
c›ySåög
( const * );

34 
¥ötTªe
–
TªeNode
 * );

	@y.tab.c

49 
	#YYBISON
 30802

	)

52 
	#YYBISON_VERSION
 "3.8.2"

	)

55 
	#YYSKELETON_NAME
 "yacc.c"

	)

58 
	#YYPURE
 0

	)

61 
	#YYPUSH
 0

	)

64 
	#YYPULL
 1

	)

72 
	#YYPARSER


	)

74 
	~"globÆs.h
"

75 
	~"utû.h
"

76 
	~"sˇn.h
"

77 
	~"∑r£.h
"

81 
	#YYSTYPE
 
TªeNode
 *

	)

82 
	gßvedNumbî
;

83 * 
	gßvedName
;

85 
ExpTy≥
 
	gßvedTy≥
;

86 
TªeNode
 * 
	gßvedTªe
;

87 
yyÀx
();

88 
¥öt_debug_öfo
();

90 
yyîr‹
(* 
mesßge
);

95 #i‚de‡
YY_CAST


96 #ifde‡
__˝lu•lus


97 
	#YY_CAST
(
Ty≥
, 
VÆ
Ë
°©ic_ˇ°
<Ty≥> (VÆ)

	)

98 
	#YY_REINTERPRET_CAST
(
Ty≥
, 
VÆ
Ë
ªöãΩªt_ˇ°
<Ty≥> (VÆ)

	)

100 
	#YY_CAST
(
Ty≥
, 
VÆ
Ë((Ty≥Ë(VÆ))

	)

101 
	#YY_REINTERPRET_CAST
(
Ty≥
, 
VÆ
Ë((Ty≥Ë(VÆ))

	)

104 #i‚de‡
YY_NULLPTR


105 #i‡
deföed
 
__˝lu•lus


106 #i‡201103L <
__˝lu•lus


107 
	#YY_NULLPTR
 
nuŒ±r


	)

109 
	#YY_NULLPTR
 0

	)

112 
	#YY_NULLPTR
 ((*)0)

	)

118 #i‚de‡
YY_YY_Y_TAB_H_INCLUDED


119 
	#YY_YY_Y_TAB_H_INCLUDED


	)

121 #i‚de‡
YYDEBUG


122 
	#YYDEBUG
 0

	)

124 #i‡
YYDEBUG


125 
yydebug
;

129 #i‚de‡
YYTOKENTYPE


130 
	#YYTOKENTYPE


	)

131 
	eyytokíty≥


133 
	mYYEMPTY
 = -2,

134 
	mYYEOF
 = 0,

135 
	mYYîr‹
 = 256,

136 
	mYYUNDEF
 = 257,

137 
	mIF
 = 258,

138 
	mELSE
 = 259,

139 
	mINT
 = 260,

140 
	mRETURN
 = 261,

141 
	mVOID
 = 262,

142 
	mWHILE
 = 263,

143 
	mID
 = 264,

144 
	mNUM
 = 265,

145 
	mLT
 = 266,

146 
	mLE
 = 267,

147 
	mGT
 = 268,

148 
	mGE
 = 269,

149 
	mEQ
 = 270,

150 
	mNE
 = 271,

151 
	mSEMI
 = 272,

152 
	mLPAREN
 = 273,

153 
	mRPAREN
 = 274,

154 
	mLCURLY
 = 275,

155 
	mRCURLY
 = 276,

156 
	mLBRACE
 = 277,

157 
	mRBRACE
 = 278,

158 
	mPLUS
 = 279,

159 
	mMINUS
 = 280,

160 
	mTIMES
 = 281,

161 
	mOVER
 = 282,

162 
	mCOMMA
 = 283,

163 
	mASSIGN
 = 284,

164 
	mTHEN
 = 285,

165 
	mERROR
 = 286

167 
yytokíty≥
 
	tyytokí_köd_t
;

170 
	#YYEMPTY
 -2

	)

171 
	#YYEOF
 0

	)

172 
	#YYîr‹
 256

	)

173 
	#YYUNDEF
 257

	)

174 
	#IF
 258

	)

175 
	#ELSE
 259

	)

176 
	#INT
 260

	)

177 
	#RETURN
 261

	)

178 
	#VOID
 262

	)

179 
	#WHILE
 263

	)

180 
	#ID
 264

	)

181 
	#NUM
 265

	)

182 
	#LT
 266

	)

183 
	#LE
 267

	)

184 
	#GT
 268

	)

185 
	#GE
 269

	)

186 
	#EQ
 270

	)

187 
	#NE
 271

	)

188 
	#SEMI
 272

	)

189 
	#LPAREN
 273

	)

190 
	#RPAREN
 274

	)

191 
	#LCURLY
 275

	)

192 
	#RCURLY
 276

	)

193 
	#LBRACE
 277

	)

194 
	#RBRACE
 278

	)

195 
	#PLUS
 279

	)

196 
	#MINUS
 280

	)

197 
	#TIMES
 281

	)

198 
	#OVER
 282

	)

199 
	#COMMA
 283

	)

200 
	#ASSIGN
 284

	)

201 
	#THEN
 285

	)

202 
	#ERROR
 286

	)

205 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


206 
	tYYSTYPE
;

207 
	#YYSTYPE_IS_TRIVIAL
 1

	)

208 
	#YYSTYPE_IS_DECLARED
 1

	)

212 
YYSTYPE
 
yylvÆ
;

215 
yy∑r£
 ();

220 
	eyysymbﬁ_köd_t


222 
	mYYSYMBOL_YYEMPTY
 = -2,

223 
	mYYSYMBOL_YYEOF
 = 0,

224 
	mYYSYMBOL_YYîr‹
 = 1,

225 
	mYYSYMBOL_YYUNDEF
 = 2,

226 
	mYYSYMBOL_IF
 = 3,

227 
	mYYSYMBOL_ELSE
 = 4,

228 
	mYYSYMBOL_INT
 = 5,

229 
	mYYSYMBOL_RETURN
 = 6,

230 
	mYYSYMBOL_VOID
 = 7,

231 
	mYYSYMBOL_WHILE
 = 8,

232 
	mYYSYMBOL_ID
 = 9,

233 
	mYYSYMBOL_NUM
 = 10,

234 
	mYYSYMBOL_LT
 = 11,

235 
	mYYSYMBOL_LE
 = 12,

236 
	mYYSYMBOL_GT
 = 13,

237 
	mYYSYMBOL_GE
 = 14,

238 
	mYYSYMBOL_EQ
 = 15,

239 
	mYYSYMBOL_NE
 = 16,

240 
	mYYSYMBOL_SEMI
 = 17,

241 
	mYYSYMBOL_LPAREN
 = 18,

242 
	mYYSYMBOL_RPAREN
 = 19,

243 
	mYYSYMBOL_LCURLY
 = 20,

244 
	mYYSYMBOL_RCURLY
 = 21,

245 
	mYYSYMBOL_LBRACE
 = 22,

246 
	mYYSYMBOL_RBRACE
 = 23,

247 
	mYYSYMBOL_PLUS
 = 24,

248 
	mYYSYMBOL_MINUS
 = 25,

249 
	mYYSYMBOL_TIMES
 = 26,

250 
	mYYSYMBOL_OVER
 = 27,

251 
	mYYSYMBOL_COMMA
 = 28,

252 
	mYYSYMBOL_ASSIGN
 = 29,

253 
	mYYSYMBOL_THEN
 = 30,

254 
	mYYSYMBOL_ERROR
 = 31,

255 
	mYYSYMBOL_YYACCEPT
 = 32,

256 
	mYYSYMBOL_¥ogøm
 = 33,

257 
	mYYSYMBOL_de˛_li°
 = 34,

258 
	mYYSYMBOL_de˛¨©i⁄
 = 35,

259 
	mYYSYMBOL_id
 = 36,

260 
	mYYSYMBOL_num
 = 37,

261 
	mYYSYMBOL_v¨_de˛
 = 38,

262 
	mYYSYMBOL_ty≥_•ec
 = 39,

263 
	mYYSYMBOL_func_de˛
 = 40,

264 
	mYYSYMBOL_∑øms
 = 41,

265 
	mYYSYMBOL_∑øm_li°
 = 42,

266 
	mYYSYMBOL_∑øm
 = 43,

267 
	mYYSYMBOL_comp_°mt
 = 44,

268 
	mYYSYMBOL_loˇl_de˛
 = 45,

269 
	mYYSYMBOL_°mt_li°
 = 46,

270 
	mYYSYMBOL_°©emít
 = 47,

271 
	mYYSYMBOL_exp_°mt
 = 48,

272 
	mYYSYMBOL_£À˘_°mt
 = 49,

273 
	mYYSYMBOL_ôî_°mt
 = 50,

274 
	mYYSYMBOL_ªtu∫_°mt
 = 51,

275 
	mYYSYMBOL_ex¥essi⁄
 = 52,

276 
	mYYSYMBOL_v¨
 = 53,

277 
	mYYSYMBOL_sim∂e_exp
 = 54,

278 
	mYYSYMBOL_add_exp
 = 55,

279 
	mYYSYMBOL_ãrm
 = 56,

280 
	mYYSYMBOL_Á˘‹
 = 57,

281 
	mYYSYMBOL_ˇŒ
 = 58,

282 
	mYYSYMBOL_¨gs
 = 59,

283 
	mYYSYMBOL_¨g_li°
 = 60

285 
yysymbﬁ_köd_t
 
	tyysymbﬁ_köd_t
;

298 #i‚de‡
__PTRDIFF_MAX__


299 
	~<limôs.h
>

300 #i‡
deföed
 
__STDC_VERSION__
 && 199901 <= __STDC_VERSION__

301 
	~<°döt.h
>

302 
	#YY_STDINT_H


	)

311 #ifde‡
__INT_LEAST8_MAX__


312 
__INT_LEAST8_TYPE__
 
	tyyty≥_öt8
;

313 #ñi‡
deföed
 
YY_STDINT_H


314 
öt_Àa°8_t
 
	tyyty≥_öt8
;

316 sig√d 
	tyyty≥_öt8
;

319 #ifde‡
__INT_LEAST16_MAX__


320 
__INT_LEAST16_TYPE__
 
	tyyty≥_öt16
;

321 #ñi‡
deföed
 
YY_STDINT_H


322 
öt_Àa°16_t
 
	tyyty≥_öt16
;

324 
	tyyty≥_öt16
;

332 #ifde‡
__hpux


333 #unde‡
UINT_LEAST8_MAX


334 #unde‡
UINT_LEAST16_MAX


335 
	#UINT_LEAST8_MAX
 255

	)

336 
	#UINT_LEAST16_MAX
 65535

	)

339 #i‡
deföed
 
__UINT_LEAST8_MAX__
 && __UINT_LEAST8_MAX__ <
__INT_MAX__


340 
__UINT_LEAST8_TYPE__
 
	tyyty≥_uöt8
;

341 #ñi‡(!
deföed
 
__UINT_LEAST8_MAX__
 && deföed 
YY_STDINT_H
 \

342 && 
	gUINT_LEAST8_MAX
 <
INT_MAX
)

343 
uöt_Àa°8_t
 
	tyyty≥_uöt8
;

344 #ñi‡!
deföed
 
__UINT_LEAST8_MAX__
 && 
UCHAR_MAX
 <
INT_MAX


345 
	tyyty≥_uöt8
;

347 
	tyyty≥_uöt8
;

350 #i‡
deföed
 
__UINT_LEAST16_MAX__
 && __UINT_LEAST16_MAX__ <
__INT_MAX__


351 
__UINT_LEAST16_TYPE__
 
	tyyty≥_uöt16
;

352 #ñi‡(!
deföed
 
__UINT_LEAST16_MAX__
 && deföed 
YY_STDINT_H
 \

353 && 
	gUINT_LEAST16_MAX
 <
INT_MAX
)

354 
uöt_Àa°16_t
 
	tyyty≥_uöt16
;

355 #ñi‡!
deföed
 
__UINT_LEAST16_MAX__
 && 
USHRT_MAX
 <
INT_MAX


356 
	tyyty≥_uöt16
;

358 
	tyyty≥_uöt16
;

361 #i‚de‡
YYPTRDIFF_T


362 #i‡
deföed
 
__PTRDIFF_TYPE__
 && deföed 
__PTRDIFF_MAX__


363 
	#YYPTRDIFF_T
 
__PTRDIFF_TYPE__


	)

364 
	#YYPTRDIFF_MAXIMUM
 
__PTRDIFF_MAX__


	)

365 #ñi‡
deföed
 
PTRDIFF_MAX


366 #i‚de‡
±rdiff_t


367 
	~<°ddef.h
>

369 
	#YYPTRDIFF_T
 
±rdiff_t


	)

370 
	#YYPTRDIFF_MAXIMUM
 
PTRDIFF_MAX


	)

372 
	#YYPTRDIFF_T
 

	)

373 
	#YYPTRDIFF_MAXIMUM
 
LONG_MAX


	)

377 #i‚de‡
YYSIZE_T


378 #ifde‡
__SIZE_TYPE__


379 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

380 #ñi‡
deföed
 
size_t


381 
	#YYSIZE_T
 
size_t


	)

382 #ñi‡
deföed
 
__STDC_VERSION__
 && 199901 <= __STDC_VERSION__

383 
	~<°ddef.h
>

384 
	#YYSIZE_T
 
size_t


	)

386 
	#YYSIZE_T
 

	)

390 
	#YYSIZE_MAXIMUM
 \

391 
	`YY_CAST
 (
YYPTRDIFF_T
, \

392 (
YYPTRDIFF_MAXIMUM
 < 
	`YY_CAST
 (
YYSIZE_T
, -1) \

393 ? 
YYPTRDIFF_MAXIMUM
 \

394 : 
	`YY_CAST
 (
YYSIZE_T
, -1)))

	)

396 
	#YYSIZEOF
(
X
Ë
	`YY_CAST
 (
YYPTRDIFF_T
,  (X))

	)

400 
yyty≥_öt8
 
	tyy_°©e_t
;

403 
	tyy_°©e_Á°_t
;

405 #i‚de‡
YY_


406 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

407 #i‡
ENABLE_NLS


408 
	~<liböé.h
>

409 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

412 #i‚de‡
YY_


413 
	#YY_
(
Msgid
Ë
	)
Msgid

418 #i‚de‡
YY_ATTRIBUTE_PURE


419 #i‡
deföed
 
__GNUC__
 && 2 < __GNUC__ + (96 <
__GNUC_MINOR__
)

420 
	#YY_ATTRIBUTE_PURE
 
	`__©åibuã__
 ((
__puª__
))

	)

422 
	#YY_ATTRIBUTE_PURE


	)

426 #i‚de‡
YY_ATTRIBUTE_UNUSED


427 #i‡
deföed
 
__GNUC__
 && 2 < __GNUC__ + (7 <
__GNUC_MINOR__
)

428 
	#YY_ATTRIBUTE_UNUSED
 
	`__©åibuã__
 ((
__unu£d__
))

	)

430 
	#YY_ATTRIBUTE_UNUSED


	)

435 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


436 
	#YY_USE
(
E
Ë((Ë(E))

	)

438 
	#YY_USE
(
E
Ë

	)

442 #i‡
deföed
 
__GNUC__
 && ! deföed 
__ICC
 && 406 <__GNUC__ * 100 + 
__GNUC_MINOR__


443 #i‡
__GNUC__
 * 100 + 
__GNUC_MINOR__
 < 407

444 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

445 
	`_Pøgma
 ("GCC diagnosticÖush") \

446 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wunöôülized\"")

	)

448 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

449 
	`_Pøgma
 ("GCC diagnosticÖush") \

450 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"") \

451 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

453 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

454 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

456 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
Value

458 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


459 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

460 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

462 #i‚de‡
YY_INITIAL_VALUE


463 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

466 #i‡
deföed
 
__˝lu•lus
 && deföed 
__GNUC__
 && ! deföed 
__ICC
 && 6 <= __GNUC__

467 
	#YY_IGNORE_USELESS_CAST_BEGIN
 \

468 
	`_Pøgma
 ("GCC diagnosticÖush") \

469 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wu£Àss-ˇ°\"")

	)

470 
	#YY_IGNORE_USELESS_CAST_END
 \

471 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

473 #i‚de‡
YY_IGNORE_USELESS_CAST_BEGIN


474 
	#YY_IGNORE_USELESS_CAST_BEGIN


	)

475 
	#YY_IGNORE_USELESS_CAST_END


	)

479 
	#YY_ASSERT
(
E
Ë((Ë(0 && (E)))

	)

481 #i‡!
deföed
 
yyovîÊow


485 #ifde‡
YYSTACK_USE_ALLOCA


486 #i‡
YYSTACK_USE_ALLOCA


487 #ifde‡
__GNUC__


488 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

489 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


490 
	~<Æloˇ.h
>

491 #ñi‡
deföed
 
_AIX


492 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

493 #ñi‡
deföed
 
_MSC_VER


494 
	~<mÆloc.h
>

495 
	#Æloˇ
 
_Æloˇ


	)

497 
	#YYSTACK_ALLOC
 
Æloˇ


	)

498 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


499 
	~<°dlib.h
>

501 #i‚de‡
EXIT_SUCCESS


502 
	#EXIT_SUCCESS
 0

	)

509 #ifde‡
YYSTACK_ALLOC


511 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

512 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


517 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

520 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

521 
	#YYSTACK_FREE
 
YYFREE


	)

522 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


523 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

525 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

526 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

527 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

528 
	~<°dlib.h
>

529 #i‚de‡
EXIT_SUCCESS


530 
	#EXIT_SUCCESS
 0

	)

533 #i‚de‡
YYMALLOC


534 
	#YYMALLOC
 
mÆloc


	)

535 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


536 *
mÆloc
 (
YYSIZE_T
);

539 #i‚de‡
YYFREE


540 
	#YYFREE
 
‰ì


	)

541 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


542 
‰ì
 (*);

548 #i‡(! 
deföed
 
yyovîÊow
 \

549 && (! 
deföed
 
	g__˝lu•lus
 \

550 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

553 
	uyyÆloc


555 
yy_°©e_t
 
	myyss_Æloc
;

556 
YYSTYPE
 
	myyvs_Æloc
;

560 
	#YYSTACK_GAP_MAXIMUM
 (
	`YYSIZEOF
 (
yyÆloc
Ë- 1)

	)

564 
	#YYSTACK_BYTES
(
N
) \

565 ((
N
Ë* (
	`YYSIZEOF
 (
yy_°©e_t
Ë+ YYSIZEOF (
YYSTYPE
)) \

566 + 
YYSTACK_GAP_MAXIMUM
)

	)

568 
	#YYCOPY_NEEDED
 1

	)

575 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

578 
YYPTRDIFF_T
 
yy√wbyãs
; \

579 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

580 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

581 
yy√wbyãs
 = 
yy°acksize
 * 
	`YYSIZEOF
 (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

582 
yy±r
 +
yy√wbyãs
 / 
	`YYSIZEOF
 (*yyptr); \

584 0)

	)

588 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

591 #i‚de‡
YYCOPY


592 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

593 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

594 
	`__buûtö_mem˝y
 (
D°
, 
Src
, 
	`YY_CAST
 (
YYSIZE_T
, (
Cou¡
)Ë*  (*(Src)))

	)

596 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

599 
YYPTRDIFF_T
 
yyi
; \

600 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

601 (
D°
)[
yyi
] = (
Src
)[yyi]; \

603 0)

	)

609 
	#YYFINAL
 9

	)

611 
	#YYLAST
 116

	)

614 
	#YYNTOKENS
 32

	)

616 
	#YYNNTS
 29

	)

618 
	#YYNRULES
 63

	)

620 
	#YYNSTATES
 110

	)

623 
	#YYMAXUTOK
 286

	)

628 
	#YYTRANSLATE
(
YYX
) \

629 (0 <(
YYX
Ë&& (YYXË<
YYMAXUTOK
 \

630 ? 
	`YY_CAST
 (
yysymbﬁ_köd_t
, 
yyå™¶©e
[
YYX
]) \

631 : 
YYSYMBOL_YYUNDEF
)

	)

635 c⁄° 
yyty≥_öt8
 
	gyyå™¶©e
[] =

668 #i‡
YYDEBUG


670 c⁄° 
yyty≥_öt16
 
	gyyæöe
[] =

683 
	#YY_ACCESSING_SYMBOL
(
Sèã
Ë
	`YY_CAST
 (
yysymbﬁ_köd_t
, 
yy°os
[Sèã])

	)

685 #i‡
YYDEBUG
 || 0

688 c⁄° *
	$yysymbﬁ_«me
 (
yysymbﬁ_köd_t
 
yysymbﬁ
Ë
YY_ATTRIBUTE_UNUSED
;

692 c⁄° *c⁄° 
yyäame
[] =

702 "sim∂e_exp", "add_exp", "ãrm", "Á˘‹", "ˇŒ", "¨gs", "¨g_li°", 
YY_NULLPTR


703 
	}
};

706 
	$yysymbﬁ_«me
 (
yysymbﬁ_köd_t
 
yysymbﬁ
)

708  
yyäame
[
yysymbﬁ
];

709 
	}
}

712 
	#YYPACT_NINF
 (-92)

	)

714 
	#yy∑˘_vÆue_is_deÁu…
(
Yyn
) \

715 ((
Yyn
Ë=
YYPACT_NINF
)

	)

717 
	#YYTABLE_NINF
 (-16)

	)

719 
	#yyèbÀ_vÆue_is_îr‹
(
Yyn
) \

720 0

	)

724 c⁄° 
yyty≥_öt8
 
	gyy∑˘
[] =

742 c⁄° 
yyty≥_öt8
 
	gyydeÁ˘
[] =

758 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

766 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

776 c⁄° 
yyty≥_öt8
 
	gyyèbÀ
[] =

792 c⁄° 
yyty≥_öt8
 
	gyycheck
[] =

810 c⁄° 
yyty≥_öt8
 
	gyy°os
[] =

826 c⁄° 
yyty≥_öt8
 
	gyyr1
[] =

838 c⁄° 
yyty≥_öt8
 
	gyyr2
[] =

850 íum { 
	mYYENOMEM
 = -2 };

852 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

853 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

855 
	#YYACCEPT
 
yyac˚±œb


	)

856 
	#YYABORT
 
yyab‹éab


	)

857 
	#YYERROR
 
yyîr‹œb


	)

858 
	#YYNOMEM
 
yyexhau°edœb


	)

861 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

863 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

865 i‡(
yych¨
 =
YYEMPTY
) \

867 
yych¨
 = (
Tokí
); \

868 
yylvÆ
 = (
VÆue
); \

869 
	`YYPOPSTACK
 (
yyÀn
); \

870 
yy°©e
 = *
yys•
; \

871 
yybackup
; \

875 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

876 
YYERROR
; \

878 0)

	)

882 
	#YYERRCODE
 
YYUNDEF


	)

886 #i‡
YYDEBUG


888 #i‚de‡
YYFPRINTF


889 
	~<°dio.h
>

890 
	#YYFPRINTF
 
Ârötf


	)

893 
	#YYDPRINTF
(
Args
) \

895 i‡(
yydebug
) \

896 
YYFPRINTF
 
Args
; \

897 } 0)

	)

902 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Köd
, 
VÆue
, 
Loˇti⁄
) \

904 i‡(
yydebug
) \

906 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

907 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

908 
Köd
, 
VÆue
); \

909 
	`YYFPRINTF
 (
°dîr
, "\n"); \

911 } 0)

	)

919 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyo
,

920 
yysymbﬁ_köd_t
 
yyköd
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

922 
FILE
 *
yyouçut
 = 
yyo
;

923 
	`YY_USE
 (
yyouçut
);

924 i‡(!
yyvÆuï
)

926 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


927 
	`YY_USE
 (
yyköd
);

928 
YY_IGNORE_MAYBE_UNINITIALIZED_END


929 
	}
}

937 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyo
,

938 
yysymbﬁ_köd_t
 
yyköd
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

940 
	`YYFPRINTF
 (
yyo
, "%s %s (",

941 
yyköd
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
	`yysymbﬁ_«me
 (yykind));

943 
	`yy_symbﬁ_vÆue_¥öt
 (
yyo
, 
yyköd
, 
yyvÆuï
);

944 
	`YYFPRINTF
 (
yyo
, ")");

945 
	}
}

953 
	$yy_°ack_¥öt
 (
yy_°©e_t
 *
yybŸtom
, yy_°©e_à*
yyt›
)

955 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

956 ; 
yybŸtom
 <
yyt›
; yybottom++)

958 
yybŸ
 = *
yybŸtom
;

959 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

961 
	`YYFPRINTF
 (
°dîr
, "\n");

962 
	}
}

964 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

966 i‡(
yydebug
) \

967 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

968 } 0)

	)

976 
	$yy_ªdu˚_¥öt
 (
yy_°©e_t
 *
yys•
, 
YYSTYPE
 *
yyv•
,

977 
yyruÀ
)

979 
yy o
 = 
yyæöe
[
yyruÀ
];

980 
yyƒhs
 = 
yyr2
[
yyruÀ
];

981 
yyi
;

982 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %d):\n",

983 
yyruÀ
 - 1, 
yy o
);

985 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

987 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

988 
	`yy_symbﬁ_¥öt
 (
°dîr
,

989 
	`YY_ACCESSING_SYMBOL
 (+
yys•
[
yyi
 + 1 - 
yyƒhs
]),

990 &
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)]);

991 
	`YYFPRINTF
 (
°dîr
, "\n");

993 
	}
}

995 
	#YY_REDUCE_PRINT
(
RuÀ
) \

997 i‡(
yydebug
) \

998 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
RuÀ
); \

999 } 0)

	)

1003 
	gyydebug
;

1005 
	#YYDPRINTF
(
Args
Ë((Ë0)

	)

1006 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Köd
, 
VÆue
, 
Loˇti⁄
)

	)

1007 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

1008 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

1013 #i‚de‡
YYINITDEPTH


1014 
	#YYINITDEPTH
 200

	)

1024 #i‚de‡
YYMAXDEPTH


1025 
	#YYMAXDEPTH
 10000

	)

1038 
	$yyde°ru˘
 (c⁄° *
yymsg
,

1039 
yysymbﬁ_köd_t
 
yyköd
, 
YYSTYPE
 *
yyvÆuï
)

1041 
	`YY_USE
 (
yyvÆuï
);

1042 i‡(!
yymsg
)

1043 
yymsg
 = "Deleting";

1044 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyköd
, 
yyvÆuï
, 
yyloˇti⁄p
);

1046 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1047 
	`YY_USE
 (
yyköd
);

1048 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1049 
	}
}

1053 
	gyych¨
;

1056 
YYSTYPE
 
	gyylvÆ
;

1058 
	gyy√ºs
;

1068 
	$yy∑r£
 ()

1070 
yy_°©e_Á°_t
 
yy°©e
 = 0;

1072 
yyîr°©us
 = 0;

1078 
YYPTRDIFF_T
 
yy°acksize
 = 
YYINITDEPTH
;

1081 
yy_°©e_t
 
yysß
[
YYINITDEPTH
];

1082 
yy_°©e_t
 *
yyss
 = 
yysß
;

1083 
yy_°©e_t
 *
yys•
 = 
yyss
;

1086 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1087 
YYSTYPE
 *
yyvs
 = 
yyvß
;

1088 
YYSTYPE
 *
yyv•
 = 
yyvs
;

1090 
yyn
;

1092 
yyªsu…
;

1094 
yysymbﬁ_köd_t
 
yytokí
 = 
YYSYMBOL_YYEMPTY
;

1097 
YYSTYPE
 
yyvÆ
;

1101 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1105 
yyÀn
 = 0;

1107 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1109 
yych¨
 = 
YYEMPTY
;

1111 
yy£t°©e
;

1117 
yy√w°©e
:

1120 
yys•
++;

1126 
yy£t°©e
:

1127 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1128 
	`YY_ASSERT
 (0 <
yy°©e
 && yy°©ê< 
YYNSTATES
);

1129 
YY_IGNORE_USELESS_CAST_BEGIN


1130 *
yys•
 = 
	`YY_CAST
 (
yy_°©e_t
, 
yy°©e
);

1131 
YY_IGNORE_USELESS_CAST_END


1132 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1134 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1135 #i‡!
deföed
 
yyovîÊow
 && !deföed 
YYSTACK_RELOCATE


1136 
YYNOMEM
;

1140 
YYPTRDIFF_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1142 #i‡
deföed
 
yyovîÊow


1147 
yy_°©e_t
 *
yyss1
 = 
yyss
;

1148 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1154 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1155 &
yyss1
, 
yysize
 * 
	`YYSIZEOF
 (*
yys•
),

1156 &
yyvs1
, 
yysize
 * 
	`YYSIZEOF
 (*
yyv•
),

1157 &
yy°acksize
);

1158 
yyss
 = 
yyss1
;

1159 
yyvs
 = 
yyvs1
;

1163 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1164 
YYNOMEM
;

1165 
yy°acksize
 *= 2;

1166 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1167 
yy°acksize
 = 
YYMAXDEPTH
;

1170 
yy_°©e_t
 *
yyss1
 = 
yyss
;

1171 
yyÆloc
 *
yy±r
 =

1172 
	`YY_CAST
 (
yyÆloc
 *,

1173 
	`YYSTACK_ALLOC
 (
	`YY_CAST
 (
YYSIZE_T
, 
	`YYSTACK_BYTES
 (
yy°acksize
))));

1174 i‡(! 
yy±r
)

1175 
YYNOMEM
;

1176 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1177 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1178 #unde‡
YYSTACK_RELOCATE


1179 i‡(
yyss1
 !
yysß
)

1180 
	`YYSTACK_FREE
 (
yyss1
);

1184 
yys•
 = 
yyss
 + 
yysize
 - 1;

1185 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1187 
YY_IGNORE_USELESS_CAST_BEGIN


1188 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %ld\n",

1189 
	`YY_CAST
 (, 
yy°acksize
)));

1190 
YY_IGNORE_USELESS_CAST_END


1192 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1193 
YYABORT
;

1198 i‡(
yy°©e
 =
YYFINAL
)

1199 
YYACCEPT
;

1201 
yybackup
;

1207 
yybackup
:

1212 
yyn
 = 
yy∑˘
[
yy°©e
];

1213 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1214 
yydeÁu…
;

1219 i‡(
yych¨
 =
YYEMPTY
)

1221 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken\n"));

1222 
yych¨
 = 
	`yyÀx
 ();

1225 i‡(
yych¨
 <
YYEOF
)

1227 
yych¨
 = 
YYEOF
;

1228 
yytokí
 = 
YYSYMBOL_YYEOF
;

1229 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1231 i‡(
yych¨
 =
YYîr‹
)

1237 
yych¨
 = 
YYUNDEF
;

1238 
yytokí
 = 
YYSYMBOL_YYîr‹
;

1239 
yyîæab1
;

1243 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1244 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1249 
yyn
 +
yytokí
;

1250 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1251 
yydeÁu…
;

1252 
yyn
 = 
yyèbÀ
[yyn];

1253 i‡(
yyn
 <= 0)

1255 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

1256 
yyîæab
;

1257 
yyn
 = -yyn;

1258 
yyªdu˚
;

1263 i‡(
yyîr°©us
)

1264 
yyîr°©us
--;

1267 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1268 
yy°©e
 = 
yyn
;

1269 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1270 *++
yyv•
 = 
yylvÆ
;

1271 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1274 
yych¨
 = 
YYEMPTY
;

1275 
yy√w°©e
;

1281 
yydeÁu…
:

1282 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1283 i‡(
yyn
 == 0)

1284 
yyîæab
;

1285 
yyªdu˚
;

1291 
yyªdu˚
:

1293 
yyÀn
 = 
yyr2
[
yyn
];

1303 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1306 
	`YY_REDUCE_PRINT
 (
yyn
);

1307 
yyn
)

1311 { 
ßvedTªe
 = 
yyv•
[0];}

1317 { 
YYSTYPE
 
t
 = 
yyv•
[-1];

1318 i‡(
t
 !
NULL
)

1319 { 
t
->
siblög
 !
NULL
)

1320 
t
 =Å->
siblög
;

1321 
t
->
siblög
 = 
yyv•
[0];

1322 
yyvÆ
 = 
yyv•
[-1]; }

1323 
yyvÆ
 = 
yyv•
[0];

1330 { 
yyvÆ
 = 
yyv•
[0]; }

1336 { 
yyvÆ
 = 
yyv•
[0]; }

1342 { 
yyvÆ
 = 
yyv•
[0]; }

1348 { 
yyvÆ
 = 
	`√wExpNode
(
IdK
,
löío
);

1349 
ßvedName
 = 
	`c›ySåög
(
tokíSåög
);

1350 
yyvÆ
->
©å
.
«me
=
ßvedName
;

1357 { 
yyvÆ
 = 
	`√wExpNode
(
C⁄°K
,
löío
);

1358 
ßvedNumbî
 = 
	`©oi
(
tokíSåög
);

1359 
yyvÆ
->
©å
.
vÆ
 = 
ßvedNumbî
;

1366 { 
yyvÆ
 = 
	`√wDe˛Node
(
V¨K
, 
yyv•
[-1]->
löío
);

1367 
yyvÆ
->
ty≥
 = 
yyv•
[-2]->type;

1368 
yyvÆ
->
©å
.
«me
 = 
yyv•
[-1]->attr.name;

1375 { 
yyvÆ
 = 
	`√wDe˛Node
(
AºK
,
yyv•
[-4]->
löío
);

1376 
yyvÆ
->
ty≥
 = (
yyv•
[-5]->ty≥=
I¡egî
Ë? 
I¡Aºay
 : 
VoidAºay
;

1377 
yyvÆ
->
©å
.
«me
 =
yyv•
[-4]->attr.name;

1378 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1385 { 
yyvÆ
 = 
	`√wDe˛Node
(
Ty≥K
,
löío
);

1386 
yyvÆ
->
ty≥
 = 
I¡egî
;

1393 { 
yyvÆ
 = 
	`√wDe˛Node
(
Ty≥K
,
löío
);

1394 
yyvÆ
->
ty≥
 = 
Void
;

1401 { 
yyvÆ
 = 
	`√wDe˛Node
(
FuncK
,
yyv•
[-4]->
löío
);

1402 
yyvÆ
->
ty≥
 = 
yyv•
[-5]->type;

1403 
yyvÆ
->
©å
.
«me
 = 
yyv•
[-4]->attr.name;

1404 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1405 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1412 { 
yyvÆ
 = 
yyv•
[0]; }

1418 { 
yyvÆ
 = 
	`√wDe˛Node
(
VoidP¨amK
,
löío
); }

1424 { 
YYSTYPE
 
t
 = 
yyv•
[-2];

1425 i‡(
t
 !
NULL
)

1426 { 
t
->
siblög
 !
NULL
)

1427 
t
 =Å->
siblög
;

1428 
t
->
siblög
 = 
yyv•
[0];

1429 
yyvÆ
 = 
yyv•
[-2]; }

1430 
yyvÆ
 = 
yyv•
[0];

1437 { 
yyvÆ
 = 
yyv•
[0]; }

1443 { 
yyvÆ
 = 
	`√wDe˛Node
(
P¨amK
,
yyv•
[0]->
löío
);

1444 
yyvÆ
->
ty≥
 = 
yyv•
[-1]->type;

1445 
yyvÆ
->
©å
.
«me
 = 
	`c›ySåög
(
ßvedName
);

1452 { 
yyvÆ
 = 
	`√wDe˛Node
(
AºP¨amK
,
yyv•
[-2]->
löío
);

1453 
yyvÆ
->
ty≥
 = (
yyv•
[-3]->ty≥==
I¡egî
)?
I¡Aºay
:
VoidAºay
;

1454 
yyvÆ
->
©å
.
«me
 = 
	`c›ySåög
(
ßvedName
);

1461 { 
yyvÆ
 = 
	`√wStmtNode
(
CompoundK
, 
yyv•
[0]->
löío
);

1462 
yyvÆ
->
chûd
[0] = 
yyv•
[-2] ? yyv•[-2] : 
NULL
;

1463 
yyvÆ
->
chûd
[1] = 
yyv•
[-1] ? yyv•[-1] : 
NULL
;

1470 { 
YYSTYPE
 
t
 = 
yyv•
[-1];

1471 i‡(
t
 !
NULL
)

1472 { 
t
->
siblög
 !
NULL
)

1473 
t
 =Å->
siblög
;

1474 
t
->
siblög
 = 
yyv•
[0];

1475 
yyvÆ
 = 
yyv•
[-1]; }

1476 
yyvÆ
 = 
yyv•
[0];

1483 { 
yyvÆ
 = 
NULL
; }

1489 { 
YYSTYPE
 
t
 = 
yyv•
[-1];

1490 i‡(
t
 !
NULL
)

1491 { 
t
->
siblög
 !
NULL
)

1492 
t
 =Å->
siblög
;

1493 
t
->
siblög
 = 
yyv•
[0];

1494 
yyvÆ
 = 
yyv•
[-1]; }

1495 
yyvÆ
 = 
yyv•
[0];

1502 { 
yyvÆ
 = 
NULL
; }

1508 { 
yyvÆ
 = 
yyv•
[0]; }

1514 { 
yyvÆ
 = 
yyv•
[0]; }

1520 { 
yyvÆ
 = 
yyv•
[0]; }

1526 { 
yyvÆ
 = 
yyv•
[0]; }

1532 { 
yyvÆ
 = 
yyv•
[0]; }

1538 { 
	`yyîr‹
("Sy¡axÉº‹ i¿°©emít."); 
yyîrok
; }

1544 { 
yyvÆ
 = 
yyv•
[-1]; }

1550 { 
yyvÆ
 = 
NULL
; }

1556 { 
yyvÆ
 = 
	`√wStmtNode
(
IfK
,
yyv•
[0]->
löío
);

1557 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1558 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1565 { 
yyvÆ
 = 
	`√wStmtNode
(
El£K
,
yyv•
[0]->
löío
);

1566 
yyvÆ
->
chûd
[0] = 
yyv•
[-4];

1567 
yyvÆ
->
chûd
[1] = 
yyv•
[-2];

1568 
yyvÆ
->
chûd
[2] = 
yyv•
[0];

1575 { 
yyvÆ
 = 
	`√wStmtNode
(
WhûeK
,
yyv•
[0]->
löío
);

1576 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1577 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1584 { 
yyvÆ
 = 
	`√wStmtNode
(
Rëu∫K
,
yyv•
[0]->
löío
);

1591 { 
yyvÆ
 = 
	`√wStmtNode
(
Rëu∫K
,
yyv•
[0]->
löío
);

1592 
yyvÆ
->
chûd
[0] = 
yyv•
[-1];

1599 { 
yyvÆ
 = 
	`√wExpNode
(
AssignK
,
yyv•
[-2]->
löío
);

1600 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1601 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1608 { 
yyvÆ
 = 
yyv•
[0]; }

1614 { 
yyvÆ
 = 
	`√wExpNode
(
V¨ExpK
,
yyv•
[0]->
löío
);

1615 
yyvÆ
->
©å
.
«me
 = 
	`c›ySåög
(
ßvedName
);

1622 { 
yyvÆ
 = 
	`√wExpNode
(
V¨ExpK
,
yyv•
[-3]->
löío
);

1623 
yyvÆ
->
©å
.
«me
 = 
yyv•
[-3]->attr.name;

1624 
yyvÆ
->
chûd
[0] = 
yyv•
[-1];

1631 { 
yyvÆ
 = 
	`√wExpNode
(
OpK
, 
yyv•
[-2]->
löío
);

1632 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1633 
yyvÆ
->
©å
.
›
 =
LT
;

1634 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1641 { 
yyvÆ
 = 
	`√wExpNode
(
OpK
, 
yyv•
[-2]->
löío
);

1642 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1643 
yyvÆ
->
©å
.
›
 =
LE
;

1644 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1651 { 
yyvÆ
 = 
	`√wExpNode
(
OpK
, 
yyv•
[-2]->
löío
);

1652 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1653 
yyvÆ
->
©å
.
›
 = 
GT
;

1654 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1661 { 
yyvÆ
 = 
	`√wExpNode
(
OpK
, 
yyv•
[-2]->
löío
);

1662 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1663 
yyvÆ
->
©å
.
›
 = 
GE
;

1664 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1671 { 
yyvÆ
 = 
	`√wExpNode
(
OpK
, 
yyv•
[-2]->
löío
);

1672 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1673 
yyvÆ
->
©å
.
›
 = 
EQ
;

1674 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1681 { 
yyvÆ
 = 
	`√wExpNode
(
OpK
, 
yyv•
[-2]->
löío
);

1682 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1683 
yyvÆ
->
©å
.
›
 = 
NE
;

1684 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1691 { 
yyvÆ
 = 
yyv•
[0]; }

1697 { 
yyvÆ
 = 
	`√wExpNode
(
OpK
, 
yyv•
[-2]->
löío
);

1698 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1699 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1700 
yyvÆ
->
©å
.
›
 = 
PLUS
;

1707 { 
yyvÆ
 = 
	`√wExpNode
(
OpK
, 
yyv•
[-2]->
löío
);

1708 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1709 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1710 
yyvÆ
->
©å
.
›
 = 
MINUS
;

1717 { 
yyvÆ
 = 
yyv•
[0]; }

1723 { 
yyvÆ
 = 
	`√wExpNode
(
OpK
, 
yyv•
[-2]->
löío
);

1724 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1725 
yyvÆ
->
©å
.
›
 = 
TIMES
;

1726 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1733 { 
yyvÆ
 = 
	`√wExpNode
(
OpK
, 
yyv•
[-2]->
löío
);

1734 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1735 
yyvÆ
->
©å
.
›
 = 
OVER
;

1736 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1743 { 
yyvÆ
 = 
yyv•
[0]; }

1749 { 
yyvÆ
 = 
yyv•
[-1]; }

1755 { 
yyvÆ
 = 
yyv•
[0]; }

1761 { 
yyvÆ
 = 
yyv•
[0]; }

1767 { 
yyvÆ
 = 
	`√wExpNode
(
C⁄°K
, 
yyv•
[0]->
löío
);

1768 
yyvÆ
->
©å
.
vÆ
=
ßvedNumbî
;

1775 { 
yyvÆ
 = 
	`√wExpNode
(
CÆlK
, 
yyv•
[-3]->
löío
);

1776 
yyvÆ
->
©å
.
«me
 = 
yyv•
[-3]->attr.name;

1777 
yyvÆ
->
chûd
[0] = 
yyv•
[-1];

1784 { 
yyvÆ
 = 
yyv•
[0]; }

1790 { 
yyvÆ
 = 
NULL
; }

1796 { 
YYSTYPE
 
t
 = 
yyv•
[-2];

1797 i‡(
t
 !
NULL
)

1798 { 
t
->
siblög
 !
NULL
)

1799 
t
 =Å->
siblög
;

1800 
t
->
siblög
 = 
yyv•
[0];

1801 
yyvÆ
 = 
yyv•
[-2]; }

1802 
yyvÆ
 = 
yyv•
[0];

1809 { 
yyvÆ
 = 
yyv•
[0]; }

1829 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
	`YY_CAST
 (
yysymbﬁ_köd_t
, 
yyr1
[
yyn
]), &
yyvÆ
, &
yyloc
);

1831 
	`YYPOPSTACK
 (
yyÀn
);

1832 
yyÀn
 = 0;

1834 *++
yyv•
 = 
yyvÆ
;

1840 c⁄° 
yylhs
 = 
yyr1
[
yyn
] - 
YYNTOKENS
;

1841 c⁄° 
yyi
 = 
yypgŸo
[
yylhs
] + *
yys•
;

1842 
yy°©e
 = (0 <
yyi
 && yyò<
YYLAST
 && 
yycheck
[yyi] =*
yys•


1843 ? 
yyèbÀ
[
yyi
]

1844 : 
yydefgŸo
[
yylhs
]);

1847 
yy√w°©e
;

1853 
yyîæab
:

1856 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? 
YYSYMBOL_YYEMPTY
 : 
	`YYTRANSLATE
 (yychar);

1858 i‡(!
yyîr°©us
)

1860 ++
yy√ºs
;

1861 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

1864 i‡(
yyîr°©us
 == 3)

1869 i‡(
yych¨
 <
YYEOF
)

1872 i‡(
yych¨
 =
YYEOF
)

1873 
YYABORT
;

1877 
	`yyde°ru˘
 ("Error: discarding",

1878 
yytokí
, &
yylvÆ
);

1879 
yych¨
 = 
YYEMPTY
;

1885 
yyîæab1
;

1891 
yyîr‹œb
:

1895 
YYERROR
;

1896 ++
yy√ºs
;

1900 
	`YYPOPSTACK
 (
yyÀn
);

1901 
yyÀn
 = 0;

1902 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1903 
yy°©e
 = *
yys•
;

1904 
yyîæab1
;

1910 
yyîæab1
:

1911 
yyîr°©us
 = 3;

1916 
yyn
 = 
yy∑˘
[
yy°©e
];

1917 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1919 
yyn
 +
YYSYMBOL_YYîr‹
;

1920 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYSYMBOL_YYîr‹
)

1922 
yyn
 = 
yyèbÀ
[yyn];

1923 i‡(0 < 
yyn
)

1929 i‡(
yys•
 =
yyss
)

1930 
YYABORT
;

1933 
	`yyde°ru˘
 ("Error:Öopping",

1934 
	`YY_ACCESSING_SYMBOL
 (
yy°©e
), 
yyv•
);

1935 
	`YYPOPSTACK
 (1);

1936 
yy°©e
 = *
yys•
;

1937 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1940 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1941 *++
yyv•
 = 
yylvÆ
;

1942 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1946 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
	`YY_ACCESSING_SYMBOL
 (
yyn
), 
yyv•
, 
yyl•
);

1948 
yy°©e
 = 
yyn
;

1949 
yy√w°©e
;

1955 
yyac˚±œb
:

1956 
yyªsu…
 = 0;

1957 
yyªtu∫œb
;

1963 
yyab‹éab
:

1964 
yyªsu…
 = 1;

1965 
yyªtu∫œb
;

1971 
yyexhau°edœb
:

1972 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

1973 
yyªsu…
 = 2;

1974 
yyªtu∫œb
;

1980 
yyªtu∫œb
:

1981 i‡(
yych¨
 !
YYEMPTY
)

1985 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1986 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

1987 
yytokí
, &
yylvÆ
);

1991 
	`YYPOPSTACK
 (
yyÀn
);

1992 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1993 
yys•
 !
yyss
)

1995 
	`yyde°ru˘
 ("Cleanup:Öopping",

1996 
	`YY_ACCESSING_SYMBOL
 (+*
yys•
), 
yyv•
);

1997 
	`YYPOPSTACK
 (1);

1999 #i‚de‡
yyovîÊow


2000 i‡(
yyss
 !
yysß
)

2001 
	`YYSTACK_FREE
 (
yyss
);

2004  
yyªsu…
;

2005 
	}
}

2014 
	$yyîr‹
(* 
mesßge
) {

2015 
	`Ârötf
(
li°ög
,"Sy¡axÉº‹áàlöê%d: %s\n",
löío
,
mesßge
);

2016 
	`Ârötf
(
li°ög
,"CurrentÅoken: ");

2017 
	`¥ötTokí
(
yych¨
,
tokíSåög
);

2018 
Eº‹
 = 
TRUE
;

2020 
	}
}

2024 
	$yyÀx
() {

2025  
	`gëTokí
();

2026 
	}
}

2028 
TªeNode
 * 
	$∑r£
() {

2029 
	`yy∑r£
();

2030  
ßvedTªe
;

2031 
	}
}

	@y.tab.h

38 #i‚de‡
YY_YY_Y_TAB_H_INCLUDED


39 
	#YY_YY_Y_TAB_H_INCLUDED


	)

41 #i‚de‡
YYDEBUG


42 
	#YYDEBUG
 0

	)

44 #i‡
YYDEBUG


45 
yydebug
;

49 #i‚de‡
YYTOKENTYPE


50 
	#YYTOKENTYPE


	)

51 
	eyytokíty≥


53 
	mYYEMPTY
 = -2,

54 
	mYYEOF
 = 0,

55 
	mYYîr‹
 = 256,

56 
	mYYUNDEF
 = 257,

57 
	mIF
 = 258,

58 
	mELSE
 = 259,

59 
	mINT
 = 260,

60 
	mRETURN
 = 261,

61 
	mVOID
 = 262,

62 
	mWHILE
 = 263,

63 
	mID
 = 264,

64 
	mNUM
 = 265,

65 
	mLT
 = 266,

66 
	mLE
 = 267,

67 
	mGT
 = 268,

68 
	mGE
 = 269,

69 
	mEQ
 = 270,

70 
	mNE
 = 271,

71 
	mSEMI
 = 272,

72 
	mLPAREN
 = 273,

73 
	mRPAREN
 = 274,

74 
	mLCURLY
 = 275,

75 
	mRCURLY
 = 276,

76 
	mLBRACE
 = 277,

77 
	mRBRACE
 = 278,

78 
	mPLUS
 = 279,

79 
	mMINUS
 = 280,

80 
	mTIMES
 = 281,

81 
	mOVER
 = 282,

82 
	mCOMMA
 = 283,

83 
	mASSIGN
 = 284,

84 
	mTHEN
 = 285,

85 
	mERROR
 = 286

87 
yytokíty≥
 
	tyytokí_köd_t
;

90 
	#YYEMPTY
 -2

	)

91 
	#YYEOF
 0

	)

92 
	#YYîr‹
 256

	)

93 
	#YYUNDEF
 257

	)

94 
	#IF
 258

	)

95 
	#ELSE
 259

	)

96 
	#INT
 260

	)

97 
	#RETURN
 261

	)

98 
	#VOID
 262

	)

99 
	#WHILE
 263

	)

100 
	#ID
 264

	)

101 
	#NUM
 265

	)

102 
	#LT
 266

	)

103 
	#LE
 267

	)

104 
	#GT
 268

	)

105 
	#GE
 269

	)

106 
	#EQ
 270

	)

107 
	#NE
 271

	)

108 
	#SEMI
 272

	)

109 
	#LPAREN
 273

	)

110 
	#RPAREN
 274

	)

111 
	#LCURLY
 275

	)

112 
	#RCURLY
 276

	)

113 
	#LBRACE
 277

	)

114 
	#RBRACE
 278

	)

115 
	#PLUS
 279

	)

116 
	#MINUS
 280

	)

117 
	#TIMES
 281

	)

118 
	#OVER
 282

	)

119 
	#COMMA
 283

	)

120 
	#ASSIGN
 284

	)

121 
	#THEN
 285

	)

122 
	#ERROR
 286

	)

125 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


126 
	tYYSTYPE
;

127 
	#YYSTYPE_IS_TRIVIAL
 1

	)

128 
	#YYSTYPE_IS_DECLARED
 1

	)

132 
YYSTYPE
 
yylvÆ
;

135 
yy∑r£
 ();

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<bôs/ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

108 
__ex˘y≥
 (
iß um
);

109 
__ex˘y≥
 (
ißÕha
);

110 
__ex˘y≥
 (
is˙ål
);

111 
__ex˘y≥
 (
isdigô
);

112 
__ex˘y≥
 (
i¶owî
);

113 
__ex˘y≥
 (
isgøph
);

114 
__ex˘y≥
 (
i•röt
);

115 
__ex˘y≥
 (
i•un˘
);

116 
__ex˘y≥
 (
is•a˚
);

117 
__ex˘y≥
 (
isuµî
);

118 
__ex˘y≥
 (
isxdigô
);

122 
	$tﬁowî
 (
__c
Ë
__THROW
;

125 
	$touµî
 (
__c
Ë
__THROW
;

129 #ifdef 
__USE_ISOC99


130 
	`__ex˘y≥
 (
isbœnk
);

133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE


173 #ifde‡
__is˘y≥_f


174 
	$__is˘y≥_f
 (
Ænum
)

175 
	$__is˘y≥_f
 (
Æpha
)

176 
	$__is˘y≥_f
 (
˙ål
)

177 
	$__is˘y≥_f
 (
digô
)

178 
	$__is˘y≥_f
 (
lowî
)

179 
	$__is˘y≥_f
 (
gøph
)

180 
	$__is˘y≥_f
 (
¥öt
)

181 
	$__is˘y≥_f
 (
pun˘
)

182 
	$__is˘y≥_f
 (
•a˚
)

183 
	$__is˘y≥_f
 (
uµî
)

184 
	$__is˘y≥_f
 (
xdigô
)

185 #ifde‡
__USE_ISOC99


186 
	$__is˘y≥_f
 (
bœnk
)

188 #ñi‡
deföed
 
__is˘y≥


189 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

190 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

191 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

192 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

193 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

194 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

195 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

196 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

197 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

198 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

199 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

200 #ifde‡
__USE_ISOC99


201 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

205 #ifde‡
__USE_EXTERN_INLINES


206 
__exã∫_ölöe
 

207 
	`__NTH
 (
	$tﬁowî
 (
__c
))

209  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

210 
	}
}

212 
__exã∫_ölöe
 

213 
__NTH
 (
	$touµî
 (
__c
))

215  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

216 
	}
}

219 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


220 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

221 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

224 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


225 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

226 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

228 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

229 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

235 #ifde‡
__USE_XOPEN2K8


237 
	~<bôs/ty≥s/loˇÀ_t.h
>

241 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

242 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

244 
	#__ex˘y≥_l
(
«me
) \

245 
	`«me
 (, 
loˇÀ_t
Ë
__THROW


	)

251 
__ex˘y≥_l
 (
iß um_l
);

252 
__ex˘y≥_l
 (
ißÕha_l
);

253 
__ex˘y≥_l
 (
is˙ål_l
);

254 
__ex˘y≥_l
 (
isdigô_l
);

255 
__ex˘y≥_l
 (
i¶owî_l
);

256 
__ex˘y≥_l
 (
isgøph_l
);

257 
__ex˘y≥_l
 (
i•röt_l
);

258 
__ex˘y≥_l
 (
i•un˘_l
);

259 
__ex˘y≥_l
 (
is•a˚_l
);

260 
__ex˘y≥_l
 (
isuµî_l
);

261 
__ex˘y≥_l
 (
isxdigô_l
);

263 
__ex˘y≥_l
 (
isbœnk_l
);

267 
	$__tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

271 
	$__touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

272 
	$touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

274 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


275 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

276 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

277 
	#__touµî_l
(
c
, 
loˇÀ
) \

278 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

279 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

280 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

284 #i‚de‡
__NO_CTYPE


285 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

286 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

287 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

288 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

289 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

290 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

291 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

292 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

293 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

294 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

295 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

297 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

299 #ifde‡
__USE_MISC


300 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

301 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

304 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

305 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

306 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

307 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

308 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

309 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

310 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

311 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

312 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

313 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

314 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

316 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

318 #ifde‡
__USE_MISC


319 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

320 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

327 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


23 
	#_ERRNO_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/î∫o.h
>

32 #i‚de‡
__ASSEMBLER__


34 
__BEGIN_DECLS


37 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
__©åibuã_c⁄°__
;

38 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

40 #ifde‡
__USE_GNU


45 *
¥ogøm_övoˇti⁄_«me
;

46 *
¥ogøm_övoˇti⁄_sh‹t_«me
;

48 
	~<bôs/ty≥s/îr‹_t.h
>

52 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

168 #i‡
__GLIBC_USE
 (
ISOC2X
)

169 
	#PRIb8
 "b"

	)

170 
	#PRIb16
 "b"

	)

171 
	#PRIb32
 "b"

	)

172 
	#PRIb64
 
__PRI64_PREFIX
 "b"

	)

174 
	#PRIbLEAST8
 "b"

	)

175 
	#PRIbLEAST16
 "b"

	)

176 
	#PRIbLEAST32
 "b"

	)

177 
	#PRIbLEAST64
 
__PRI64_PREFIX
 "b"

	)

179 
	#PRIbFAST8
 "b"

	)

180 
	#PRIbFAST16
 
__PRIPTR_PREFIX
 "b"

	)

181 
	#PRIbFAST32
 
__PRIPTR_PREFIX
 "b"

	)

182 
	#PRIbFAST64
 
__PRI64_PREFIX
 "b"

	)

184 
	#PRIbMAX
 
__PRI64_PREFIX
 "b"

	)

185 
	#PRIbPTR
 
__PRIPTR_PREFIX
 "b"

	)

187 
	#PRIB8
 "B"

	)

188 
	#PRIB16
 "B"

	)

189 
	#PRIB32
 "B"

	)

190 
	#PRIB64
 
__PRI64_PREFIX
 "B"

	)

192 
	#PRIBLEAST8
 "B"

	)

193 
	#PRIBLEAST16
 "B"

	)

194 
	#PRIBLEAST32
 "B"

	)

195 
	#PRIBLEAST64
 
__PRI64_PREFIX
 "B"

	)

197 
	#PRIBFAST8
 "B"

	)

198 
	#PRIBFAST16
 
__PRIPTR_PREFIX
 "B"

	)

199 
	#PRIBFAST32
 
__PRIPTR_PREFIX
 "B"

	)

200 
	#PRIBFAST64
 
__PRI64_PREFIX
 "B"

	)

202 
	#PRIBMAX
 
__PRI64_PREFIX
 "B"

	)

203 
	#PRIBPTR
 
__PRIPTR_PREFIX
 "B"

	)

210 
	#SCNd8
 "hhd"

	)

211 
	#SCNd16
 "hd"

	)

212 
	#SCNd32
 "d"

	)

213 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

215 
	#SCNdLEAST8
 "hhd"

	)

216 
	#SCNdLEAST16
 "hd"

	)

217 
	#SCNdLEAST32
 "d"

	)

218 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

220 
	#SCNdFAST8
 "hhd"

	)

221 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

222 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

223 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

226 
	#SCNi8
 "hhi"

	)

227 
	#SCNi16
 "hi"

	)

228 
	#SCNi32
 "i"

	)

229 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

231 
	#SCNiLEAST8
 "hhi"

	)

232 
	#SCNiLEAST16
 "hi"

	)

233 
	#SCNiLEAST32
 "i"

	)

234 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

236 
	#SCNiFAST8
 "hhi"

	)

237 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

238 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

239 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

242 
	#SCNu8
 "hhu"

	)

243 
	#SCNu16
 "hu"

	)

244 
	#SCNu32
 "u"

	)

245 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

247 
	#SCNuLEAST8
 "hhu"

	)

248 
	#SCNuLEAST16
 "hu"

	)

249 
	#SCNuLEAST32
 "u"

	)

250 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

252 
	#SCNuFAST8
 "hhu"

	)

253 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

254 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

255 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

258 
	#SCNo8
 "hho"

	)

259 
	#SCNo16
 "ho"

	)

260 
	#SCNo32
 "o"

	)

261 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

263 
	#SCNoLEAST8
 "hho"

	)

264 
	#SCNoLEAST16
 "ho"

	)

265 
	#SCNoLEAST32
 "o"

	)

266 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

268 
	#SCNoFAST8
 "hho"

	)

269 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

270 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

271 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

274 
	#SCNx8
 "hhx"

	)

275 
	#SCNx16
 "hx"

	)

276 
	#SCNx32
 "x"

	)

277 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

279 
	#SCNxLEAST8
 "hhx"

	)

280 
	#SCNxLEAST16
 "hx"

	)

281 
	#SCNxLEAST32
 "x"

	)

282 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

284 
	#SCNxFAST8
 "hhx"

	)

285 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

286 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

287 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

291 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

292 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

293 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

294 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

295 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

298 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

299 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

300 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

301 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

302 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

306 #i‡
__GLIBC_USE
 (
ISOC2X
)

307 
	#SCNb8
 "hhb"

	)

308 
	#SCNb16
 "hb"

	)

309 
	#SCNb32
 "b"

	)

310 
	#SCNb64
 
__PRI64_PREFIX
 "b"

	)

312 
	#SCNbLEAST8
 "hhb"

	)

313 
	#SCNbLEAST16
 "hb"

	)

314 
	#SCNbLEAST32
 "b"

	)

315 
	#SCNbLEAST64
 
__PRI64_PREFIX
 "b"

	)

317 
	#SCNbFAST8
 "hhb"

	)

318 
	#SCNbFAST16
 
__PRIPTR_PREFIX
 "b"

	)

319 
	#SCNbFAST32
 
__PRIPTR_PREFIX
 "b"

	)

320 
	#SCNbFAST64
 
__PRI64_PREFIX
 "b"

	)

322 
	#SCNbMAX
 
__PRI64_PREFIX
 "b"

	)

323 
	#SCNbPTR
 
__PRIPTR_PREFIX
 "b"

	)

327 
	g__BEGIN_DECLS


329 #i‡
__WORDSIZE
 == 64

334 
	mquŸ
;

335 
	mªm
;

336 } 
	timaxdiv_t
;

343 
__exãnsi⁄__
 
	mquŸ
;

344 
__exãnsi⁄__
 
	mªm
;

345 } 
	timaxdiv_t
;

351 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

354 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

355 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

358 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

359 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

362 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

363 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

366 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

367 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

368 
__THROW
;

371 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

372 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

373 
__THROW
;

377 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

378 #ifde‡
__REDIRECT


379 
ötmax_t
 
	`__REDIRECT_NTH
 (
°πoimax
, (c⁄° *
__ª°ri˘
 
__≈å
,

380 **
__ª°ri˘
 
__íd±r
,

381 
__ba£
), 
__isoc23_°πoimax
);

382 
uötmax_t
 
	`__REDIRECT_NTH
 (
°πoumax
, (c⁄° *
__ª°ri˘
 
__≈å
,

383 **
__ª°ri˘
 
__íd±r
,

384 
__ba£
), 
__isoc23_°πoumax
);

385 
ötmax_t
 
	`__REDIRECT_NTH
 (
wc°oimax
,

386 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

387 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
),

388 
__isoc23_wc°oimax
);

389 
uötmax_t
 
	`__REDIRECT_NTH
 (
wc°oumax
,

390 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

391 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
),

392 
__isoc23_wc°oumax
);

394 
ötmax_t
 
	$__isoc23_°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

395 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

396 
__THROW
;

397 
uötmax_t
 
	$__isoc23_°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

398 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

399 
__THROW
;

400 
ötmax_t
 
	$__isoc23_wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
)

403 
__THROW
;

404 
uötmax_t
 
	$__isoc23_wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

405 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
,

406 
__ba£
)

407 
__THROW
;

408 
	#°πoimax
 
__isoc23_°πoimax


	)

409 
	#°πoumax
 
__isoc23_°πoumax


	)

410 
	#wc°oimax
 
__isoc23_wc°oimax


	)

411 
	#wc°oumax
 
__isoc23_wc°oumax


	)

415 
__END_DECLS


	@/usr/include/libintl.h

20 #i‚de‡
_LIBINTL_H


21 
	#_LIBINTL_H
 1

	)

23 
	~<„©uªs.h
>

27 
	#__USE_GNU_GETTEXT
 1

	)

31 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

32 ((
maj‹
Ë=0 ? 1 : -1)

	)

34 
__BEGIN_DECLS


39 *
	$gëãxt
 (c⁄° *
__msgid
)

40 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

44 *
	$dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

45 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

46 *
	$__dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

47 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

51 *
	$dcgëãxt
 (c⁄° *
__domaö«me
,

52 c⁄° *
__msgid
, 
__ˇãg‹y
)

53 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

54 *
	$__dcgëãxt
 (c⁄° *
__domaö«me
,

55 c⁄° *
__msgid
, 
__ˇãg‹y
)

56 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

61 *
	$ngëãxt
 (c⁄° *
__msgid1
, c⁄° *
__msgid2
,

62 
__n
)

63 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

67 *
	$dngëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

68 c⁄° *
__msgid2
, 
__n
)

69 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

73 *
	$d˙gëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

74 c⁄° *
__msgid2
, 
__n
,

75 
__ˇãg‹y
)

76 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

82 *
	$ãxtdomaö
 (c⁄° *
__domaö«me
Ë
__THROW
;

86 *
	$bödãxtdomaö
 (c⁄° *
__domaö«me
,

87 c⁄° *
__dú«me
Ë
__THROW
;

91 *
	$böd_ãxtdomaö_code£t
 (c⁄° *
__domaö«me
,

92 c⁄° *
__code£t
Ë
__THROW
;

96 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


99 
	#__√ed_NULL


	)

100 
	~<°ddef.h
>

103 
	~<loˇÀ.h
>

109 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

111 
	#dgëãxt
(
domaö«me
, 
msgid
) \

112 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

114 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

116 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

117 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

121 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

145 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

146 #i‚de‡
CHAR_WIDTH


147 
	#CHAR_WIDTH
 8

	)

149 #i‚de‡
SCHAR_WIDTH


150 
	#SCHAR_WIDTH
 8

	)

152 #i‚de‡
UCHAR_WIDTH


153 
	#UCHAR_WIDTH
 8

	)

155 #i‚de‡
SHRT_WIDTH


156 
	#SHRT_WIDTH
 16

	)

158 #i‚de‡
USHRT_WIDTH


159 
	#USHRT_WIDTH
 16

	)

161 #i‚de‡
INT_WIDTH


162 
	#INT_WIDTH
 32

	)

164 #i‚de‡
UINT_WIDTH


165 
	#UINT_WIDTH
 32

	)

167 #i‚de‡
LONG_WIDTH


168 
	#LONG_WIDTH
 
__WORDSIZE


	)

170 #i‚de‡
ULONG_WIDTH


171 
	#ULONG_WIDTH
 
__WORDSIZE


	)

173 #i‚de‡
LLONG_WIDTH


174 
	#LLONG_WIDTH
 64

	)

176 #i‚de‡
ULLONG_WIDTH


177 
	#ULLONG_WIDTH
 64

	)

184 #i‡
__GLIBC_USE
 (
ISOC2X
)

185 #i‚de‡
BOOL_MAX


186 
	#BOOL_MAX
 1

	)

188 #i‚de‡
BOOL_WIDTH


189 
	#BOOL_WIDTH
 1

	)

193 #ifdef 
__USE_POSIX


195 
	~<bôs/posix1_lim.h
>

198 #ifdef 
__USE_POSIX2


199 
	~<bôs/posix2_lim.h
>

202 #ifdef 
__USE_XOPEN


203 
	~<bôs/x›í_lim.h
>

	@/usr/include/malloc.h

20 #i‚de‡
_MALLOC_H


21 
	#_MALLOC_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°ddef.h
>

25 
	~<°dio.h
>

27 #ifde‡
_LIBC


28 
	#__MALLOC_HOOK_VOLATILE


	)

29 
	#__MALLOC_DEPRECATED


	)

31 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

32 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

36 
__BEGIN_DECLS


39 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


40 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

43 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

44 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

51 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

52 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

59 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

60 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2, 3))

61 
__©å_dóŒoc_‰ì
;

64 
	$‰ì
 (*
__±r
Ë
__THROW
;

67 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

68 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_Æign__
 ((1))

69 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
 
__©å_dóŒoc_‰ì
;

72 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


73 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
 
__©å_dóŒoc_‰ì
;

77 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


78 
__wur
 
__©å_dóŒoc_‰ì
;

82 
	smÆlöfo


84 
¨ía
;

85 
‹dblks
;

86 
smblks
;

87 
hblks
;

88 
hblkhd
;

89 
usmblks
;

90 
fsmblks
;

91 
u‹dblks
;

92 
f‹dblks
;

93 
kìpco°
;

99 
	smÆlöfo2


101 
size_t
 
¨ía
;

102 
size_t
 
‹dblks
;

103 
size_t
 
smblks
;

104 
size_t
 
hblks
;

105 
size_t
 
hblkhd
;

106 
size_t
 
usmblks
;

107 
size_t
 
fsmblks
;

108 
size_t
 
u‹dblks
;

109 
size_t
 
f‹dblks
;

110 
size_t
 
kìpco°
;

114 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

117 
mÆlöfo2
 
	$mÆlöfo2
 (Ë
__THROW
;

120 #i‚de‡
M_MXFAST


121 
	#M_MXFAST
 1

	)

123 #i‚de‡
M_NLBLKS


124 
	#M_NLBLKS
 2

	)

126 #i‚de‡
M_GRAIN


127 
	#M_GRAIN
 3

	)

129 #i‚de‡
M_KEEP


130 
	#M_KEEP
 4

	)

134 
	#M_TRIM_THRESHOLD
 -1

	)

135 
	#M_TOP_PAD
 -2

	)

136 
	#M_MMAP_THRESHOLD
 -3

	)

137 
	#M_MMAP_MAX
 -4

	)

138 
	#M_CHECK_ACTION
 -5

	)

139 
	#M_PERTURB
 -6

	)

140 
	#M_ARENA_TEST
 -7

	)

141 
	#M_ARENA_MAX
 -8

	)

144 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

148 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

152 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

155 
	$mÆloc_°©s
 (Ë
__THROW
;

158 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

160 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

34 
	~<bôs/°döt-öä.h
>

37 
	~<bôs/°döt-uöä.h
>

41 
	~<bôs/°döt-Àa°.h
>

47 sig√d 
	töt_Á°8_t
;

48 #i‡
__WORDSIZE
 == 64

49 
	töt_Á°16_t
;

50 
	töt_Á°32_t
;

51 
	töt_Á°64_t
;

53 
	töt_Á°16_t
;

54 
	töt_Á°32_t
;

55 
__exãnsi⁄__


56 
	töt_Á°64_t
;

60 
	tuöt_Á°8_t
;

61 #i‡
__WORDSIZE
 == 64

62 
	tuöt_Á°16_t
;

63 
	tuöt_Á°32_t
;

64 
	tuöt_Á°64_t
;

66 
	tuöt_Á°16_t
;

67 
	tuöt_Á°32_t
;

68 
__exãnsi⁄__


69 
	tuöt_Á°64_t
;

74 #i‡
__WORDSIZE
 == 64

75 #i‚de‡
__öçå_t_deföed


76 
	töçå_t
;

77 
	#__öçå_t_deföed


	)

79 
	tuöçå_t
;

81 #i‚de‡
__öçå_t_deföed


82 
	töçå_t
;

83 
	#__öçå_t_deföed


	)

85 
	tuöçå_t
;

90 
__ötmax_t
 
	tötmax_t
;

91 
__uötmax_t
 
	tuötmax_t
;

94 #i‡
__WORDSIZE
 == 64

95 
	#__INT64_C
(
c
Ë¯## 
L


	)

96 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

98 
	#__INT64_C
(
c
Ë¯## 
LL


	)

99 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

105 
	#INT8_MIN
 (-128)

	)

106 
	#INT16_MIN
 (-32767-1)

	)

107 
	#INT32_MIN
 (-2147483647-1)

	)

108 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

110 
	#INT8_MAX
 (127)

	)

111 
	#INT16_MAX
 (32767)

	)

112 
	#INT32_MAX
 (2147483647)

	)

113 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

116 
	#UINT8_MAX
 (255)

	)

117 
	#UINT16_MAX
 (65535)

	)

118 
	#UINT32_MAX
 (4294967295U)

	)

119 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

123 
	#INT_LEAST8_MIN
 (-128)

	)

124 
	#INT_LEAST16_MIN
 (-32767-1)

	)

125 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

126 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

128 
	#INT_LEAST8_MAX
 (127)

	)

129 
	#INT_LEAST16_MAX
 (32767)

	)

130 
	#INT_LEAST32_MAX
 (2147483647)

	)

131 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

134 
	#UINT_LEAST8_MAX
 (255)

	)

135 
	#UINT_LEAST16_MAX
 (65535)

	)

136 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

137 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

141 
	#INT_FAST8_MIN
 (-128)

	)

142 #i‡
__WORDSIZE
 == 64

143 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

144 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

146 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

147 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

149 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

151 
	#INT_FAST8_MAX
 (127)

	)

152 #i‡
__WORDSIZE
 == 64

153 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

154 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

156 
	#INT_FAST16_MAX
 (2147483647)

	)

157 
	#INT_FAST32_MAX
 (2147483647)

	)

159 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

162 
	#UINT_FAST8_MAX
 (255)

	)

163 #i‡
__WORDSIZE
 == 64

164 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

165 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

167 
	#UINT_FAST16_MAX
 (4294967295U)

	)

168 
	#UINT_FAST32_MAX
 (4294967295U)

	)

170 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

174 #i‡
__WORDSIZE
 == 64

175 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

176 
	#INTPTR_MAX
 (9223372036854775807L)

	)

177 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

179 
	#INTPTR_MIN
 (-2147483647-1)

	)

180 
	#INTPTR_MAX
 (2147483647)

	)

181 
	#UINTPTR_MAX
 (4294967295U)

	)

186 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

188 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

191 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

199 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

201 #i‡
__WORDSIZE32_PTRDIFF_LONG


202 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

203 
	#PTRDIFF_MAX
 (2147483647L)

	)

205 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

206 
	#PTRDIFF_MAX
 (2147483647)

	)

211 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

212 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

215 #i‡
__WORDSIZE
 == 64

216 
	#SIZE_MAX
 (18446744073709551615UL)

	)

218 #i‡
__WORDSIZE32_SIZE_ULONG


219 
	#SIZE_MAX
 (4294967295UL)

	)

221 
	#SIZE_MAX
 (4294967295U)

	)

226 #i‚de‡
WCHAR_MIN


228 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

229 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

233 
	#WINT_MIN
 (0u)

	)

234 
	#WINT_MAX
 (4294967295u)

	)

237 
	#INT8_C
(
c
Ë
	)
c

238 
	#INT16_C
(
c
Ë
	)
c

239 
	#INT32_C
(
c
Ë
	)
c

240 #i‡
__WORDSIZE
 == 64

241 
	#INT64_C
(
c
Ë¯## 
L


	)

243 
	#INT64_C
(
c
Ë¯## 
LL


	)

247 
	#UINT8_C
(
c
Ë
	)
c

248 
	#UINT16_C
(
c
Ë
	)
c

249 
	#UINT32_C
(
c
Ë¯## 
U


	)

250 #i‡
__WORDSIZE
 == 64

251 
	#UINT64_C
(
c
Ë¯## 
UL


	)

253 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

257 #i‡
__WORDSIZE
 == 64

258 
	#INTMAX_C
(
c
Ë¯## 
L


	)

259 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

261 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

262 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

265 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

267 
	#INT8_WIDTH
 8

	)

268 
	#UINT8_WIDTH
 8

	)

269 
	#INT16_WIDTH
 16

	)

270 
	#UINT16_WIDTH
 16

	)

271 
	#INT32_WIDTH
 32

	)

272 
	#UINT32_WIDTH
 32

	)

273 
	#INT64_WIDTH
 64

	)

274 
	#UINT64_WIDTH
 64

	)

276 
	#INT_LEAST8_WIDTH
 8

	)

277 
	#UINT_LEAST8_WIDTH
 8

	)

278 
	#INT_LEAST16_WIDTH
 16

	)

279 
	#UINT_LEAST16_WIDTH
 16

	)

280 
	#INT_LEAST32_WIDTH
 32

	)

281 
	#UINT_LEAST32_WIDTH
 32

	)

282 
	#INT_LEAST64_WIDTH
 64

	)

283 
	#UINT_LEAST64_WIDTH
 64

	)

285 
	#INT_FAST8_WIDTH
 8

	)

286 
	#UINT_FAST8_WIDTH
 8

	)

287 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

288 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

289 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

290 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

291 
	#INT_FAST64_WIDTH
 64

	)

292 
	#UINT_FAST64_WIDTH
 64

	)

294 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

295 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

297 
	#INTMAX_WIDTH
 64

	)

298 
	#UINTMAX_WIDTH
 64

	)

300 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

301 
	#SIG_ATOMIC_WIDTH
 32

	)

302 
	#SIZE_WIDTH
 
__WORDSIZE


	)

303 
	#WCHAR_WIDTH
 32

	)

304 
	#WINT_WIDTH
 32

	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


25 
	#_STDIO_H
 1

	)

27 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

28 
	~<bôs/libc-hódî-°¨t.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	#__√ed___va_li°


	)

37 
	~<°d¨g.h
>

39 
	~<bôs/ty≥s.h
>

40 
	~<bôs/ty≥s/__Âos_t.h
>

41 
	~<bôs/ty≥s/__Âos64_t.h
>

42 
	~<bôs/ty≥s/__FILE.h
>

43 
	~<bôs/ty≥s/FILE.h
>

44 
	~<bôs/ty≥s/°ru˘_FILE.h
>

46 #ifde‡
__USE_MISC


47 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

50 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


51 #ifde‡
__GNUC__


52 #i‚de‡
_VA_LIST_DEFINED


53 
__gnuc_va_li°
 
	tva_li°
;

54 
	#_VA_LIST_DEFINED


	)

57 
	~<°d¨g.h
>

61 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


62 #i‚de‡
__off_t_deföed


63 #i‚de‡
__USE_FILE_OFFSET64


64 
__off_t
 
	toff_t
;

66 
__off64_t
 
	toff_t
;

68 
	#__off_t_deföed


	)

70 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


71 
__off64_t
 
	toff64_t
;

72 
	#__off64_t_deföed


	)

76 #ifde‡
__USE_XOPEN2K8


77 #i‚de‡
__ssize_t_deföed


78 
__ssize_t
 
	tssize_t
;

79 
	#__ssize_t_deföed


	)

84 #i‚de‡
__USE_FILE_OFFSET64


85 
__Âos_t
 
	tÂos_t
;

87 
__Âos64_t
 
	tÂos_t
;

89 #ifde‡
__USE_LARGEFILE64


90 
__Âos64_t
 
	tÂos64_t
;

94 
	#_IOFBF
 0

	)

95 
	#_IOLBF
 1

	)

96 
	#_IONBF
 2

	)

100 
	#BUFSIZ
 8192

	)

105 
	#EOF
 (-1)

	)

110 
	#SEEK_SET
 0

	)

111 
	#SEEK_CUR
 1

	)

112 
	#SEEK_END
 2

	)

113 #ifde‡
__USE_GNU


114 
	#SEEK_DATA
 3

	)

115 
	#SEEK_HOLE
 4

	)

119 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


121 
	#P_tmpdú
 "/tmp"

	)

124 
	#L_tm≤am
 20

	)

125 
	#TMP_MAX
 238328

	)

129 
	~<bôs/°dio_lim.h
>

131 #ifde‡
__USE_POSIX


132 
	#L_˘îmid
 9

	)

133 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


134 
	#L_cu£rid
 9

	)

138 #unde‡
FOPEN_MAX


139 
	#FOPEN_MAX
 16

	)

142 #i‡
__GLIBC_USE
 (
ISOC2X
)

144 
	#_PRINTF_NAN_LEN_MAX
 4

	)

149 
FILE
 *
°dö
;

150 
FILE
 *
°dout
;

151 
FILE
 *
°dîr
;

153 
	#°dö
 
°dö


	)

154 
	#°dout
 
°dout


	)

155 
	#°dîr
 
°dîr


	)

158 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

160 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

162 #ifde‡
__USE_ATFILE


164 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

165 c⁄° *
__√w
Ë
__THROW
;

168 #ifde‡
__USE_GNU


170 
	#RENAME_NOREPLACE
 (1 << 0)

	)

171 
	#RENAME_EXCHANGE
 (1 << 1)

	)

172 
	#RENAME_WHITEOUT
 (1 << 2)

	)

176 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

177 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

184 
	$f˛o£
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

186 #unde‡
__©å_dóŒoc_f˛o£


187 
	#__©å_dóŒoc_f˛o£
 
	`__©å_dóŒoc
 (
f˛o£
, 1)

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
FILE
 *
	$tmpfûe
 ()

195 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
)

199 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 ()

207 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

211 *
	$tm≤am
 ([
L_tm≤am
]Ë
__THROW
 
__wur
;

213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (
__s
[
L_tm≤am
]Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
 
__©å_dóŒoc_‰ì
;

236 
	`fÊush
 (
FILE
 *
__°ªam
);

238 #ifde‡
__USE_MISC


245 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

248 #ifde‡
__USE_GNU


255 
	`f˛o£Æl
 ();

259 #i‚de‡
__USE_FILE_OFFSET64


264 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

265 c⁄° *
__ª°ri˘
 
__modes
)

266 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

271 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

272 c⁄° *
__ª°ri˘
 
__modes
,

273 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((3));

275 #ifde‡
__REDIRECT


276 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

277 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

278 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

279 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

280 c⁄° *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

282 
__wur
 
	`__n⁄nuŒ
 ((3));

284 
	#f›í
 
f›í64


	)

285 
	#‰e›í
 
‰e›í64


	)

288 #ifde‡
__USE_LARGEFILE64


289 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

290 c⁄° *
__ª°ri˘
 
__modes
)

291 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

292 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

293 c⁄° *
__ª°ri˘
 
__modes
,

294 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((3));

297 #ifdef 
__USE_POSIX


299 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW


300 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

303 #ifdef 
__USE_MISC


306 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

307 c⁄° *
__ª°ri˘
 
__modes
,

308 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW


309 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

312 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

314 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

315 
__THROW
 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

320 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW


321 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

323 #ifde‡
_WCHAR_H


327 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW


328 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
;

334 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW


335 
	`__n⁄nuŒ
 ((1));

339 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

340 
__modes
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

342 #ifdef 
__USE_MISC


345 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

346 
size_t
 
__size
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
	`__n⁄nuŒ
 ((1));

363 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

373 
__gnuc_va_li°
 
__¨g
Ë
	`__n⁄nuŒ
 ((1));

378 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

381 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

386 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

387 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

389 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

390 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

391 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 #i‡
	`deföed
 (
__USE_MISC
Ë|| 
	`__GLIBC_USE
 (
LIB_EXT2
)

397 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

398 
__gnuc_va_li°
 
__¨g
)

399 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

400 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

401 c⁄° *
__ª°ri˘
 
__fmt
, ...)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

403 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

404 c⁄° *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

408 #ifde‡
__USE_XOPEN2K8


410 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

411 
__gnuc_va_li°
 
__¨g
)

412 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

413 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

422 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

423 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
 
	`__n⁄nuŒ
 ((1));

428 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

430 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

431 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

437 
	~<bôs/Êﬂä.h
>

438 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT
 \

439 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

440 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

441 #ifde‡
__REDIRECT


442 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

443 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

444 
__isoc23_fsˇnf
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

445 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

446 
__isoc23_sˇnf
Ë
__wur
;

447 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

448 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc23_ssˇnf
);

451 
	$__isoc23_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

452 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur


453 
	`__n⁄nuŒ
 ((1));

454 
	$__isoc23_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc23_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc23_fsˇnf


	)

458 
	#sˇnf
 
__isoc23_sˇnf


	)

459 
	#ssˇnf
 
__isoc23_ssˇnf


	)

462 #ifde‡
__REDIRECT


463 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

464 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

465 
__isoc99_fsˇnf
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

466 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

467 
__isoc99_sˇnf
Ë
__wur
;

468 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

469 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

470 
__isoc99_ssˇnf
);

472 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

473 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur


474 
	`__n⁄nuŒ
 ((1));

475 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

476 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

477 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

478 
	#fsˇnf
 
__isoc99_fsˇnf


	)

479 
	#sˇnf
 
__isoc99_sˇnf


	)

480 
	#ssˇnf
 
__isoc99_ssˇnf


	)

485 #ifdef 
__USE_ISOC99


490 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

491 
__gnuc_va_li°
 
__¨g
)

492 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
 
	`__n⁄nuŒ
 ((1));

498 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

499 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

503 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

504 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

507 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

508 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

509 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT
 \

510 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

511 
	`__REDIRECT
 (
vfsˇnf
,

512 (
FILE
 *
__ª°ri˘
 
__s
,

513 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

514 
__isoc23_vfsˇnf
)

515 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
 
	`__n⁄nuŒ
 ((1));

516 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

517 
__gnuc_va_li°
 
__¨g
), 
__isoc23_vsˇnf
)

518 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

519 
	`__REDIRECT_NTH
 (
vssˇnf
,

520 (c⁄° *
__ª°ri˘
 
__s
,

521 c⁄° *
__ª°ri˘
 
__f‹m©
,

522 
__gnuc_va_li°
 
__¨g
), 
__isoc23_vssˇnf
)

523 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

524 #ñi‡!
deföed
 
__REDIRECT


525 
	$__isoc23_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

526 c⁄° *
__ª°ri˘
 
__f‹m©
,

527 
__gnuc_va_li°
 
__¨g
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

528 
	$__isoc23_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

529 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

530 
	$__isoc23_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

531 c⁄° *
__ª°ri˘
 
__f‹m©
,

532 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

533 
	#vfsˇnf
 
__isoc23_vfsˇnf


	)

534 
	#vsˇnf
 
__isoc23_vsˇnf


	)

535 
	#vssˇnf
 
__isoc23_vssˇnf


	)

538 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT
 \

539 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

540 
	`__REDIRECT
 (
vfsˇnf
,

541 (
FILE
 *
__ª°ri˘
 
__s
,

542 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

543 
__isoc99_vfsˇnf
)

544 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
 
	`__n⁄nuŒ
 ((1));

545 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

546 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

547 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

548 
	`__REDIRECT_NTH
 (
vssˇnf
,

549 (c⁄° *
__ª°ri˘
 
__s
,

550 c⁄° *
__ª°ri˘
 
__f‹m©
,

551 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

552 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

553 #ñi‡!
deföed
 
__REDIRECT


554 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

555 c⁄° *
__ª°ri˘
 
__f‹m©
,

556 
__gnuc_va_li°
 
__¨g
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

557 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

558 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

559 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

560 c⁄° *
__ª°ri˘
 
__f‹m©
,

561 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

562 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

563 
	#vsˇnf
 
__isoc99_vsˇnf


	)

564 
	#vssˇnf
 
__isoc99_vssˇnf


	)

575 
	$fgëc
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

576 
	$gëc
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

582 
	`gëch¨
 ();

584 #ifde‡
__USE_POSIX199506


589 
	$gëc_u∆ocked
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

590 
	`gëch¨_u∆ocked
 ();

593 #ifde‡
__USE_MISC


600 
	$fgëc_u∆ocked
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

611 
	$Âutc
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

612 
	$putc
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

618 
	`putch¨
 (
__c
);

620 #ifde‡
__USE_MISC


627 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

630 #ifde‡
__USE_POSIX199506


635 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

636 
	`putch¨_u∆ocked
 (
__c
);

640 #i‡
deföed
 
__USE_MISC
 \

641 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

643 
	$gëw
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

646 
	$putw
 (
__w
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

654 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

655 
__wur
 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2Ë
	`__n⁄nuŒ
 ((3));

657 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

667 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

670 #ifde‡
__USE_GNU


677 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

678 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur


679 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2Ë
	`__n⁄nuŒ
 ((3));

683 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

694 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

695 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

696 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((4));

697 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

698 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

699 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((4));

707 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

708 
size_t
 *
__ª°ri˘
 
__n
,

709 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((3));

717 
	$Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
)

718 
	`__n⁄nuŒ
 ((2));

724 
	`puts
 (c⁄° *
__s
);

731 
	$ungëc
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

738 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

739 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur


740 
	`__n⁄nuŒ
((4));

745 
size_t
 
	$fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

746 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
	`__n⁄nuŒ
((4));

748 #ifde‡
__USE_GNU


755 
	$Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

756 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

759 #ifde‡
__USE_MISC


766 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

767 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur


768 
	`__n⁄nuŒ
 ((4));

769 
size_t
 
	$fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

770 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
)

771 
	`__n⁄nuŒ
 ((4));

779 
	$f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
)

780 
	`__n⁄nuŒ
 ((1));

785 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

790 
	$ªwöd
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

797 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


798 #i‚de‡
__USE_FILE_OFFSET64


803 
	$f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
)

804 
	`__n⁄nuŒ
 ((1));

809 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

811 #ifde‡
__REDIRECT


812 
	`__REDIRECT
 (
f£eko
,

813 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

814 
f£eko64
Ë
	`__n⁄nuŒ
 ((1));

815 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
)

816 
	`__n⁄nuŒ
 ((1));

818 
	#f£eko
 
f£eko64


	)

819 
	#·ñlo
 
·ñlo64


	)

824 #i‚de‡
__USE_FILE_OFFSET64


829 
	$fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
)

830 
	`__n⁄nuŒ
 ((1));

835 
	$f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
Ë
	`__n⁄nuŒ
 ((1));

837 #ifde‡
__REDIRECT


838 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

839 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
)

840 
	`__n⁄nuŒ
 ((1));

841 
	`__REDIRECT
 (
f£ços
,

842 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
)

843 
	`__n⁄nuŒ
 ((1));

845 
	#fgëpos
 
fgëpos64


	)

846 
	#f£ços
 
f£ços64


	)

850 #ifde‡
__USE_LARGEFILE64


851 
	$f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
)

852 
	`__n⁄nuŒ
 ((1));

853 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

854 
	$fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
)

855 
	`__n⁄nuŒ
 ((1));

856 
	$f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
Ë
	`__n⁄nuŒ
 ((1));

860 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

864 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

866 #ifde‡
__USE_MISC


868 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

870 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

878 
	$≥º‹
 (c⁄° *
__s
Ë
__COLD
;

881 #ifdef 
__USE_POSIX


883 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_MISC


888 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

892 #ifde‡
__USE_POSIX2


897 
	$p˛o£
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

903 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
)

904 
__©åibuã_mÆloc__
 
	$__©å_dóŒoc
 (
p˛o£
, 1Ë
__wur
;

909 #ifdef 
__USE_POSIX


911 *
	$˘îmid
 (*
__s
Ë
__THROW


912 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

916 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


918 *
	$cu£rid
 (*
__s
)

919 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

923 #ifdef 
__USE_GNU


924 
ob°ack
;

927 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

928 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

929 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

930 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

931 c⁄° *
__ª°ri˘
 
__f‹m©
,

932 
__gnuc_va_li°
 
__¨gs
)

933 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

937 #ifde‡
__USE_POSIX199506


941 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

945 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

948 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

951 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


954 
	~<bôs/gë›t_posix.h
>

959 
	`__uÊow
 (
FILE
 *);

960 
	`__ovîÊow
 (
FILE
 *, );

962 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


964 
	~<bôs/°dio2-de˛.h
>

969 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

970 
	~<bôs/°dio-ldbl.h
>

975 #ifde‡
__USE_EXTERN_INLINES


976 
	~<bôs/°dio.h
>

978 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


980 
	~<bôs/°dio2.h
>

983 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 
	#_STDLIB_H
 1

	)

38 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


40 
	~<bôs/waôÊags.h
>

41 
	~<bôs/waô°©us.h
>

44 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

45 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

46 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

47 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

48 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

49 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

50 #ifde‡
__WIFCONTINUED


51 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

56 
	~<bôs/Êﬂä.h
>

61 
	mquŸ
;

62 
	mªm
;

63 } 
	tdiv_t
;

66 #i‚de‡
__ldiv_t_deföed


69 
	mquŸ
;

70 
	mªm
;

71 } 
	tldiv_t
;

72 
	#__ldiv_t_deföed
 1

	)

75 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


77 
__exãnsi⁄__
 struct

79 
	mquŸ
;

80 
	mªm
;

81 } 
	tŒdiv_t
;

82 
	#__Œdiv_t_deföed
 1

	)

87 
	#RAND_MAX
 2147483647

	)

92 
	#EXIT_FAILURE
 1

	)

93 
	#EXIT_SUCCESS
 0

	)

97 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

98 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

102 
	$©of
 (c⁄° *
__≈å
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

105 
	$©oi
 (c⁄° *
__≈å
)

106 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

108 
	$©ﬁ
 (c⁄° *
__≈å
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

111 #ifde‡
__USE_ISOC99


113 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

114 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

118 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

119 **
__ª°ri˘
 
__íd±r
)

120 
__THROW
 
	`__n⁄nuŒ
 ((1));

122 #ifdef 
__USE_ISOC99


124 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

125 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

127 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

128 **
__ª°ri˘
 
__íd±r
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1));

134 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

135 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

136 **
__ª°ri˘
 
__íd±r
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1));

140 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

141 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

142 **
__ª°ri˘
 
__íd±r
)

143 
__THROW
 
	`__n⁄nuŒ
 ((1));

146 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

147 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

148 **
__ª°ri˘
 
__íd±r
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1));

152 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

153 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

154 **
__ª°ri˘
 
__íd±r
)

155 
__THROW
 
	`__n⁄nuŒ
 ((1));

158 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

159 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

160 **
__ª°ri˘
 
__íd±r
)

161 
__THROW
 
	`__n⁄nuŒ
 ((1));

164 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

165 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1));

170 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

171 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

172 **
__ª°ri˘
 
__íd±r
)

173 
__THROW
 
	`__n⁄nuŒ
 ((1));

177 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

178 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

179 
__THROW
 
	`__n⁄nuŒ
 ((1));

181 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

182 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

183 
__THROW
 
	`__n⁄nuŒ
 ((1));

185 #ifde‡
__USE_MISC


187 
__exãnsi⁄__


188 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1));

192 
__exãnsi⁄__


193 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

194 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

195 
__THROW
 
	`__n⁄nuŒ
 ((1));

198 #ifde‡
__USE_ISOC99


200 
__exãnsi⁄__


201 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
__exãnsi⁄__


206 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

207 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

208 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

214 #ifde‡
__REDIRECT


215 
	`__REDIRECT_NTH
 (
°πﬁ
, (c⁄° *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
,

217 
__ba£
), 
__isoc23_°πﬁ
)

218 
	`__n⁄nuŒ
 ((1));

219 
	`__REDIRECT_NTH
 (
°πoul
,

220 (c⁄° *
__ª°ri˘
 
__≈å
,

221 **
__ª°ri˘
 
__íd±r
,

222 
__ba£
), 
__isoc23_°πoul
)

223 
	`__n⁄nuŒ
 ((1));

224 #ifde‡
__USE_MISC


225 
__exãnsi⁄__


226 
	`__REDIRECT_NTH
 (
°πoq
, (c⁄° *
__ª°ri˘
 
__≈å
,

227 **
__ª°ri˘
 
__íd±r
,

228 
__ba£
), 
__isoc23_°πﬁl
)

229 
	`__n⁄nuŒ
 ((1));

230 
__exãnsi⁄__


231 
	`__REDIRECT_NTH
 (
°πouq
,

232 (c⁄° *
__ª°ri˘
 
__≈å
,

233 **
__ª°ri˘
 
__íd±r
,

234 
__ba£
), 
__isoc23_°πouŒ
)

235 
	`__n⁄nuŒ
 ((1));

237 
__exãnsi⁄__


238 
	`__REDIRECT_NTH
 (
°πﬁl
, (c⁄° *
__ª°ri˘
 
__≈å
,

239 **
__ª°ri˘
 
__íd±r
,

240 
__ba£
), 
__isoc23_°πﬁl
)

241 
	`__n⁄nuŒ
 ((1));

242 
__exãnsi⁄__


243 
	`__REDIRECT_NTH
 (
°πouŒ
,

244 (c⁄° *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
), 
__isoc23_°πouŒ
)

247 
	`__n⁄nuŒ
 ((1));

249 
	$__isoc23_°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

251 
__THROW
 
	`__n⁄nuŒ
 ((1));

252 
	$__isoc23_°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

253 **
__ª°ri˘
 
__íd±r
,

254 
__ba£
)

255 
__THROW
 
	`__n⁄nuŒ
 ((1));

256 
__exãnsi⁄__


257 
	$__isoc23_°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

258 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1));

260 
__exãnsi⁄__


261 
	$__isoc23_°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
,

263 
__ba£
)

264 
__THROW
 
	`__n⁄nuŒ
 ((1));

265 
	#°πﬁ
 
__isoc23_°πﬁ


	)

266 
	#°πoul
 
__isoc23_°πoul


	)

267 #ifde‡
__USE_MISC


268 
	#°πoq
 
__isoc23_°πﬁl


	)

269 
	#°πouq
 
__isoc23_°πouŒ


	)

271 
	#°πﬁl
 
__isoc23_°πﬁl


	)

272 
	#°πouŒ
 
__isoc23_°πouŒ


	)

277 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

278 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

279 
__f
)

280 
__THROW
 
	`__n⁄nuŒ
 ((3));

282 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

283 
__f
)

284 
__THROW
 
	`__n⁄nuŒ
 ((3));

286 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

287 
__f
)

288 
__THROW
 
	`__n⁄nuŒ
 ((3));

291 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

292 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

293 
_Flﬂt16
 
__f
)

294 
__THROW
 
	`__n⁄nuŒ
 ((3));

297 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

298 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

299 
_Flﬂt32
 
__f
)

300 
__THROW
 
	`__n⁄nuŒ
 ((3));

303 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

304 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

305 
_Flﬂt64
 
__f
)

306 
__THROW
 
	`__n⁄nuŒ
 ((3));

309 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

310 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

311 
_Flﬂt128
 
__f
)

312 
__THROW
 
	`__n⁄nuŒ
 ((3));

315 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

316 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

317 
_Flﬂt32x
 
__f
)

318 
__THROW
 
	`__n⁄nuŒ
 ((3));

321 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

322 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

323 
_Flﬂt64x
 
__f
)

324 
__THROW
 
	`__n⁄nuŒ
 ((3));

327 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

328 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

329 
_Flﬂt128x
 
__f
)

330 
__THROW
 
	`__n⁄nuŒ
 ((3));

334 #ifde‡
__USE_GNU


338 
	~<bôs/ty≥s/loˇÀ_t.h
>

340 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

341 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

342 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

344 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
__ba£
, 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

349 
__exãnsi⁄__


350 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

351 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

352 
loˇÀ_t
 
__loc
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

355 
__exãnsi⁄__


356 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

357 **
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
loˇÀ_t
 
__loc
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

363 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

364 #ifde‡
__REDIRECT


365 
	`__REDIRECT_NTH
 (
°πﬁ_l
, (c⁄° *
__ª°ri˘
 
__≈å
,

366 **
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
loˇÀ_t
 
__loc
),

368 
__isoc23_°πﬁ_l
)

369 
	`__n⁄nuŒ
 ((1, 4));

370 
	`__REDIRECT_NTH
 (
°πoul_l
,

371 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
loˇÀ_t
 
__loc
),

374 
__isoc23_°πoul_l
)

375 
	`__n⁄nuŒ
 ((1, 4));

376 
__exãnsi⁄__


377 
	`__REDIRECT_NTH
 (
°πﬁl_l
, (c⁄° *
__ª°ri˘
 
__≈å
,

378 **
__ª°ri˘
 
__íd±r
,

379 
__ba£
,

380 
loˇÀ_t
 
__loc
),

381 
__isoc23_°πﬁl_l
)

382 
	`__n⁄nuŒ
 ((1, 4));

383 
__exãnsi⁄__


384 
	`__REDIRECT_NTH
 (
°πouŒ_l
,

385 (c⁄° *
__ª°ri˘
 
__≈å
,

386 **
__ª°ri˘
 
__íd±r
,

387 
__ba£
, 
loˇÀ_t
 
__loc
),

388 
__isoc23_°πouŒ_l
)

389 
	`__n⁄nuŒ
 ((1, 4));

391 
	$__isoc23_°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

392 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

393 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

394 
	$__isoc23_°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

395 **
__ª°ri˘
 
__íd±r
,

396 
__ba£
, 
loˇÀ_t
 
__loc
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

398 
__exãnsi⁄__


399 
	$__isoc23_°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

400 **
__ª°ri˘
 
__íd±r
,

401 
__ba£
, 
loˇÀ_t
 
__loc
)

402 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

403 
__exãnsi⁄__


404 
	$__isoc23_°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

405 **
__ª°ri˘
 
__íd±r
,

406 
__ba£
, 
loˇÀ_t
 
__loc
)

407 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

408 
	#°πﬁ_l
 
__isoc23_°πﬁ_l


	)

409 
	#°πoul_l
 
__isoc23_°πoul_l


	)

410 
	#°πﬁl_l
 
__isoc23_°πﬁl_l


	)

411 
	#°πouŒ_l
 
__isoc23_°πouŒ_l


	)

415 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

416 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

419 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

420 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

423 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

424 **
__ª°ri˘
 
__íd±r
,

425 
loˇÀ_t
 
__loc
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

428 #i‡
__HAVE_FLOAT16


429 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

430 **
__ª°ri˘
 
__íd±r
,

431 
loˇÀ_t
 
__loc
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

435 #i‡
__HAVE_FLOAT32


436 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

437 **
__ª°ri˘
 
__íd±r
,

438 
loˇÀ_t
 
__loc
)

439 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

442 #i‡
__HAVE_FLOAT64


443 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

444 **
__ª°ri˘
 
__íd±r
,

445 
loˇÀ_t
 
__loc
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

449 #i‡
__HAVE_FLOAT128


450 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

451 **
__ª°ri˘
 
__íd±r
,

452 
loˇÀ_t
 
__loc
)

453 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

456 #i‡
__HAVE_FLOAT32X


457 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

458 **
__ª°ri˘
 
__íd±r
,

459 
loˇÀ_t
 
__loc
)

460 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

463 #i‡
__HAVE_FLOAT64X


464 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

465 **
__ª°ri˘
 
__íd±r
,

466 
loˇÀ_t
 
__loc
)

467 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

470 #i‡
__HAVE_FLOAT128X


471 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

472 **
__ª°ri˘
 
__íd±r
,

473 
loˇÀ_t
 
__loc
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

479 #ifde‡
__USE_EXTERN_INLINES


480 
__exã∫_ölöe
 

481 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

483  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

484 
	}
}

485 
__exã∫_ölöe
 

486 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

488  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

489 
	}
}

491 #ifde‡
__USE_ISOC99


492 
__exãnsi⁄__
 
__exã∫_ölöe
 

493 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

495  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

496 
	}
}

501 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


505 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

508 
	$a64l
 (c⁄° *
__s
)

509 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

513 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


514 
	~<sys/ty≥s.h
>

521 
	$øndom
 (Ë
__THROW
;

524 
	$§™dom
 (
__£ed
Ë
__THROW
;

530 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

531 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

535 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

538 #ifde‡
__USE_MISC


543 
	søndom_d©a


545 
öt32_t
 *
Âå
;

546 
öt32_t
 *
Ωå
;

547 
öt32_t
 *
°©e
;

548 
ønd_ty≥
;

549 
ønd_deg
;

550 
ønd_£p
;

551 
öt32_t
 *
íd_±r
;

554 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

555 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

560 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

561 
size_t
 
__°©ñí
,

562 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

563 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

565 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

566 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$ønd
 (Ë
__THROW
;

575 
	$§™d
 (
__£ed
Ë
__THROW
;

577 #ifde‡
__USE_POSIX199506


579 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

583 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


587 
	$dønd48
 (Ë
__THROW
;

588 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 
	$Ã™d48
 (Ë
__THROW
;

592 
	$ƒ™d48
 (
__xsubi
[3])

593 
__THROW
 
	`__n⁄nuŒ
 ((1));

596 
	$mønd48
 (Ë
__THROW
;

597 
	$jønd48
 (
__xsubi
[3])

598 
__THROW
 
	`__n⁄nuŒ
 ((1));

601 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

602 *
	$£ed48
 (
__£ed16v
[3])

603 
__THROW
 
	`__n⁄nuŒ
 ((1));

604 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

606 #ifde‡
__USE_MISC


610 
	sdønd48_d©a


612 
__x
[3];

613 
__ﬁd_x
[3];

614 
__c
;

615 
__öô
;

616 
__exãnsi⁄__
 
__a
;

621 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

622 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

623 
	$î™d48_r
 (
__xsubi
[3],

624 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

625 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

628 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

629 *
__ª°ri˘
 
__ªsu…
)

630 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

631 
	$ƒ™d48_r
 (
__xsubi
[3],

632 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

633 *
__ª°ri˘
 
__ªsu…
)

634 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

637 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

638 *
__ª°ri˘
 
__ªsu…
)

639 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

640 
	$jønd48_r
 (
__xsubi
[3],

641 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

642 *
__ª°ri˘
 
__ªsu…
)

643 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

646 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

647 
__THROW
 
	`__n⁄nuŒ
 ((2));

649 
	$£ed48_r
 (
__£ed16v
[3],

650 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

652 
	$lc⁄g48_r
 (
__∑øm
[7],

653 
dønd48_d©a
 *
__buf„r
)

654 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

657 
__uöt32_t
 
	$¨c4øndom
 ()

658 
__THROW
 
__wur
;

661 
	$¨c4øndom_buf
 (*
__buf
, 
size_t
 
__size
)

662 
__THROW
 
	`__n⁄nuŒ
 ((1));

666 
__uöt32_t
 
	$¨c4øndom_unif‹m
 (
__uöt32_t
 
__uµî_bound
)

667 
__THROW
 
__wur
;

672 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


673 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

675 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

676 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

683 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

684 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

687 
	$‰ì
 (*
__±r
Ë
__THROW
;

689 #ifde‡
__USE_MISC


695 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

696 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


697 
	`__©åibuã_Æloc_size__
 ((2, 3))

698 
__©å_dóŒoc_‰ì
;

701 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

702 
__THROW
 
	`__©å_dóŒoc
 (
ªÆloˇºay
, 1);

705 #ifde‡
__USE_MISC


706 
	~<Æloˇ.h
>

709 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

710 || 
deföed
 
__USE_MISC


712 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


713 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

716 #ifde‡
__USE_XOPEN2K


718 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

719 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

722 #ifde‡
__USE_ISOC11


724 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

725 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_Æign__
 ((1))

726 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

730 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

734 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

736 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


738 #ifde‡
__˝lu•lus


739 "C++" 
	$©_quick_exô
 ((*
__func
) ())

740 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

742 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

746 #ifdef 
__USE_MISC


749 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

750 
__THROW
 
	`__n⁄nuŒ
 ((1));

756 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

758 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


762 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

765 #ifde‡
__USE_ISOC99


768 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

773 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

775 #ifde‡
__USE_GNU


778 *
	$£cuª_gëív
 (c⁄° *
__«me
)

779 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

782 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


786 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

789 #ifde‡
__USE_XOPEN2K


792 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

793 
__THROW
 
	`__n⁄nuŒ
 ((2));

796 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

799 #ifdef 
__USE_MISC


803 
	$˛óªnv
 (Ë
__THROW
;

807 #i‡
deföed
 
__USE_MISC
 \

808 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

814 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

817 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


826 #i‚de‡
__USE_FILE_OFFSET64


827 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

829 #ifde‡
__REDIRECT


830 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

831 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

833 
	#mk°emp
 
mk°emp64


	)

836 #ifde‡
__USE_LARGEFILE64


837 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

841 #ifde‡
__USE_MISC


848 #i‚de‡
__USE_FILE_OFFSET64


849 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

851 #ifde‡
__REDIRECT


852 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

853 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

855 
	#mk°emps
 
mk°emps64


	)

858 #ifde‡
__USE_LARGEFILE64


859 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

860 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

864 #ifde‡
__USE_XOPEN2K8


870 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

873 #ifde‡
__USE_GNU


880 #i‚de‡
__USE_FILE_OFFSET64


881 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__REDIRECT


884 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

885 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

887 
	#mko°emp
 
mko°emp64


	)

890 #ifde‡
__USE_LARGEFILE64


891 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

900 #i‚de‡
__USE_FILE_OFFSET64


901 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

902 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

904 #ifde‡
__REDIRECT


905 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

906 
__Êags
), 
mko°emps64
)

907 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	#mko°emps
 
mko°emps64


	)

912 #ifde‡
__USE_LARGEFILE64


913 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

914 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

923 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

926 #ifdef 
__USE_GNU


929 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

930 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_mÆloc__


931 
__©å_dóŒoc_‰ì
 
__wur
;

934 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


940 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

941 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

946 #i‚de‡
__COMPAR_FN_T


947 
	#__COMPAR_FN_T


	)

948 (*
	t__com∑r_‚_t
) (const *, const *);

950 #ifdef 
__USE_GNU


951 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

954 #ifde‡
__USE_GNU


955 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

960 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

961 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

962 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

964 #ifde‡
__USE_EXTERN_INLINES


965 
	~<bôs/°dlib-b£¨ch.h
>

970 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

971 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

972 #ifde‡
__USE_GNU


973 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

974 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

975 
	`__n⁄nuŒ
 ((1, 4));

980 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

981 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

983 #ifde‡
__USE_ISOC99


984 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

985 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

992 
div_t
 
	$div
 (
__numî
, 
__díom
)

993 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

994 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

995 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

997 #ifde‡
__USE_ISOC99


998 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

999 
__díom
)

1000 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

1004 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

1005 || 
deföed
 
__USE_MISC


1012 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

1013 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

1018 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

1019 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

1024 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

1028 #ifde‡
__USE_MISC


1030 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

1031 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

1032 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

1033 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

1034 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

1036 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

1042 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

1043 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

1044 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

1045 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

1046 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

1047 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

1049 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

1050 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

1051 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

1052 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

1053 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

1054 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

1055 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

1062 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

1065 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

1066 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

1069 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

1073 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

1074 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW


1075 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

1077 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

1078 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

1079 
__THROW


1080 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 3)

1081 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

1083 #ifde‡
__USE_MISC


1088 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1092 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1099 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

1100 *c⁄° *
__ª°ri˘
 
__tokís
,

1101 **
__ª°ri˘
 
__vÆuï
)

1102 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

1108 #ifde‡
__USE_XOPEN2KXSI


1110 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

1113 #ifde‡
__USE_XOPEN_EXTENDED


1118 
	$gø¡±
 (
__fd
Ë
__THROW
;

1122 
	$u∆ock±
 (
__fd
Ë
__THROW
;

1127 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

1130 #ifde‡
__USE_GNU


1134 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

1135 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

1138 
	`gë±
 ();

1141 #ifde‡
__USE_MISC


1145 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1146 
__THROW
 
	`__n⁄nuŒ
 ((1));

1149 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1152 
	$ây¶Ÿ
 (Ë
__THROW
;

1155 
	~<bôs/°dlib-Êﬂt.h
>

1158 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1159 
	~<bôs/°dlib.h
>

1162 
	~<bôs/Êﬂä.h
>

1163 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

1164 
	~<bôs/°dlib-ldbl.h
>

1167 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && (
__GNUC_PREREQ
 (4, 4) \

37 || 
	$__glibc_˛™g_¥îeq
 (3, 5))

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || 
	`__GLIBC_USE
 (
ISOC2X
)

54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 4));

61 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

64 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

65 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

80 
	$__memcm≥q
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

81 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

84 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


87 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

88 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

90 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

92 #ifde‡
__OPTIMIZE__


93 
__exã∫_Æways_ölöe
 *

94 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


96  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

99 
__exã∫_Æways_ölöe
 const *

100 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


102  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

105 
	}
}

107 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__USE_GNU


114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

116 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

118 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


126 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

127 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

128 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

129 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

130 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

131 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

133 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

134 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

135 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

141 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

145 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

149 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

150 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

153 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

156 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

157 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

159 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

160 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

163 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

164 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

166 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

167 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

168 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

170 #ifde‡
__USE_XOPEN2K8


172 
	~<bôs/ty≥s/loˇÀ_t.h
>

175 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

176 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

179 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

180 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4))

181 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

184 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

185 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| 
	$__GLIBC_USE
 (
ISOC2X
))

187 *
	$°rdup
 (c⁄° *
__s
)

188 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

194 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| __GLIBC_USE (
ISOC2X
)

195 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

196 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

199 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


201 
	#°rdu∑
(
s
) \

202 (
__exãnsi⁄__
 \

204 c⁄° *
__ﬁd
 = (
s
); \

205 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

206 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 
	}
}))

	)

211 
	#°∫du∑
(
s
, 
n
) \

212 (
__exãnsi⁄__
 \

214 c⁄° *
__ﬁd
 = (
s
); \

215 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

216 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

217 
__√w
[
__Àn
] = '\0'; \

218 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

219 }))

	)

223 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


226 *
°rchr
 (*
__s
, 
__c
)

227 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

228 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

229 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

231 #ifde‡
__OPTIMIZE__


232 
__exã∫_Æways_ölöe
 *

233 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


235  
__buûtö_°rchr
 (
__s
, 
__c
);

238 
__exã∫_Æways_ölöe
 const *

239 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


241  
__buûtö_°rchr
 (
__s
, 
__c
);

246 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

247 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

250 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


253 *
	`°ºchr
 (*
__s
, 
__c
)

254 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

255 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

256 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

258 #ifde‡
__OPTIMIZE__


259 
__exã∫_Æways_ölöe
 *

260 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


262  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

265 
__exã∫_Æways_ölöe
 const *

266 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


268  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

271 
	}
}

273 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 #ifde‡
__USE_MISC


280 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


281 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

282 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

283 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

284 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

286 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

293 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

294 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


303 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

304 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

305 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

306 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

308 #ifde‡
__OPTIMIZE__


309 
__exã∫_Æways_ölöe
 *

310 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


312  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

315 
__exã∫_Æways_ölöe
 const *

316 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


318  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

321 
	}
}

323 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

324 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


330 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

331 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

332 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

333 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 #ifde‡
__OPTIMIZE__


336 
__exã∫_Æways_ölöe
 *

337 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


339  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

342 
__exã∫_Æways_ölöe
 const *

343 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


345  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

348 
	}
}

350 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

351 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

356 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

362 c⁄° *
__ª°ri˘
 
__dñim
,

363 **
__ª°ri˘
 
__ßve_±r
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

365 #ifde‡
__USE_POSIX


366 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

367 **
__ª°ri˘
 
__ßve_±r
)

368 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

371 #ifde‡
__USE_MISC


373 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


374 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

375 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

377 c⁄° *
__√edÀ
)

378 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

380 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

385 #ifde‡
__USE_MISC


389 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

390 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

391 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3))

392 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2))

393 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 3, 4));

397 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

398 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

400 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

401 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

402 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

407 
size_t
 
	$°æí
 (c⁄° *
__s
)

408 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

410 #ifdef 
__USE_XOPEN2K8


413 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

414 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

419 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

420 #ifde‡
__USE_XOPEN2K


428 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


431 #ifde‡
__REDIRECT_NTH


432 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

433 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

434 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2))

435 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

437 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

439 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

444 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

445 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

448 #ifde‡
__USE_GNU


450 c⁄° *
	$°ªº‹desc_≈
 (
__îr
Ë
__THROW
;

452 c⁄° *
	$°ªº‹«me_≈
 (
__îr
Ë
__THROW
;

456 #ifde‡
__USE_XOPEN2K8


458 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

461 #ifde‡
__USE_MISC


462 
	~<°rögs.h
>

466 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

467 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

471 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

472 c⁄° *
__ª°ri˘
 
__dñim
)

473 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

476 #ifdef 
__USE_XOPEN2K8


478 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

480 #ifde‡
__USE_GNU


482 c⁄° *
	$sigabbªv_≈
 (
__sig
Ë
__THROW
;

485 c⁄° *
	$sigdes¸_≈
 (
__sig
Ë
__THROW
;

489 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

490 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

491 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

492 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

496 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

497 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

498 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

499 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

500 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

501 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

504 #ifde‡
__USE_MISC


506 
size_t
 
	$°æ˝y
 (*
__ª°ri˘
 
__de°
,

507 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

512 
size_t
 
	$°æˇt
 (*
__ª°ri˘
 
__de°
,

513 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
	`__©å_ac˚ss
 ((
__ªad_wrôe__
, 1, 3));

517 #ifdef 
__USE_GNU


519 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

520 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

523 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

526 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

527 
	`__©å_ac˚ss
 ((
__ªad_wrôe__
, 1, 2));

529 #i‚de‡
ba£«me


534 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


535 "C++" *
	$ba£«me
 (*
__fûíame
)

536 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

537 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

538 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

540 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

545 #i‡
	`__GNUC_PREREQ
 (3,4)

546 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


548 
	~<bôs/°rög_f‹tifõd.h
>

552 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 
	$execvót
 (
__fd
, c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

301 *c⁄° 
__ívp
[], 
__Êags
)

302 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

305 #ifde‡
__USE_ATFILE


309 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

310 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

315 #i‚def 
_STDIO_H


316 
	#SEEK_SET
 0

	)

317 
	#SEEK_CUR
 1

	)

318 
	#SEEK_END
 2

	)

319 #ifde‡
__USE_GNU


320 
	#SEEK_DATA
 3

	)

321 
	#SEEK_HOLE
 4

	)

325 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


327 
	#L_SET
 
SEEK_SET


	)

328 
	#L_INCR
 
SEEK_CUR


	)

329 
	#L_XTND
 
SEEK_END


	)

338 #i‚de‡
__USE_FILE_OFFSET64


339 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

341 #ifde‡
__REDIRECT_NTH


342 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

343 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

344 
l£ek64
);

346 
	#l£ek
 
l£ek64


	)

349 #ifde‡
__USE_LARGEFILE64


350 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

351 
__THROW
;

358 
	`˛o£
 (
__fd
);

360 #ifde‡
__USE_MISC


363 
	$˛o£‰om
 (
__lowfd
Ë
__THROW
;

371 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur


372 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

378 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur


379 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

381 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


382 #i‚de‡
__USE_FILE_OFFSET64


389 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off_t
 
__off£t
Ë
__wur


391 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

398 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

399 
__off_t
 
__off£t
Ë
__wur


400 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

403 #ifde‡
__REDIRECT


404 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
),

406 
¥ód64
Ë
__wur


407 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

408 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

409 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

410 
pwrôe64
Ë
__wur


411 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

413 
	#¥ód
 
¥ód64


	)

414 
	#pwrôe
 
pwrôe64


	)

418 #ifde‡
__USE_LARGEFILE64


422 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

423 
__off64_t
 
__off£t
Ë
__wur


424 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

427 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

428 
__off64_t
 
__off£t
Ë
__wur


429 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

437 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

439 #ifde‡
__USE_GNU


442 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

452 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

464 
	`¶ìp
 (
__£c⁄ds
);

466 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

467 || 
deföed
 
__USE_MISC


472 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

473 
__THROW
;

480 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

489 
	`∑u£
 ();

493 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

494 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

503 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

508 #ifde‡
__USE_ATFILE


511 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

512 
__gid_t
 
__group
, 
__Êag
)

513 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

517 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

519 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


521 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

531 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

533 #ifdef 
__USE_GNU


537 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

540 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

541 || 
deföed
 
__USE_MISC


545 *
	$gëwd
 (*
__buf
)

546 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur


547 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

552 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

555 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

557 #ifde‡
__USE_GNU


560 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

564 **
__ívú⁄
;

565 #ifde‡
__USE_GNU


566 **
ívú⁄
;

572 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

573 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 #ifde‡
__USE_XOPEN2K8


578 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((2));

584 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

589 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

590 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

594 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

600 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

605 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

606 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

608 #ifde‡
__USE_GNU


611 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

612 *c⁄° 
__ívp
[])

613 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

617 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


619 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

624 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

630 
	~<bôs/c⁄‚ame.h
>

633 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

634 
__THROW
 
	`__n⁄nuŒ
 ((1));

637 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

640 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

642 #ifdef 
__USE_POSIX2


644 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW


645 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

650 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

653 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

656 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

659 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

660 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


661 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

668 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

670 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


682 
	$£çgΩ
 (Ë
__THROW
;

689 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

691 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


693 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

697 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

700 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

706 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

711 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur


712 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 1);

713 #ifdef 
__USE_GNU


715 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

722 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

724 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


727 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_XOPEN2K


732 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

739 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

741 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


744 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

747 #ifde‡
__USE_XOPEN2K


749 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

752 #ifde‡
__USE_GNU


755 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

756 
__THROW
;

760 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

761 
__THROW
;

765 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

766 
__THROW
 
__wur
;

770 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

771 
__THROW
 
__wur
;

778 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

780 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

781 || 
deföed
 
__USE_MISC


786 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 #ifde‡
__USE_GNU


793 
__pid_t
 
	$_F‹k
 (Ë
__THROW
;

799 *
	$ây«me
 (
__fd
Ë
__THROW
;

803 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

804 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur


805 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

809 
	$ißây
 (
__fd
Ë
__THROW
;

811 #ifde‡
__USE_MISC


814 
	$ây¶Ÿ
 (Ë
__THROW
;

819 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

822 #ifde‡
__USE_ATFILE


825 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

826 c⁄° *
__to
, 
__Êags
)

827 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

830 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


832 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

838 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

839 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur


841 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

845 #ifde‡
__USE_ATFILE


847 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

848 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

851 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

852 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

853 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur


854 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 3, 4);

858 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

860 #ifde‡
__USE_ATFILE


862 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

863 
__THROW
 
	`__n⁄nuŒ
 ((2));

867 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

871 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

874 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

881 *
	`gëlogö
 ();

882 #ifde‡
__USE_POSIX199506


889 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1))

890 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

893 #ifdef 
__USE_MISC


895 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

899 #ifdef 
__USE_POSIX2


903 
	~<bôs/gë›t_posix.h
>

907 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


911 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

912 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

916 #i‡
deföed
 
__USE_MISC


919 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2));

924 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

930 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

931 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur


932 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

933 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2));

939 
	$vh™gup
 (Ë
__THROW
;

942 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

951 
size_t
 
__off£t
, 
__sˇÀ
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

958 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

962 *
	$gëu£rshñl
 (Ë
__THROW
;

963 
	$ídu£rshñl
 (Ë
__THROW
;

964 
	$£tu£rshñl
 (Ë
__THROW
;

970 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

974 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

977 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

981 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

989 
	`fsync
 (
__fd
);

992 #ifde‡
__USE_GNU


995 
	$syncfs
 (
__fd
Ë
__THROW
;

999 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1002 
	`gëho°id
 ();

1005 
	$sync
 (Ë
__THROW
;

1008 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


1011 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1016 
	$gëdèbÀsize
 (Ë
__THROW
;

1022 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1025 #i‚de‡
__USE_FILE_OFFSET64


1026 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

1027 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1029 #ifde‡
__REDIRECT_NTH


1030 
	`__REDIRECT_NTH
 (
åunˇã
,

1031 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1032 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1034 
	#åunˇã
 
åunˇã64


	)

1037 #ifde‡
__USE_LARGEFILE64


1038 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1039 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1044 #i‡
deföed
 
__USE_POSIX199309
 \

1045 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1048 #i‚de‡
__USE_FILE_OFFSET64


1049 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1051 #ifde‡
__REDIRECT_NTH


1052 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1053 
·runˇã64
Ë
__wur
;

1055 
	#·runˇã
 
·runˇã64


	)

1058 #ifde‡
__USE_LARGEFILE64


1059 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1065 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1066 || 
deföed
 
__USE_MISC


1070 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1076 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1080 #ifde‡
__USE_MISC


1091 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1096 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1108 
	#F_ULOCK
 0

	)

1109 
	#F_LOCK
 1

	)

1110 
	#F_TLOCK
 2

	)

1111 
	#F_TEST
 3

	)

1113 #i‚de‡
__USE_FILE_OFFSET64


1114 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1116 #ifde‡
__REDIRECT


1117 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1118 
lockf64
Ë
__wur
;

1120 
	#lockf
 
lockf64


	)

1123 #ifde‡
__USE_LARGEFILE64


1124 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1129 #ifde‡
__USE_GNU


1134 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1135 (
__exãnsi⁄__
 \

1136 ({ 
__ªsu…
; \

1137 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1138 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1139 
__ªsu…
; 
	}
}))

	)

1142 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1143 
__outfd
, 
__off64_t
 *
__poutoff
,

1144 
size_t
 
__Àngth
, 
__Êags
);

1147 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1150 
fd©async
 (
__fûdes
);

1153 #ifde‡
__USE_MISC


1162 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1166 #ifdef 
__USE_XOPEN


1171 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1172 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2))

1173 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3))

1174 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

1181 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1183 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1186 *
	`cu£rid
 (*
__s
);

1192 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1193 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1194 (*
__∑ª¡
) (),

1195 (*
__chûd
Ë()Ë
__THROW
;

1198 #ifde‡
__USE_MISC


1201 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur


1202 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

1205 #ifde‡
__USE_GNU


1211 
	$˛o£_ønge
 (
__fd
, 
__max_fd
,

1212 
__Êags
Ë
__THROW
;

1216 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1217 
	~<bôs/uni°d.h
>

1221 
	~<bôs/uni°d_ext.h
>

1223 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

127 #unde‡
__USE_ISOC11


128 #unde‡
__USE_ISOC99


129 #unde‡
__USE_ISOC95


130 #unde‡
__USE_ISOCXX11


131 #unde‡
__USE_POSIX


132 #unde‡
__USE_POSIX2


133 #unde‡
__USE_POSIX199309


134 #unde‡
__USE_POSIX199506


135 #unde‡
__USE_XOPEN


136 #unde‡
__USE_XOPEN_EXTENDED


137 #unde‡
__USE_UNIX98


138 #unde‡
__USE_XOPEN2K


139 #unde‡
__USE_XOPEN2KXSI


140 #unde‡
__USE_XOPEN2K8


141 #unde‡
__USE_XOPEN2K8XSI


142 #unde‡
__USE_LARGEFILE


143 #unde‡
__USE_LARGEFILE64


144 #unde‡
__USE_FILE_OFFSET64


145 #unde‡
__USE_MISC


146 #unde‡
__USE_ATFILE


147 #unde‡
__USE_DYNAMIC_STACK_SIZE


148 #unde‡
__USE_GNU


149 #unde‡
__USE_FORTIFY_LEVEL


150 #unde‡
__KERNEL_STRICT_NAMES


151 #unde‡
__GLIBC_USE_ISOC2X


152 #unde‡
__GLIBC_USE_DEPRECATED_GETS


153 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


154 #unde‡
__GLIBC_USE_C2X_STRTOL


158 #i‚de‡
_LOOSE_KERNEL_NAMES


159 
	#__KERNEL_STRICT_NAMES


	)

169 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


170 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

171 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

173 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

180 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


181 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

182 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

184 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

188 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

194 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

195 && !
deföed
 
	g_DEFAULT_SOURCE


197 #unde‡
_DEFAULT_SOURCE


198 
	#_DEFAULT_SOURCE
 1

	)

202 #ifde‡
_GNU_SOURCE


203 #unde‡
_ISOC95_SOURCE


204 
	#_ISOC95_SOURCE
 1

	)

205 #unde‡
_ISOC99_SOURCE


206 
	#_ISOC99_SOURCE
 1

	)

207 #unde‡
_ISOC11_SOURCE


208 
	#_ISOC11_SOURCE
 1

	)

209 #unde‡
_ISOC2X_SOURCE


210 
	#_ISOC2X_SOURCE
 1

	)

211 #unde‡
_POSIX_SOURCE


212 
	#_POSIX_SOURCE
 1

	)

213 #unde‡
_POSIX_C_SOURCE


214 
	#_POSIX_C_SOURCE
 200809L

	)

215 #unde‡
_XOPEN_SOURCE


216 
	#_XOPEN_SOURCE
 700

	)

217 #unde‡
_XOPEN_SOURCE_EXTENDED


218 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

219 #unde‡
_LARGEFILE64_SOURCE


220 
	#_LARGEFILE64_SOURCE
 1

	)

221 #unde‡
_DEFAULT_SOURCE


222 
	#_DEFAULT_SOURCE
 1

	)

223 #unde‡
_ATFILE_SOURCE


224 
	#_ATFILE_SOURCE
 1

	)

225 #unde‡
_DYNAMIC_STACK_SIZE_SOURCE


226 
	#_DYNAMIC_STACK_SIZE_SOURCE
 1

	)

231 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

232 || (!
deföed
 
	g__STRICT_ANSI__
 \

233 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

234 && !
deföed
 
	g_ISOC2X_SOURCE
 \

235 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

236 && !
deföed
 
	g_XOPEN_SOURCE
))

237 #unde‡
_DEFAULT_SOURCE


238 
	#_DEFAULT_SOURCE
 1

	)

242 #i‡(
deföed
 
_ISOC2X_SOURCE
 \

243 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

244 
	#__GLIBC_USE_ISOC2X
 1

	)

246 
	#__GLIBC_USE_ISOC2X
 0

	)

250 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC2X_SOURCE
 \

251 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

252 
	#__USE_ISOC11
 1

	)

256 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

257 || 
deföed
 
_ISOC2X_SOURCE
 \

258 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

259 
	#__USE_ISOC99
 1

	)

263 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

264 || 
deföed
 
_ISOC2X_SOURCE
 \

265 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

266 
	#__USE_ISOC95
 1

	)

269 #ifde‡
__˝lu•lus


271 #i‡
__˝lu•lus
 >= 201703L

272 
	#__USE_ISOC11
 1

	)

276 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


277 
	#__USE_ISOCXX11
 1

	)

278 
	#__USE_ISOC99
 1

	)

285 #ifde‡
_DEFAULT_SOURCE


286 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


287 
	#__USE_POSIX_IMPLICITLY
 1

	)

289 #unde‡
_POSIX_SOURCE


290 
	#_POSIX_SOURCE
 1

	)

291 #unde‡
_POSIX_C_SOURCE


292 
	#_POSIX_C_SOURCE
 200809L

	)

295 #i‡((!
deföed
 
__STRICT_ANSI__
 \

296 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

297 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

298 
	#_POSIX_SOURCE
 1

	)

299 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

300 
	#_POSIX_C_SOURCE
 2

	)

301 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

302 
	#_POSIX_C_SOURCE
 199506L

	)

303 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

304 
	#_POSIX_C_SOURCE
 200112L

	)

306 
	#_POSIX_C_SOURCE
 200809L

	)

308 
	#__USE_POSIX_IMPLICITLY
 1

	)

317 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

318 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

319 
	#_POSIX_SOURCE
 1

	)

320 #unde‡
_POSIX_C_SOURCE


321 
	#_POSIX_C_SOURCE
 199506L

	)

324 #i‡(
deföed
 
_POSIX_SOURCE
 \

325 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

326 || 
deföed
 
_XOPEN_SOURCE
)

327 
	#__USE_POSIX
 1

	)

330 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


331 
	#__USE_POSIX2
 1

	)

334 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

335 
	#__USE_POSIX199309
 1

	)

338 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

339 
	#__USE_POSIX199506
 1

	)

342 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

343 
	#__USE_XOPEN2K
 1

	)

344 #unde‡
__USE_ISOC95


345 
	#__USE_ISOC95
 1

	)

346 #unde‡
__USE_ISOC99


347 
	#__USE_ISOC99
 1

	)

350 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

351 
	#__USE_XOPEN2K8
 1

	)

352 #unde‡
_ATFILE_SOURCE


353 
	#_ATFILE_SOURCE
 1

	)

356 #ifdef 
_XOPEN_SOURCE


357 
	#__USE_XOPEN
 1

	)

358 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

359 
	#__USE_XOPEN_EXTENDED
 1

	)

360 
	#__USE_UNIX98
 1

	)

361 #unde‡
_LARGEFILE_SOURCE


362 
	#_LARGEFILE_SOURCE
 1

	)

363 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

364 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

365 
	#__USE_XOPEN2K8
 1

	)

366 
	#__USE_XOPEN2K8XSI
 1

	)

368 
	#__USE_XOPEN2K
 1

	)

369 
	#__USE_XOPEN2KXSI
 1

	)

370 #unde‡
__USE_ISOC95


371 
	#__USE_ISOC95
 1

	)

372 #unde‡
__USE_ISOC99


373 
	#__USE_ISOC99
 1

	)

376 #ifde‡
_XOPEN_SOURCE_EXTENDED


377 
	#__USE_XOPEN_EXTENDED
 1

	)

382 #ifde‡
_LARGEFILE_SOURCE


383 
	#__USE_LARGEFILE
 1

	)

386 #ifde‡
_LARGEFILE64_SOURCE


387 
	#__USE_LARGEFILE64
 1

	)

390 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

391 
	#__USE_FILE_OFFSET64
 1

	)

394 
	~<„©uªs-time64.h
>

396 #i‡
deföed
 
_DEFAULT_SOURCE


397 
	#__USE_MISC
 1

	)

400 #ifdef 
_ATFILE_SOURCE


401 
	#__USE_ATFILE
 1

	)

404 #ifdef 
_DYNAMIC_STACK_SIZE_SOURCE


405 
	#__USE_DYNAMIC_STACK_SIZE
 1

	)

408 #ifdef 
_GNU_SOURCE


409 
	#__USE_GNU
 1

	)

412 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

413 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0

414 #i‡!
__GNUC_PREREQ
 (4, 1)

415 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


416 #ñi‡
_FORTIFY_SOURCE
 > 2 && (
__glibc_˛™g_¥îeq
 (9, 0) \

417 || 
	$__GNUC_PREREQ
 (12, 0))

419 #i‡
_FORTIFY_SOURCE
 > 3

420 #w¨nög 
_FORTIFY_SOURCE
 > 3 
is
 
åóãd
 
like
 3 
⁄
 
this
 
∂©f‹m


422 
	#__USE_FORTIFY_LEVEL
 3

	)

423 #ñi‡
_FORTIFY_SOURCE
 > 1

424 #i‡
_FORTIFY_SOURCE
 > 2

425 #w¨nög 
_FORTIFY_SOURCE
 > 2 
is
 
åóãd
 
like
 2 
⁄
 
this
 
∂©f‹m


427 
	#__USE_FORTIFY_LEVEL
 2

	)

429 
	#__USE_FORTIFY_LEVEL
 1

	)

432 #i‚de‡
__USE_FORTIFY_LEVEL


433 
	#__USE_FORTIFY_LEVEL
 0

	)

440 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


441 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

443 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

458 #i‡(
deföed
 
__USE_GNU
 \

459 && (
deföed
 
__˝lu•lus
 \

460 ? (
__˝lu•lus
 < 201103L && !
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
) \

461 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

462 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

464 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

472 #i‡
	`__GLIBC_USE
 (
ISOC2X
)

473 
	#__GLIBC_USE_C2X_STRTOL
 1

	)

475 
	#__GLIBC_USE_C2X_STRTOL
 0

	)

480 
	~<°dc-¥edef.h
>

488 #unde‡
__GNU_LIBRARY__


489 
	#__GNU_LIBRARY__
 6

	)

493 
	#__GLIBC__
 2

	)

494 
	#__GLIBC_MINOR__
 39

	)

496 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

497 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

500 #i‚de‡
__ASSEMBLER__


501 #i‚de‡
_SYS_CDEFS_H


502 
	~<sys/cdefs.h
>

507 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


508 
	#__USE_LARGEFILE
 1

	)

509 
	#__USE_LARGEFILE64
 1

	)

515 #i‡
	`__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

516 && !
deföed
 
__OPTIMIZE_SIZE__
 && !deföed 
__NO_INLINE__
 \

517 && 
deföed
 
__exã∫_ölöe


518 
	#__USE_EXTERN_INLINES
 1

	)

526 
	~<gnu/°ubs.h
>

	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
	slc⁄v


55 *
	mdecimÆ_poöt
;

56 *
	mthoußnds_£p
;

62 *
	mgroupög
;

68 *
	möt_cuº_symbﬁ
;

69 *
	mcuºícy_symbﬁ
;

70 *
	mm⁄_decimÆ_poöt
;

71 *
	mm⁄_thoußnds_£p
;

72 *
	mm⁄_groupög
;

73 *
	mposôive_sign
;

74 *
	m√g©ive_sign
;

75 
	möt_‰ac_digôs
;

76 
	m‰ac_digôs
;

78 
	mp_cs_¥e˚des
;

80 
	mp_£p_by_•a˚
;

82 
	mn_cs_¥e˚des
;

84 
	mn_£p_by_•a˚
;

91 
	mp_sign_po¢
;

92 
	mn_sign_po¢
;

93 #ifde‡
__USE_ISOC99


95 
	möt_p_cs_¥e˚des
;

97 
	möt_p_£p_by_•a˚
;

99 
	möt_n_cs_¥e˚des
;

101 
	möt_n_£p_by_•a˚
;

108 
	möt_p_sign_po¢
;

109 
	möt_n_sign_po¢
;

111 
	m__öt_p_cs_¥e˚des
;

112 
	m__öt_p_£p_by_•a˚
;

113 
	m__öt_n_cs_¥e˚des
;

114 
	m__öt_n_£p_by_•a˚
;

115 
	m__öt_p_sign_po¢
;

116 
	m__öt_n_sign_po¢
;

122 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

125 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

128 #ifdef 
__USE_XOPEN2K8


135 
	~<bôs/ty≥s/loˇÀ_t.h
>

141 
loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

142 
loˇÀ_t
 
__ba£
Ë
__THROW
;

148 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

149 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

150 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

151 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

152 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

153 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

154 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

155 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

156 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

157 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

158 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

159 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

160 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

161 | 
LC_NUMERIC_MASK
 \

162 | 
LC_TIME_MASK
 \

163 | 
LC_COLLATE_MASK
 \

164 | 
LC_MONETARY_MASK
 \

165 | 
LC_MESSAGES_MASK
 \

166 | 
LC_PAPER_MASK
 \

167 | 
LC_NAME_MASK
 \

168 | 
LC_ADDRESS_MASK
 \

169 | 
LC_TELEPHONE_MASK
 \

170 | 
LC_MEASUREMENT_MASK
 \

171 | 
LC_IDENTIFICATION_MASK
 \

172 )

	)

176 
loˇÀ_t
 
	$du∂oˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

180 
	$‰ìloˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

187 
loˇÀ_t
 
	$u£loˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	#LC_GLOBAL_LOCALE
 ((
loˇÀ_t
Ë-1L)

	)

195 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/features-time64.h

20 
	~<bôs/w‹dsize.h
>

21 
	~<bôs/timesize.h
>

23 #i‡
deföed
 
_TIME_BITS


24 #i‡
_TIME_BITS
 == 64

25 #i‡! 
deföed
 (
_FILE_OFFSET_BITS
) || _FILE_OFFSET_BITS != 64

27 #ñi‡
__TIMESIZE
 == 32

28 
	#__USE_TIME_BITS64
 1

	)

30 #ñi‡
_TIME_BITS
 == 32

31 #i‡
__TIMESIZE
 > 32

35 #îr‹ 
InvÆid
 
_TIME_BITS
 
vÆue
 (
ˇn
 
⁄ly
 
be
 32 
‹
 64-
bô
)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

39 
	#__STDC_IEC_60559_BFP__
 201404L

	)

42 
	#__STDC_IEC_559__
 1

	)

43 
	#__STDC_IEC_60559_BFP__
 201404L

	)

46 #ifde‡
__GCC_IEC_559_COMPLEX


47 #i‡
__GCC_IEC_559_COMPLEX
 > 0

48 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

52 
	#__STDC_IEC_559_COMPLEX__
 1

	)

53 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

62 
	#__STDC_ISO_10646__
 201706L

	)

	@
1
.
1
/usr/include
39
566
analyze.c
analyze.h
cgen.c
cgen.h
cminus.l
cminus.y
code.c
code.h
globals.h
lex.yy.c
main.c
parse.c
parse.h
scan.c
scan.h
symtab.c
symtab.h
tm.c
util.c
util.h
y.tab.c
y.tab.h
/usr/include/alloca.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/inttypes.h
/usr/include/libintl.h
/usr/include/limits.h
/usr/include/malloc.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/unistd.h
/usr/include/features.h
/usr/include/locale.h
/usr/include/strings.h
/usr/include/features-time64.h
/usr/include/stdc-predef.h
