cscope 15 $HOME/COMPILERS2024/project2               0000350125
	@analyze.c

9 
	~"globÆs.h
"

10 
	~"symèb.h
"

11 
	~"™Æyze.h
"

14 
	gloˇti⁄
 = 0;

21 
	$åavî£
–
TªeNode
 * 
t
,

22 (* 
¥eProc
Ë(
TªeNode
 *),

23 (* 
po°Proc
Ë(
TªeNode
 *) )

24 { i‡(
t
 !
NULL
)

25 { 
	`¥eProc
(
t
);

26 { 
i
;

27 
i
=0; i < 
MAXCHILDREN
; i++)

28 
	`åavî£
(
t
->
chûd
[
i
],
¥eProc
,
po°Proc
);

30 
	`po°Proc
(
t
);

31 
	`åavî£
(
t
->
siblög
,
¥eProc
,
po°Proc
);

33 
	}
}

39 
	$nuŒProc
(
TªeNode
 * 
t
)

40 { i‡(
t
==
NULL
) ;

42 
	}
}

48 
	$ö£πNode
–
TªeNode
 * 
t
)

49 { 
t
->
nodeköd
)

50 { 
StmtK
:

51 
t
->
köd
.
°mt
)

52 { 
AssignK
:

53 
RódK
:

54 i‡(
	`°_lookup
(
t
->
©å
.
«me
) == -1)

56 
	`°_ö£π
(
t
->
©å
.
«me
,t->
löío
,
loˇti⁄
++);

60 
	`°_ö£π
(
t
->
©å
.
«me
,t->
löío
,0);

66 
ExpK
:

67 
t
->
köd
.
exp
)

68 { 
IdK
:

69 i‡(
	`°_lookup
(
t
->
©å
.
«me
) == -1)

71 
	`°_ö£π
(
t
->
©å
.
«me
,t->
löío
,
loˇti⁄
++);

75 
	`°_ö£π
(
t
->
©å
.
«me
,t->
löío
,0);

84 
	}
}

89 
	$buûdSymèb
(
TªeNode
 * 
sy¡axTªe
)

90 { 
	`åavî£
(
sy¡axTªe
,
ö£πNode
,
nuŒProc
);

91 i‡(
Tø˚A«lyze
)

92 { 
	`Ârötf
(
li°ög
,"\nSymbolÅable:\n\n");

93 
	`¥ötSymTab
(
li°ög
);

95 
	}
}

97 
	$ty≥Eº‹
(
TªeNode
 * 
t
, * 
mesßge
)

98 { 
	`Ârötf
(
li°ög
,"Ty≥Éº‹áàlöê%d: %s\n",
t
->
löío
,
mesßge
);

99 
Eº‹
 = 
TRUE
;

100 
	}
}

105 
	$checkNode
(
TªeNode
 * 
t
)

106 { 
t
->
nodeköd
)

107 { 
ExpK
:

108 
t
->
köd
.
exp
)

109 { 
OpK
:

110 i‡((
t
->
chûd
[0]->
ty≥
 !
I¡egî
) ||

111 (
t
->
chûd
[1]->
ty≥
 !
I¡egî
))

112 
	`ty≥Eº‹
(
t
,"OpáppliedÅoÇon-integer");

113 i‡((
t
->
©å
.
›
 =
EQ
Ë|| (t->©å.› =
LT
))

114 
t
->
ty≥
 = 
Boﬁón
;

116 
t
->
ty≥
 = 
I¡egî
;

118 
C⁄°K
:

119 
IdK
:

120 
t
->
ty≥
 = 
I¡egî
;

126 
StmtK
:

127 
t
->
köd
.
°mt
)

128 { 
IfK
:

129 i‡(
t
->
chûd
[0]->
ty≥
 =
I¡egî
)

130 
	`ty≥Eº‹
(
t
->
chûd
[0],"ifÅest isÇot Boolean");

132 
AssignK
:

133 i‡(
t
->
chûd
[0]->
ty≥
 !
I¡egî
)

134 
	`ty≥Eº‹
(
t
->
chûd
[0],"assignment ofÇon-integer value");

136 
WrôeK
:

137 i‡(
t
->
chûd
[0]->
ty≥
 !
I¡egî
)

138 
	`ty≥Eº‹
(
t
->
chûd
[0],"write ofÇon-integer value");

140 
RïótK
:

141 i‡(
t
->
chûd
[1]->
ty≥
 =
I¡egî
)

142 
	`ty≥Eº‹
(
t
->
chûd
[1],"repeatÅest isÇot Boolean");

152 
	}
}

157 
	$ty≥Check
(
TªeNode
 * 
sy¡axTªe
)

158 { 
	`åavî£
(
sy¡axTªe
,
nuŒProc
,
checkNode
);

159 
	}
}

	@analyze.h

8 #i‚de‡
_ANALYZE_H_


9 
	#_ANALYZE_H_


	)

14 
buûdSymèb
(
TªeNode
 *);

19 
ty≥Check
(
TªeNode
 *);

	@cgen.c

10 
	~"globÆs.h
"

11 
	~"symèb.h
"

12 
	~"code.h
"

13 
	~"cgí.h
"

19 
	gtmpOff£t
 = 0;

22 
cGí
 (
TªeNode
 * 
åì
);

25 
	$gíStmt
–
TªeNode
 * 
åì
)

26 { 
TªeNode
 * 
p1
, * 
p2
, * 
p3
;

27 
ßvedLoc1
,
ßvedLoc2
,
cuºítLoc
;

28 
loc
;

29 
åì
->
köd
.
°mt
) {

31 
IfK
 :

32 i‡(
Tø˚Code
Ë
	`emôCommít
("-> if") ;

33 
p1
 = 
åì
->
chûd
[0] ;

34 
p2
 = 
åì
->
chûd
[1] ;

35 
p3
 = 
åì
->
chûd
[2] ;

37 
	`cGí
(
p1
);

38 
ßvedLoc1
 = 
	`emôSkù
(1) ;

39 
	`emôCommít
("if: jumpÅoÉlse belongs here");

41 
	`cGí
(
p2
);

42 
ßvedLoc2
 = 
	`emôSkù
(1) ;

43 
	`emôCommít
("if: jumpÅoÉnd belongs here");

44 
cuºítLoc
 = 
	`emôSkù
(0) ;

45 
	`emôBackup
(
ßvedLoc1
) ;

46 
	`emôRM_Abs
("JEQ",
ac
,
cuºítLoc
,"if: jmpÅoÉlse");

47 
	`emôRe°‹e
() ;

49 
	`cGí
(
p3
);

50 
cuºítLoc
 = 
	`emôSkù
(0) ;

51 
	`emôBackup
(
ßvedLoc2
) ;

52 
	`emôRM_Abs
("LDA",
pc
,
cuºítLoc
,"jmpÅoÉnd") ;

53 
	`emôRe°‹e
() ;

54 i‡(
Tø˚Code
Ë
	`emôCommít
("<- if") ;

57 
RïótK
:

58 i‡(
Tø˚Code
Ë
	`emôCommít
("->Ñepeat") ;

59 
p1
 = 
åì
->
chûd
[0] ;

60 
p2
 = 
åì
->
chûd
[1] ;

61 
ßvedLoc1
 = 
	`emôSkù
(0);

62 
	`emôCommít
("repeat: jumpáfter body comes back here");

64 
	`cGí
(
p1
);

66 
	`cGí
(
p2
);

67 
	`emôRM_Abs
("JEQ",
ac
,
ßvedLoc1
,"repeat: jmp backÅo body");

68 i‡(
Tø˚Code
Ë
	`emôCommít
("<-Ñepeat") ;

71 
AssignK
:

72 i‡(
Tø˚Code
Ë
	`emôCommít
("->ássign") ;

74 
	`cGí
(
åì
->
chûd
[0]);

76 
loc
 = 
	`°_lookup
(
åì
->
©å
.
«me
);

77 
	`emôRM
("ST",
ac
,
loc
,
gp
,"assign: store value");

78 i‡(
Tø˚Code
Ë
	`emôCommít
("<-ássign") ;

81 
RódK
:

82 
	`emôRO
("IN",
ac
,0,0,"read integer value");

83 
loc
 = 
	`°_lookup
(
åì
->
©å
.
«me
);

84 
	`emôRM
("ST",
ac
,
loc
,
gp
,"read: store value");

86 
WrôeK
:

88 
	`cGí
(
åì
->
chûd
[0]);

90 
	`emôRO
("OUT",
ac
,0,0,"writeác");

95 
	}
}

98 
	$gíExp
–
TªeNode
 * 
åì
)

99 { 
loc
;

100 
TªeNode
 * 
p1
, * 
p2
;

101 
åì
->
köd
.
exp
) {

103 
C⁄°K
 :

104 i‡(
Tø˚Code
Ë
	`emôCommít
("-> Const") ;

106 
	`emôRM
("LDC",
ac
,
åì
->
©å
.
vÆ
,0,"load const");

107 i‡(
Tø˚Code
Ë
	`emôCommít
("<- Const") ;

110 
IdK
 :

111 i‡(
Tø˚Code
Ë
	`emôCommít
("-> Id") ;

112 
loc
 = 
	`°_lookup
(
åì
->
©å
.
«me
);

113 
	`emôRM
("LD",
ac
,
loc
,
gp
,"load id value");

114 i‡(
Tø˚Code
Ë
	`emôCommít
("<- Id") ;

117 
OpK
 :

118 i‡(
Tø˚Code
Ë
	`emôCommít
("-> Op") ;

119 
p1
 = 
åì
->
chûd
[0];

120 
p2
 = 
åì
->
chûd
[1];

122 
	`cGí
(
p1
);

124 
	`emôRM
("ST",
ac
,
tmpOff£t
--,
mp
,"op:ÖushÜeft");

126 
	`cGí
(
p2
);

128 
	`emôRM
("LD",
ac1
,++
tmpOff£t
,
mp
,"op:ÜoadÜeft");

129 
åì
->
©å
.
›
) {

130 
PLUS
 :

131 
	`emôRO
("ADD",
ac
,
ac1
,ac,"op +");

133 
MINUS
 :

134 
	`emôRO
("SUB",
ac
,
ac1
,ac,"op -");

136 
TIMES
 :

137 
	`emôRO
("MUL",
ac
,
ac1
,ac,"op *");

139 
OVER
 :

140 
	`emôRO
("DIV",
ac
,
ac1
,ac,"op /");

142 
LT
 :

143 
	`emôRO
("SUB",
ac
,
ac1
,ac,"op <") ;

144 
	`emôRM
("JLT",
ac
,2,
pc
,"br ifÅrue") ;

145 
	`emôRM
("LDC",
ac
,0,ac,"false case") ;

146 
	`emôRM
("LDA",
pc
,1,pc,"unconditional jmp") ;

147 
	`emôRM
("LDC",
ac
,1,ac,"true case") ;

149 
EQ
 :

150 
	`emôRO
("SUB",
ac
,
ac1
,ac,"op ==") ;

151 
	`emôRM
("JEQ",
ac
,2,
pc
,"br ifÅrue");

152 
	`emôRM
("LDC",
ac
,0,ac,"false case") ;

153 
	`emôRM
("LDA",
pc
,1,pc,"unconditional jmp") ;

154 
	`emôRM
("LDC",
ac
,1,ac,"true case") ;

157 
	`emôCommít
("BUG: Unknown operator");

160 i‡(
Tø˚Code
Ë
	`emôCommít
("<- Op") ;

166 
	}
}

171 
	$cGí
–
TªeNode
 * 
åì
)

172 { i‡(
åì
 !
NULL
)

173 { 
åì
->
nodeköd
) {

174 
StmtK
:

175 
	`gíStmt
(
åì
);

177 
ExpK
:

178 
	`gíExp
(
åì
);

183 
	`cGí
(
åì
->
siblög
);

185 
	}
}

196 
	$codeGí
(
TªeNode
 * 
sy¡axTªe
, * 
codefûe
)

197 { * 
s
 = 
	`mÆloc
(
	`°æí
(
codefûe
)+7);

198 
	`°r˝y
(
s
,"File: ");

199 
	`°rˇt
(
s
,
codefûe
);

200 
	`emôCommít
("TINY CompilationÅo TM Code");

201 
	`emôCommít
(
s
);

203 
	`emôCommít
("StandardÖrelude:");

204 
	`emôRM
("LD",
mp
,0,
ac
,"load maxaddress fromÜocation 0");

205 
	`emôRM
("ST",
ac
,0,ac,"clearÜocation 0");

206 
	`emôCommít
("End of standardÖrelude.");

208 
	`cGí
(
sy¡axTªe
);

210 
	`emôCommít
("End ofÉxecution.");

211 
	`emôRO
("HALT",0,0,0,"");

212 
	}
}

	@cgen.h

8 #i‚de‡
_CGEN_H_


9 
	#_CGEN_H_


	)

17 
codeGí
(
TªeNode
 * 
sy¡axTªe
, * 
codefûe
);

	@cminus.l

9 
	~"globÆs.h
"

10 
	~"utû.h
"

11 
	~"sˇn.h
"

13 
	gtokíSåög
[
MAXTOKENLEN
+1];

14 
	gch
=0;

17 
digô
 [0-9]

18 
numbî
 {
digô
}+

19 
Àâî
 [
a
-
zA
-
Z
]

20 
idítifõr
 {
Àâî
}({Àâî}|{
digô
})*

21 
√wlöe
 \
n


22 
whôe•a˚
 [ \
t
]+

24 %% /* 
	$yyÀx
 */

25 "öt" {  
INT
; }

26 "if" {  
IF
; }

27 "ñ£" {  
ELSE
; }

28 "whûe" {  
WHILE
; }

29 "ªtu∫" {  
RETURN
; }

30 "void" {  
VOID
; }

31 "+" {  
PLUS
; }

32 "-" {  
MINUS
; }

33 "*" {  
TIMES
; }

34 "/" {  
OVER
; }

35 "<" {  
LT
; }

36 "<=" {  
LE
; }

37 ">" {  
GT
; }

38 ">=" {  
GE
; }

39 "==" {  
EQ
; }

40 "!=" {  
NE
; }

41 "=" {  
ASSIGN
; }

42 ";" {  
SEMI
; }

43 "," {  
COMMA
; }

44 "(" {  
LPAREN
; }

45 ")" {  
RPAREN
; }

46 "[" {  
LBRACE
; }

47 "]" {  
RBRACE
; }

48 "{" {  
LCURLY
; }

49 "}" {  
RCURLY
; }

50 {
numbî
} {  
NUM
; }

51 {
idítifõr
} {  
ID
; }

52 {
√wlöe
} { 
löío
++; }

53 {
whôe•a˚
} { }

54 . { 
ERROR
; }

55 <<
EOF
>> { 
ENDFILE
; }

57 
cuºít
;

58 
√xt
;

60 
cuºít
 = 
	`öput
();

62 i‡(
cuºít
 == '*') {

63 
√xt
=
	`öput
();

64 if(
√xt
=='/') ;

65 
	`u≈ut
(
√xt
);

68 i‡(
cuºít
 =0 || cuºíà=
EOF
) {

69  
ENDFILE
;

72 i‡(
cuºít
 == '\n') {

73 
löío
++;

78 
	}
%%

80 
TokíTy≥
 
	$gëTokí
()

81 { 
fú°Time
 = 
TRUE
;

82 
TokíTy≥
 
cuºítTokí
;

83 i‡(
fú°Time
)

84 { 
fú°Time
 = 
FALSE
;

85 
löío
++;

86 
yyö
 = 
sour˚
;

87 
yyout
 = 
li°ög
;

89 
cuºítTokí
 = 
	`yyÀx
();

90 
	`°∫˝y
(
tokíSåög
,
yyãxt
,
MAXTOKENLEN
);

91 i‡(
Tø˚Sˇn
) {

92 
	`Ârötf
(
li°ög
,"\t%d: ",
löío
);

93 
	`¥ötTokí
(
cuºítTokí
,
tokíSåög
);

95  
cuºítTokí
;

96 
	}
}

	@cminus.y

12 
	#YYPARSER


	)

14 
	~"globÆs.h
"

15 
	~"utû.h
"

16 
	~"sˇn.h
"

17 
	~"∑r£.h
"

21 
	#YYSTYPE
 
TªeNode
 *

	)

22 
	gßvedNumbî
;

23 * 
	gßvedName
;

25 
ExpTy≥
 
	gßvedTy≥
;

26 
	gßvedLöeNo
;

27 
TªeNode
 * 
	gßvedTªe
;

28 
yyÀx
();

31 
yyîr‹
(* 
mesßge
);

39 %
tokí
 
IF
 
ELSE
 
INT
 
RETURN
 
VOID
 
WHILE


40 %
tokí
 
ID
 
NUM


41 %
tokí
 
LT
 
LE
 
GT
 
GE
 
EQ
 
NE
 
SEMI


42 %
tokí
 
LPAREN
 
RPAREN
 
LCURLY
 
RCURLY
 
LBRACE
 
RBRACE


43 %
À·
 
PLUS
 
MINUS


44 %
À·
 
TIMES
 
OVER
 
COMMA


45 %
right
 
ASSIGN


46 %
right
 
THEN
 
ELSE


47 %
tokí
 
ERROR


58 %% /* 
	$yy∑r£
 */ 
	`yyÀx
()

64 
¥ogøm
 : 
de˛¨©i⁄_li°
 { 
ßvedTªe
 = 
$1
; }

67 
de˛¨©i⁄_li°
 : de˛¨©i⁄_li° 
de˛¨©i⁄


68 { 
YYSTYPE
 
t
 = 
$1
;

69 i‡(
t
 !
NULL
) {

70 
t
->
siblög
 !
NULL
) {Å =Å->sibling; }

71 
t
->
siblög
 = 
$2
;

72 
$$
 = 
$1
;

74 
$$
 = 
$2
;

77 | 
de˛¨©i⁄
 { 
$$
 = 
$1
; }

80 
de˛¨©i⁄
 : 
v¨_de˛¨©i⁄
 { 
$$
 = 
$1
; }

81 | 
fun_de˛¨©i⁄
 { 
$$
 = 
$1
; }

84 
id
 : 
ID


85 { 
ßvedName
 = 
	`c›ySåög
(
tokíSåög
);

86 
ßvedLöeNo
 = 
löío
;

90 
num
 : 
NUM


91 { 
ßvedNumbî
 = 
	`©oi
(
tokíSåög
);

92 
ßvedLöeNo
 = 
löío
;

96 
v¨_de˛¨©i⁄
 : 
ty≥_•ecifõr
 
id
 
SEMI


97 { 
$$
 = 
	`√wDe˛Node
(
V¨K
);

98 
$$
->
ty≥
=
ßvedTy≥
;

99 
$$
->
löío
 =Üineno;

100 
$$
->
©å
.
«me
 = 
ßvedName
;

102 | 
ty≥_•ecifõr
 
id
 
LBRACE
 
num
 
RBRACE
 
SEMI


103 { 
$$
 = 
	`√wDe˛Node
(
AºK
);

104 
$$
->
ty≥
=
I¡Aºay
;

105 
$$
->
©å
.
«me
=
ßvedName
;

106 
$$
->
chûd
[0] = 
	`√wExpNode
(
C⁄°K
);

107 
$$
->
chûd
[0]->
©å
.
vÆ
=
ßvedNumbî
;

108 
$$
->
löío
=lineno;

112 
ty≥_•ecifõr
 : 
INT
 { 
ßvedTy≥
=
I¡egî
; }

113 | 
VOID
 { 
ßvedTy≥
=
Void
;}

116 
fun_de˛¨©i⁄
 : 
ty≥_•ecifõr
 
id
 
LPAREN
 
∑øms
 
RPAREN
 
compound_°mt


117 { 
$$
 = 
	`√wDe˛Node
(
FuncK
);

118 
$$
->
ty≥
=
ßvedTy≥
;

119 
$$
->
©å
.
«me
=
ßvedName
;

120 
$$
->
löío
=lineno;

121 
$$
->
chûd
[0] = 
$4
;

122 
$$
->
chûd
[1] = 
$6
;

126 
∑øms
 : 
∑øm_li°
 { 
$$
 = 
$1
; }

127 | 
VOID


128 { 
$$
 = 
	`√wDe˛Node
(
VoidP¨amK
);

132 
∑øm_li°
 :Ö¨am_li° 
COMMA
 
∑øm


133 { 
YYSTYPE
 
t
 = 
$1
;

134 i‡(
t
 !
NULL
) {

135 
t
->
siblög
 !
NULL
) {Å =Å->sibling; }

136 
t
->
siblög
 = 
$3
;

137 
$$
 = 
$1
;

139 
$$
 = 
$3
;

142 | 
∑øm
 { 
$$
 = 
$1
; }

145 
∑øm
 : 
ty≥_•ecifõr
 
id


146 { 
$$
 = 
	`√wDe˛Node
(
P¨amK
);

147 
$$
->
ty≥
=
ßvedTy≥
;

148 
$$
->
©å
.
«me
 = 
ßvedName
;

151 | 
ty≥_•ecifõr
 
id
 
LBRACE
 
RBRACE


152 { 
$$
 = 
	`√wDe˛Node
(
AºP¨amK
);

153 
$$
->
©å
.
«me
 = 
	`c›ySåög
(
ßvedName
);

154 
$$
->
ty≥
=
I¡Aºay
;

158 
compound_°mt
 : 
LCURLY
 
loˇl_de˛¨©i⁄s
 
°©emít_li°
 
RCURLY


159 { 
$$
 = 
	`√wStmtNode
(
CompoundK
);

160 
$$
->
chûd
[0] = 
$2
;

161 
$$
->
chûd
[1] = 
$3
;

165 
loˇl_de˛¨©i⁄s
 :Üoˇl_de˛¨©i⁄†
v¨_de˛¨©i⁄


166 { 
YYSTYPE
 
t
 = 
$1
;

167 i‡(
t
 !
NULL
) {

168 
t
->
siblög
 !
NULL
) {Å =Å->sibling; }

169 
t
->
siblög
 = 
$2
;

170 
$$
 = 
$1
;

172 
$$
 = 
$2
;

175 | { 
$$
 = 
NULL
; }

178 
°©emít_li°
 : sèãmít_li° 
°©emít


179 { 
YYSTYPE
 
t
 = 
$1
;

180 i‡(
t
 !
NULL
) {

181 
t
->
siblög
 !
NULL
) {Å =Å->sibling; }

182 
t
->
siblög
 = 
$2
;

183 
$$
 = 
$1
;

185 
$$
 = 
$2
;

188 | { 
$$
 = 
NULL
; }

191 
°©emít
 : 
ex¥essi⁄_°mt
 { 
$$
 = 
$1
; }

192 | 
compound_°mt
 { 
$$
 = 
$1
; }

193 | 
£À˘i⁄_°mt
 { 
$$
 = 
$1
; }

194 | 
ôî©i⁄_°mt
 { 
$$
 = 
$1
; }

195 | 
ªtu∫_°mt
 { 
$$
 = 
$1
; }

196 | 
ERROR
 
SEMI
 { 
	`yyîr‹
("Sy¡axÉº‹ i¿°©emít."); 
yyîrok
; }

199 
ex¥essi⁄_°mt
 : 
ex¥essi⁄
 
SEMI
 { 
$$
 = 
$1
; }

200 | 
SEMI
 { 
$$
 = 
NULL
; }

203 
£À˘i⁄_°mt
: 
IF
 
LPAREN
 
ex¥essi⁄
 
RPAREN
 
°©emít
 {

204 
$$
 = 
	`√wStmtNode
(
IfK
);

205 
$$
->
chûd
[0] = 
$3
;

206 
$$
->
chûd
[1] = 
$5
;

207 } %
¥ec
 
THEN
 | 
IF
 
LPAREN
 
ex¥essi⁄
 
RPAREN
 
°©emít
 
ELSE
 statement {

208 
$$
 = 
	`√wStmtNode
(
IfK
);

209 
$$
->
chûd
[0] = 
$3
;

210 
$$
->
chûd
[1] = 
$5
;

211 
$$
->
chûd
[2] = 
$7
;

214 
ôî©i⁄_°mt
 : 
WHILE
 
LPAREN
 
ex¥essi⁄
 
RPAREN
 
°©emít


215 { 
$$
 = 
	`√wStmtNode
(
WhûeK
);

216 
$$
->
chûd
[0] = 
$3
;

217 
$$
->
chûd
[1] = 
$5
;

221 
ªtu∫_°mt
 : 
RETURN
 
SEMI


222 { 
$$
 = 
	`√wStmtNode
(
Rëu∫K
);

224 | 
RETURN
 
ex¥essi⁄
 
SEMI


225 { 
$$
 = 
	`√wStmtNode
(
Rëu∫K
);

226 
$$
->
chûd
[0] = 
$2
;

230 
ex¥essi⁄
 : 
v¨
 
ASSIGN
Éxpression

231 { 
$$
 = 
	`√wStmtNode
(
AssignK
);

232 
$$
->
chûd
[0] = 
$1
;

233 
$$
->
chûd
[1] = 
$3
;

235 | 
sim∂e_ex¥essi⁄
 { 
$$
 = 
$1
; }

238 
v¨
 : 
id


239 { 
$$
 = 
	`√wExpNode
(
IdK
);

241 | 
id
 
LBRACE
 
ex¥essi⁄
 
RBRACE


243 
$$
 = 
	`√wExpNode
(
AºIdK
);

244 
$$
->
chûd
[0] = 
$3
;

248 
sim∂e_ex¥essi⁄
 : 
addôive_ex¥essi⁄
 
ªl›
ádditive_expression

249 { 
$$
 = 
	`√wExpNode
(
OpK
);

250 
$$
->
ty≥
=
$2
->type;

251 
$$
->
chûd
[0] = 
$1
;

252 
$$
->
chûd
[1] = 
$3
;

254 | 
addôive_ex¥essi⁄
 { 
$$
 = 
$1
; }

257 
ªl›
 : 
LT
 { 
$$
->
©å
.
›
 = LT; }

258 | 
LE
 { 
$$
->
©å
.
›
 = LE; }

259 | 
GT
 { 
$$
->
©å
.
›
 = GT; }

260 | 
GE
 { 
$$
->
©å
.
›
 = GE; }

261 | 
EQ
 { 
$$
->
©å
.
›
 = EQ; }

262 | 
NE
 { 
$$
->
©å
.
›
 = NE; }

265 
addôive_ex¥essi⁄
 :áddôive_ex¥essi⁄ 
add›
 
ãrm


266 { 
$$
 = 
	`√wExpNode
(
OpK
);

267 
$$
->
chûd
[0] = 
$1
;

268 
$$
->
chûd
[1] = 
$3
;

270 | 
ãrm
 { 
$$
 = 
$1
; }

273 
add›
 : 
PLUS
 { 
$$
->
©å
.
›
 = PLUS; }

274 | 
MINUS
 { 
$$
->
©å
.
›
 = MINUS; }

277 
ãrm
 :Åîm 
mul›
 
Á˘‹


278 { 
$$
 = 
	`√wExpNode
(
OpK
);

279 
$$
->
chûd
[0] = 
$1
;

280 
$$
->
chûd
[1] = 
$3
;

282 | 
Á˘‹
 { 
$$
 = 
$1
; }

285 
mul›
 : 
TIMES
 { 
$$
->
©å
.
›
 = TIMES; }

286 | 
OVER
 { 
$$
->
©å
.
›
 = OVER; }

289 
Á˘‹
 : 
LPAREN
 
ex¥essi⁄
 
RPAREN
 { 
$$
 = 
$2
; }

290 | 
v¨
 { 
$$
 = 
$1
; }

291 | 
ˇŒ
 { 
$$
 = 
$1
; }

292 | 
num


293 { 
$$
 = 
	`√wExpNode
(
C⁄°K
);

294 
$$
->
©å
.
vÆ
=
ßvedNumbî
;

298 
ˇŒ
 : 
id
 
LPAREN
 
¨gs
 
RPAREN


299 { 
$$
 = 
	`√wExpNode
(
CÆlK
);

300 
$$
->
©å
.
«me
 = 
ßvedName
;

301 
$$
->
chûd
[0] = 
$3
;

305 
¨gs
 : 
¨g_li°
 { 
$$
 = 
$1
; }

306 | { 
$$
 = 
NULL
; }

309 
¨g_li°
 :árg_li° 
COMMA
 
ex¥essi⁄


310 { 
YYSTYPE
 
t
 = 
$1
;

311 i‡(
t
 !
NULL
) {

312 
t
->
siblög
 !
NULL
) {Å =Å->sibling; }

313 
t
->
siblög
 = 
$3
;

314 
$$
 = 
$1
;

316 
$$
 = 
$3
;

319 | 
ex¥essi⁄
 { 
$$
 = 
$1
; }

322 
	}
%%

328 
	$yyîr‹
(* 
mesßge
) {

329 
	`Ârötf
(
li°ög
,"Sy¡axÉº‹áàlöê%d: %s\n",
löío
,
mesßge
);

330 
	`Ârötf
(
li°ög
,"CurrentÅoken: ");

331 
	`¥ötTokí
(
yych¨
,
tokíSåög
);

332 
Eº‹
 = 
TRUE
;

334 
	}
}

339 
	$yyÀx
() {

340  
	`gëTokí
();

341 
	}
}

343 
TªeNode
 * 
	$∑r£
() {

344 
	`yy∑r£
();

345  
ßvedTªe
;

346 
	}
}

	@code.c

9 
	~"globÆs.h
"

10 
	~"code.h
"

13 
	gemôLoc
 = 0 ;

18 
	ghighEmôLoc
 = 0;

23 
	$emôCommít
–* 
c
 )

24 { i‡(
Tø˚Code
Ë
	`Ârötf
(
code
,"* %s\n",
c
);
	}
}

34 
	$emôRO
–*
›
, 
r
, 
s
, 
t
, *
c
)

35 { 
	`Ârötf
(
code
,"%3d: %5† %d,%d,%d ",
emôLoc
++,
›
,
r
,
s
,
t
);

36 i‡(
Tø˚Code
Ë
	`Ârötf
(
code
,"\t%s",
c
) ;

37 
	`Ârötf
(
code
,"\n") ;

38 i‡(
highEmôLoc
 < 
emôLoc
) highEmitLoc =ÉmitLoc ;

39 
	}
}

49 
	$emôRM
–* 
›
, 
r
, 
d
, 
s
, *
c
)

50 { 
	`Ârötf
(
code
,"%3d: %5† %d,%d(%dË",
emôLoc
++,
›
,
r
,
d
,
s
);

51 i‡(
Tø˚Code
Ë
	`Ârötf
(
code
,"\t%s",
c
) ;

52 
	`Ârötf
(
code
,"\n") ;

53 i‡(
highEmôLoc
 < 
emôLoc
) highEmitLoc =ÉmitLoc ;

54 
	}
}

60 
	$emôSkù
–
howM™y
)

61 { 
i
 = 
emôLoc
;

62 
emôLoc
 +
howM™y
 ;

63 i‡(
highEmôLoc
 < 
emôLoc
) highEmitLoc =ÉmitLoc ;

64  
i
;

65 
	}
}

70 
	$emôBackup
–
loc
)

71 { i‡(
loc
 > 
highEmôLoc
Ë
	`emôCommít
("BUG inÉmitBackup");

72 
emôLoc
 = 
loc
 ;

73 
	}
}

79 
	$emôRe°‹e
()

80 { 
emôLoc
 = 
highEmôLoc
;
	}
}

90 
	$emôRM_Abs
–*
›
, 
r
, 
a
, * 
c
)

91 { 
	`Ârötf
(
code
,"%3d: %5s %d,%d(%d) ",

92 
emôLoc
,
›
,
r
,
a
-”môLoc+1),
pc
);

93 ++
emôLoc
 ;

94 i‡(
Tø˚Code
Ë
	`Ârötf
(
code
,"\t%s",
c
) ;

95 
	`Ârötf
(
code
,"\n") ;

96 i‡(
highEmôLoc
 < 
emôLoc
) highEmitLoc =ÉmitLoc ;

97 
	}
}

	@code.h

9 #i‚de‡
_CODE_H_


10 
	#_CODE_H_


	)

13 
	#pc
 7

	)

18 
	#mp
 6

	)

24 
	#gp
 5

	)

27 
	#ac
 0

	)

30 
	#ac1
 1

	)

37 
emôCommít
–* 
c
 );

47 
emôRO
–*
›
, 
r
, 
s
, 
t
, *
c
);

57 
emôRM
–* 
›
, 
r
, 
d
, 
s
, *
c
);

63 
emôSkù
–
howM™y
);

68 
emôBackup
–
loc
);

74 
emôRe°‹e
();

84 
emôRM_Abs
–*
›
, 
r
, 
a
, * 
c
);

	@globals.h

9 #i‚de‡
_GLOBALS_H_


10 
	#_GLOBALS_H_


	)

12 
	~<°dio.h
>

13 
	~<°dlib.h
>

14 
	~<˘y≥.h
>

15 
	~<°rög.h
>

17 #i‚de‡
YYPARSER


20 
	~"y.èb.h
"

23 
	#ENDFILE
 0

	)

26 #i‚de‡
FALSE


27 
	#FALSE
 0

	)

30 #i‚de‡
TRUE


31 
	#TRUE
 1

	)

35 
	#MAXRESERVED
 6

	)

37 
	tTokíTy≥
;

50 
FILE
* 
sour˚
;

51 
FILE
* 
li°ög
;

52 
FILE
* 
code
;

54 
löío
;

60 íum {
	mStmtK
,
	mExpK
, 
	mDe˛K
} 
	tNodeKöd
;

62 íum {
	mV¨K
, 
	mAºK
, 
	mFuncK
, 
	mP¨amK
, 
	mVoidP¨amK
, 
	mAºP¨amK
} 
	tDe˛Köd
;

64 íum {
	mIfK
,
	mEl£K
, 
	mWhûeK
, 
	mCompoundK
, 
	mRëu∫K
 } 
	tStmtKöd
;

65 íum {
	mOpK
,
	mC⁄°K
,
	mIdK
,
	mAºIdK
,
	mCÆlK
, 
	mAssignK
} 
	tExpKöd
;

68 íum {
	mVoid
,
	mI¡egî
,
	mI¡Aºay
,
	mVoidAºay
} 
	tExpTy≥
;

70 
	#MAXCHILDREN
 3

	)

72 
	såìNode


73 { 
åìNode
 * 
	mchûd
[
MAXCHILDREN
];

74 
åìNode
 * 
	msiblög
;

75 
	mlöío
;

76 
NodeKöd
 
	mnodeköd
;

77 uni⁄ { 
StmtKöd
 
	m°mt
; 
ExpKöd
 
	mexp
; 
De˛Köd
 
	mde˛
;} 
	mköd
;

78 uni⁄ { 
TokíTy≥
 
	m›
;

79 
	mvÆ
;

80 * 
	m«me
; } 
	m©å
;

81 
ExpTy≥
 
	mty≥
;

82 } 
	tTªeNode
;

92 
EchoSour˚
;

98 
Tø˚Sˇn
;

104 
Tø˚P¨£
;

109 
Tø˚A«lyze
;

114 
Tø˚Code
;

117 
Eº‹
;

	@lex.yy.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#FLEX_SCANNER


	)

9 
	#YY_FLEX_MAJOR_VERSION
 2

	)

10 
	#YY_FLEX_MINOR_VERSION
 6

	)

11 
	#YY_FLEX_SUBMINOR_VERSION
 4

	)

12 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

13 
	#FLEX_BETA


	)

19 
	~<°dio.h
>

20 
	~<°rög.h
>

21 
	~<î∫o.h
>

22 
	~<°dlib.h
>

28 #i‚de‡
FLEXINT_H


29 
	#FLEXINT_H


	)

33 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

38 #i‚de‡
__STDC_LIMIT_MACROS


39 
	#__STDC_LIMIT_MACROS
 1

	)

42 
	~<öây≥s.h
>

43 
öt8_t
 
	tÊex_öt8_t
;

44 
uöt8_t
 
	tÊex_uöt8_t
;

45 
öt16_t
 
	tÊex_öt16_t
;

46 
uöt16_t
 
	tÊex_uöt16_t
;

47 
öt32_t
 
	tÊex_öt32_t
;

48 
uöt32_t
 
	tÊex_uöt32_t
;

50 sig√d 
	tÊex_öt8_t
;

51 
	tÊex_öt16_t
;

52 
	tÊex_öt32_t
;

53 
	tÊex_uöt8_t
;

54 
	tÊex_uöt16_t
;

55 
	tÊex_uöt32_t
;

58 #i‚de‡
INT8_MIN


59 
	#INT8_MIN
 (-128)

	)

61 #i‚de‡
INT16_MIN


62 
	#INT16_MIN
 (-32767-1)

	)

64 #i‚de‡
INT32_MIN


65 
	#INT32_MIN
 (-2147483647-1)

	)

67 #i‚de‡
INT8_MAX


68 
	#INT8_MAX
 (127)

	)

70 #i‚de‡
INT16_MAX


71 
	#INT16_MAX
 (32767)

	)

73 #i‚de‡
INT32_MAX


74 
	#INT32_MAX
 (2147483647)

	)

76 #i‚de‡
UINT8_MAX


77 
	#UINT8_MAX
 (255U)

	)

79 #i‚de‡
UINT16_MAX


80 
	#UINT16_MAX
 (65535U)

	)

82 #i‚de‡
UINT32_MAX


83 
	#UINT32_MAX
 (4294967295U)

	)

86 #i‚de‡
SIZE_MAX


87 
	#SIZE_MAX
 (~(
size_t
)0)

	)

97 
	#yyc⁄°
 c⁄°

	)

99 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

100 
	#yyn‹ëu∫
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

102 
	#yyn‹ëu∫


	)

106 
	#YY_NULL
 0

	)

111 
	#YY_SC_TO_UI
(
c
Ë((
YY_CHAR
Ë(c))

	)

117 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

122 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

123 
	#YYSTATE
 
YY_START


	)

125 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

127 
	#YY_NEW_FILE
 
	`yyª°¨t
–
yyö
 )

	)

128 
	#YY_END_OF_BUFFER_CHAR
 0

	)

131 #i‚de‡
YY_BUF_SIZE


132 #ifde‡
__ü64__


137 
	#YY_BUF_SIZE
 32768

	)

139 
	#YY_BUF_SIZE
 16384

	)

145 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

147 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


148 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

149 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

152 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


153 
	#YY_TYPEDEF_YY_SIZE_T


	)

154 
size_t
 
	tyy_size_t
;

157 
yyÀng
;

159 
FILE
 *
yyö
, *
yyout
;

161 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

162 
	#EOB_ACT_END_OF_FILE
 1

	)

163 
	#EOB_ACT_LAST_MATCH
 2

	)

165 
	#YY_LESS_LINENO
(
n
)

	)

166 
	#YY_LINENO_REWIND_TO
(
±r
)

	)

169 
	#yyÀss
(
n
) \

173 
yyÀss_ma¸o_¨g
 = (
n
); \

174 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

175 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

176 
YY_RESTORE_YY_MORE_OFFSET
 \

177 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

178 
YY_DO_BEFORE_ACTION
; \

180  0 )

	)

181 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

183 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


184 
	#YY_STRUCT_YY_BUFFER_STATE


	)

185 
	syy_buf„r_°©e


187 
FILE
 *
	myy_öput_fûe
;

189 *
	myy_ch_buf
;

190 *
	myy_buf_pos
;

195 
	myy_buf_size
;

200 
	myy_n_ch¨s
;

206 
	myy_is_our_buf„r
;

213 
	myy_is_öãø˘ive
;

219 
	myy_©_bﬁ
;

221 
	myy_bs_löío
;

222 
	myy_bs_cﬁumn
;

227 
	myy_fûl_buf„r
;

229 
	myy_buf„r_°©us
;

231 
	#YY_BUFFER_NEW
 0

	)

232 
	#YY_BUFFER_NORMAL
 1

	)

243 
	#YY_BUFFER_EOF_PENDING
 2

	)

249 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

250 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

251 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 
NULL
;

259 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

260 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

261 : 
NULL
)

	)

265 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

268 
	gyy_hﬁd_ch¨
;

269 
	gyy_n_ch¨s
;

270 
	gyyÀng
;

273 *
	gyy_c_buf_p
 = 
NULL
;

274 
	gyy_öô
 = 0;

275 
	gyy_°¨t
 = 0;

280 
	gyy_did_buf„r_swôch_⁄_eof
;

282 
yyª°¨t
 ( 
FILE
 *
öput_fûe
 );

283 
yy_swôch_to_buf„r
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 );

284 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 ( 
FILE
 *
fûe
, 
size
 );

285 
yy_dñëe_buf„r
 ( 
YY_BUFFER_STATE
 
b
 );

286 
yy_Êush_buf„r
 ( 
YY_BUFFER_STATE
 
b
 );

287 
yypush_buf„r_°©e
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 );

288 
yyp›_buf„r_°©e
 ( );

290 
yyísuª_buf„r_°ack
 ( );

291 
yy_lﬂd_buf„r_°©e
 ( );

292 
yy_öô_buf„r
 ( 
YY_BUFFER_STATE
 
b
, 
FILE
 *
fûe
 );

293 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
–
YY_CURRENT_BUFFER
 )

	)

295 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 ( *
ba£
, 
yy_size_t
 
size
 );

296 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 ( c⁄° *
yy_°r
 );

297 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 ( c⁄° *
byãs
, 
Àn
 );

299 *
yyÆloc
 ( 
yy_size_t
 );

300 *
yyªÆloc
 ( *, 
yy_size_t
 );

301 
yy‰ì
 ( * );

303 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

304 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

306 i‡–! 
YY_CURRENT_BUFFER
 ){ \

307 
	`yyísuª_buf„r_°ack
 (); \

308 
YY_CURRENT_BUFFER_LVALUE
 = \

309 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

311 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

312 }

	)

313 
	#yy_£t_bﬁ
(
©_bﬁ
) \

315 i‡–! 
YY_CURRENT_BUFFER
 ){\

316 
	`yyísuª_buf„r_°ack
 (); \

317 
YY_CURRENT_BUFFER_LVALUE
 = \

318 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

320 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

321 }

	)

322 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

325 
Êex_uöt8_t
 
	tYY_CHAR
;

327 
FILE
 *
	gyyö
 = 
NULL
, *
	gyyout
 = NULL;

329 
	tyy_°©e_ty≥
;

331 
yylöío
;

332 
	gyylöío
 = 1;

334 *
yyãxt
;

335 #ifde‡
yyãxt_±r


336 #unde‡
yyãxt_±r


338 
	#yyãxt_±r
 
yyãxt


	)

340 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ( );

341 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 ( yy_°©e_ty≥ 
cuºít_°©e
 );

342 
yy_gë_√xt_buf„r
 ( );

343 
yyn‹ëu∫
 
yy_Áèl_îr‹
 ( c⁄° * 
msg
 );

348 
	#YY_DO_BEFORE_ACTION
 \

349 (
yyãxt_±r
Ë
yy_bp
; \

350 
yyÀng
 = (Ë(
yy_˝
 - 
yy_bp
); \

351 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

352 *
yy_˝
 = '\0'; \

353 (
yy_c_buf_p
Ë
yy_˝
;

	)

354 
	#YY_NUM_RULES
 32

	)

355 
	#YY_END_OF_BUFFER
 33

	)

358 
	syy_å™s_öfo


360 
Êex_öt32_t
 
	myy_vîify
;

361 
Êex_öt32_t
 
	myy_nxt
;

363 c⁄° 
Êex_öt16_t
 
	gyy_ac˚±
[57] =

373 c⁄° 
YY_CHAR
 
	gyy_ec
[256] =

405 c⁄° 
YY_CHAR
 
	gyy_mëa
[36] =

413 c⁄° 
Êex_öt16_t
 
	gyy_ba£
[58] =

423 c⁄° 
Êex_öt16_t
 
	gyy_def
[58] =

433 c⁄° 
Êex_öt16_t
 
	gyy_nxt
[101] =

448 c⁄° 
Êex_öt16_t
 
	gyy_chk
[101] =

463 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

464 *
	gyy_œ°_ac˚±ög_˝os
;

466 
yy_Êex_debug
;

467 
	gyy_Êex_debug
 = 0;

472 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

473 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

474 
	#YY_MORE_ADJ
 0

	)

475 
	#YY_RESTORE_YY_MORE_OFFSET


	)

476 *
	gyyãxt
;

485 
	~"globÆs.h
"

486 
	~"utû.h
"

487 
	~"sˇn.h
"

489 
	gtokíSåög
[
MAXTOKENLEN
+1];

490 
	gch
=0;

494 
	#INITIAL
 0

	)

496 #i‚de‡
YY_NO_UNISTD_H


501 
	~<uni°d.h
>

504 #i‚de‡
YY_EXTRA_TYPE


505 
	#YY_EXTRA_TYPE
 *

	)

508 
yy_öô_globÆs
 ( );

513 
yyÀx_de°roy
 ( );

515 
yygë_debug
 ( );

517 
yy£t_debug
 ( 
debug_Êag
 );

519 
YY_EXTRA_TYPE
 
yygë_exåa
 ( );

521 
yy£t_exåa
 ( 
YY_EXTRA_TYPE
 
u£r_deföed
 );

523 
FILE
 *
yygë_ö
 ( );

525 
yy£t_ö
 ( 
FILE
 * 
_ö_°r
 );

527 
FILE
 *
yygë_out
 ( );

529 
yy£t_out
 ( 
FILE
 * 
_out_°r
 );

531 
yygë_Àng
 ( );

533 *
yygë_ãxt
 ( );

535 
yygë_löío
 ( );

537 
yy£t_löío
 ( 
_löe_numbî
 );

543 #i‚de‡
YY_SKIP_YYWRAP


544 #ifde‡
__˝lu•lus


545 "C" 
yywøp
 ( );

547 
yywøp
 ( );

551 #i‚de‡
YY_NO_UNPUT


553 
yyu≈ut
 ( 
c
, *
buf_±r
 );

557 #i‚de‡
yyãxt_±r


558 
yy_Êex_°∫˝y
 ( *, const *, );

561 #ifde‡
YY_NEED_STRLEN


562 
yy_Êex_°æí
 ( const * );

565 #i‚de‡
YY_NO_INPUT


566 #ifde‡
__˝lu•lus


567 
yyöput
 ( );

569 
öput
 ( );

575 #i‚de‡
YY_READ_BUF_SIZE


576 #ifde‡
__ü64__


578 
	#YY_READ_BUF_SIZE
 16384

	)

580 
	#YY_READ_BUF_SIZE
 8192

	)

585 #i‚de‡
ECHO


589 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
yyãxt
, (
size_t
Ë
yyÀng
, 1, 
yyout
 )Ë{} } 0)

	)

595 #i‚de‡
YY_INPUT


596 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

597 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

599 
c
 = '*'; \

600 
n
; \

601  
n
 = 0;Ç < 
max_size
 && \

602 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

603 
buf
[
n
] = (Ë
c
; \

604 i‡–
c
 == '\n' ) \

605 
buf
[
n
++] = (Ë
c
; \

606 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

607 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

608 
ªsu…
 = 
n
; \

612 
î∫o
=0; \

613  (
ªsu…
 = (Ë
	`‰ód
(
buf
, 1, (
yy_size_t
Ë
max_size
, 
yyö
)Ë=0 && 
	`„º‹
(yyin)) \

615 if–
î∫o
 !
EINTR
) \

617 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

620 
î∫o
=0; \

621 
	`˛óªº
(
yyö
); \

625 

	)

632 #i‚de‡
yyãrmö©e


633 
	#yyãrmö©e
(Ë 
YY_NULL


	)

637 #i‚de‡
YY_START_STACK_INCR


638 
	#YY_START_STACK_INCR
 25

	)

642 #i‚de‡
YY_FATAL_ERROR


643 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

651 #i‚de‡
YY_DECL


652 
	#YY_DECL_IS_OURS
 1

	)

654 
yyÀx
 ();

656 
	#YY_DECL
 
	`yyÀx
 ()

	)

662 #i‚de‡
YY_USER_ACTION


663 
	#YY_USER_ACTION


	)

667 #i‚de‡
YY_BREAK


668 
	#YY_BREAK
 ;

	)

671 
	#YY_RULE_SETUP
 \

672 
YY_USER_ACTION


	)

676 
	gYY_DECL


678 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

679 *
	gyy_˝
, *
	gyy_bp
;

680 
	gyy_a˘
;

682 i‡–!(
	gyy_öô
) )

684 (
	gyy_öô
) = 1;

686 #ifde‡
YY_USER_INIT


687 
	gYY_USER_INIT
;

690 i‡–! (
	gyy_°¨t
) )

691 (
	gyy_°¨t
) = 1;

693 i‡–! 
	gyyö
 )

694 
	gyyö
 = 
°dö
;

696 i‡–! 
	gyyout
 )

697 
	gyyout
 = 
°dout
;

699 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

700 
yyísuª_buf„r_°ack
 ();

701 
	gYY_CURRENT_BUFFER_LVALUE
 =

702 
yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

705 
yy_lﬂd_buf„r_°©e
( );

715 
	gyy_˝
 = (
yy_c_buf_p
);

718 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

723 
	gyy_bp
 = 
yy_˝
;

725 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

726 
	gyy_m©ch
:

729 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ;

730 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

732 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

733 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

735  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

737 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

738 i‡–
	gyy_cuºít_°©e
 >= 57 )

739 
yy_c
 = 
yy_mëa
[yy_c];

741 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
];

742 ++
	gyy_˝
;

744  
	gyy_ba£
[
yy_cuºít_°©e
] != 65 );

746 
	gyy_föd_a˘i⁄
:

747 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

748 i‡–
	gyy_a˘
 == 0 )

750 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

751 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

752 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

755 
	gYY_DO_BEFORE_ACTION
;

757 
	gdo_a˘i⁄
:

759  
yy_a˘
 )

763 *
yy_˝
 = (
yy_hﬁd_ch¨
);

764 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

765 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

766 
	gyy_föd_a˘i⁄
;

769 
YY_RULE_SETUP


771 {  
INT
; }

772 
YY_BREAK


774 
YY_RULE_SETUP


776 {  
IF
; }

777 
YY_BREAK


779 
YY_RULE_SETUP


781 {  
ELSE
; }

782 
YY_BREAK


784 
YY_RULE_SETUP


786 {  
WHILE
; }

787 
YY_BREAK


789 
YY_RULE_SETUP


791 {  
RETURN
; }

792 
YY_BREAK


794 
YY_RULE_SETUP


796 {  
VOID
; }

797 
YY_BREAK


799 
YY_RULE_SETUP


801 {  
PLUS
; }

802 
YY_BREAK


804 
YY_RULE_SETUP


806 {  
MINUS
; }

807 
YY_BREAK


809 
YY_RULE_SETUP


811 {  
TIMES
; }

812 
YY_BREAK


814 
YY_RULE_SETUP


816 {  
OVER
; }

817 
YY_BREAK


819 
YY_RULE_SETUP


821 {  
LT
; }

822 
YY_BREAK


824 
YY_RULE_SETUP


826 {  
LE
; }

827 
YY_BREAK


829 
YY_RULE_SETUP


831 {  
GT
; }

832 
YY_BREAK


834 
YY_RULE_SETUP


836 {  
GE
; }

837 
YY_BREAK


839 
YY_RULE_SETUP


841 {  
EQ
; }

842 
YY_BREAK


844 
YY_RULE_SETUP


846 {  
NE
; }

847 
YY_BREAK


849 
YY_RULE_SETUP


851 {  
ASSIGN
; }

852 
YY_BREAK


854 
YY_RULE_SETUP


856 {  
SEMI
; }

857 
YY_BREAK


859 
YY_RULE_SETUP


861 {  
COMMA
; }

862 
YY_BREAK


864 
YY_RULE_SETUP


866 {  
LPAREN
; }

867 
YY_BREAK


869 
YY_RULE_SETUP


871 {  
RPAREN
; }

872 
YY_BREAK


874 
YY_RULE_SETUP


876 {  
LBRACE
; }

877 
YY_BREAK


879 
YY_RULE_SETUP


881 {  
RBRACE
; }

882 
YY_BREAK


884 
YY_RULE_SETUP


886 {  
LCURLY
; }

887 
YY_BREAK


889 
YY_RULE_SETUP


891 {  
RCURLY
; }

892 
YY_BREAK


894 
YY_RULE_SETUP


896 {  
NUM
; }

897 
YY_BREAK


899 
YY_RULE_SETUP


901 {  
ID
; }

902 
YY_BREAK


905 
YY_RULE_SETUP


907 { 
löío
++; }

908 
YY_BREAK


910 
YY_RULE_SETUP


913 
YY_BREAK


915 
YY_RULE_SETUP


917 { 
ERROR
; }

918 
YY_BREAK


919 
YY_STATE_EOF
(
INITIAL
):

921 { 
ENDFILE
; }

922 
YY_BREAK


924 
YY_RULE_SETUP


927 
cuºít
;

928 
	g√xt
;

930 
	gcuºít
 = 
öput
();

932 i‡(
	gcuºít
 == '*') {

933 
√xt
=
öput
();

934 if(
	g√xt
=='/') ;

935 
u≈ut
(
√xt
);

938 i‡(
	gcuºít
 =0 || 
cuºít
 =
EOF
) {

939  
ENDFILE
;

942 i‡(
	gcuºít
 == '\n') {

943 
löío
++;

947 
YY_BREAK


949 
YY_RULE_SETUP


951 
ECHO
;

952 
	gYY_BREAK


955 
	gYY_END_OF_BUFFER
:

958 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

961 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

962 
YY_RESTORE_YY_MORE_OFFSET


964 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

975 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

976 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
yyö
;

977 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

987 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

989 
yy_°©e_ty≥
 
yy_√xt_°©e
;

991 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

993 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1004 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

1006 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1008 i‡–
	gyy_√xt_°©e
 )

1011 
	gyy_˝
 = ++(
yy_c_buf_p
);

1012 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1013 
	gyy_m©ch
;

1018 
	gyy_˝
 = (
yy_c_buf_p
);

1019 
	gyy_föd_a˘i⁄
;

1023  
yy_gë_√xt_buf„r
( ) )

1025 
	gEOB_ACT_END_OF_FILE
:

1027 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

1029 i‡–
yywøp
( ) )

1040 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1042 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1043 
	gdo_a˘i⁄
;

1048 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

1049 
	gYY_NEW_FILE
;

1054 
	gEOB_ACT_CONTINUE_SCAN
:

1055 (
yy_c_buf_p
) =

1056 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

1058 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1060 
	gyy_˝
 = (
yy_c_buf_p
);

1061 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1062 
	gyy_m©ch
;

1064 
	gEOB_ACT_LAST_MATCH
:

1065 (
yy_c_buf_p
) =

1066 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

1068 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

1070 
	gyy_˝
 = (
yy_c_buf_p
);

1071 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

1072 
	gyy_föd_a˘i⁄
;

1078 
YY_FATAL_ERROR
(

1092 
	$yy_gë_√xt_buf„r
 ()

1094 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1095 *
sour˚
 = (
yyãxt_±r
);

1096 
numbî_to_move
, 
i
;

1097 
ªt_vÆ
;

1099 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

1100 
	`YY_FATAL_ERROR
(

1103 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1105 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

1110  
EOB_ACT_END_OF_FILE
;

1118  
EOB_ACT_LAST_MATCH
;

1125 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
) - 1);

1127  
i
 = 0; i < 
numbî_to_move
; ++i )

1128 *(
de°
++Ë*(
sour˚
++);

1130 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1134 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

1138 
num_to_ªad
 =

1139 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1141  
num_to_ªad
 <= 0 )

1145 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER_LVALUE
;

1147 
yy_c_buf_p_off£t
 =

1148 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

1150 i‡–
b
->
yy_is_our_buf„r
 )

1152 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1154 i‡–
√w_size
 <= 0 )

1155 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1157 
b
->
yy_buf_size
 *= 2;

1159 
b
->
yy_ch_buf
 = (*)

1161 
	`yyªÆloc
–(*Ë
b
->
yy_ch_buf
,

1162 (
yy_size_t
Ë(
b
->
yy_buf_size
 + 2) );

1166 
b
->
yy_ch_buf
 = 
NULL
;

1168 i‡–! 
b
->
yy_ch_buf
 )

1169 
	`YY_FATAL_ERROR
(

1172 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1174 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1175 
numbî_to_move
 - 1;

1179 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1180 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1183 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1184 (
yy_n_ch¨s
), 
num_to_ªad
 );

1186 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1189 i‡–(
yy_n_ch¨s
) == 0 )

1191 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1193 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1194 
	`yyª°¨t
–
yyö
 );

1199 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1200 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1201 
YY_BUFFER_EOF_PENDING
;

1206 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1208 i‡(((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1210 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

1211 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`yyªÆloc
(

1212 (*Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
, (
yy_size_t
Ë
√w_size
 );

1213 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1214 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1216 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 = (Ë(
√w_size
 - 2);

1219 (
yy_n_ch¨s
Ë+
numbî_to_move
;

1220 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

1221 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

1223 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1225  
ªt_vÆ
;

1226 
	}
}

1230 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

1232 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1233 *
yy_˝
;

1235 
yy_cuºít_°©e
 = (
yy_°¨t
);

1237  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

1239 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1240 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1242 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1243 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1245  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1247 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1248 i‡–
yy_cuºít_°©e
 >= 57 )

1249 
yy_c
 = 
yy_mëa
[yy_c];

1251 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + 
yy_c
];

1254  
yy_cuºít_°©e
;

1255 
	}
}

1262 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

1264 
yy_is_jam
;

1265 *
yy_˝
 = (
yy_c_buf_p
);

1267 
YY_CHAR
 
yy_c
 = 1;

1268 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1270 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1271 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1273  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1275 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1276 i‡–
yy_cuºít_°©e
 >= 57 )

1277 
yy_c
 = 
yy_mëa
[yy_c];

1279 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + 
yy_c
];

1280 
yy_is_jam
 = (
yy_cuºít_°©e
 == 56);

1282  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1283 
	}
}

1285 #i‚de‡
YY_NO_UNPUT


1287 
	$yyu≈ut
 (
c
, * 
yy_bp
 )

1289 *
yy_˝
;

1291 
yy_˝
 = (
yy_c_buf_p
);

1294 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1296 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1299 
numbî_to_move
 = (
yy_n_ch¨s
) + 2;

1300 *
de°
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[

1301 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 + 2];

1302 *
sour˚
 =

1303 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
];

1305  
sour˚
 > 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1306 *--
de°
 = *--
sour˚
;

1308 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

1309 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

1310 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 =

1311 (
yy_n_ch¨s
Ë(Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
;

1313 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

1314 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

1317 *--
yy_˝
 = (Ë
c
;

1319 (
yyãxt_±r
Ë
yy_bp
;

1320 (
yy_hﬁd_ch¨
Ë*
yy_˝
;

1321 (
yy_c_buf_p
Ë
yy_˝
;

1322 
	}
}

1326 #i‚de‡
YY_NO_INPUT


1327 #ifde‡
__˝lu•lus


1328 
	$yyöput
 ()

1330 
	$öput
 ()

1334 
c
;

1336 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1338 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

1344 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

1346 *(
yy_c_buf_p
) = '\0';

1350 
off£t
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
));

1351 ++(
yy_c_buf_p
);

1353  
	`yy_gë_√xt_buf„r
( ) )

1355 
EOB_ACT_LAST_MATCH
:

1367 
	`yyª°¨t
–
yyö
 );

1371 
EOB_ACT_END_OF_FILE
:

1373 i‡–
	`yywøp
( ) )

1376 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

1377 
YY_NEW_FILE
;

1378 #ifde‡
__˝lu•lus


1379  
	`yyöput
();

1381  
	`öput
();

1385 
EOB_ACT_CONTINUE_SCAN
:

1386 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

1392 
c
 = *(*Ë(
yy_c_buf_p
);

1393 *(
yy_c_buf_p
) = '\0';

1394 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

1396  
c
;

1397 
	}
}

1405 
	$yyª°¨t
 (
FILE
 * 
öput_fûe
 )

1408 i‡–! 
YY_CURRENT_BUFFER
 ){

1409 
	`yyísuª_buf„r_°ack
 ();

1410 
YY_CURRENT_BUFFER_LVALUE
 =

1411 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

1414 
	`yy_öô_buf„r
–
YY_CURRENT_BUFFER
, 
öput_fûe
 );

1415 
	`yy_lﬂd_buf„r_°©e
( );

1416 
	}
}

1422 
	$yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1430 
	`yyísuª_buf„r_°ack
 ();

1431 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1434 i‡–
YY_CURRENT_BUFFER
 )

1437 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1438 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1439 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1442 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1443 
	`yy_lﬂd_buf„r_°©e
( );

1450 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1451 
	}
}

1453 
	$yy_lﬂd_buf„r_°©e
 ()

1455 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1456 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1457 
yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1458 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

1459 
	}
}

1467 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

1469 
YY_BUFFER_STATE
 
b
;

1471 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
––
yy_buf„r_°©e
 ) );

1472 i‡–! 
b
 )

1473 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1475 
b
->
yy_buf_size
 = 
size
;

1480 
b
->
yy_ch_buf
 = (*Ë
	`yyÆloc
–(
yy_size_t
Ë(b->
yy_buf_size
 + 2) );

1481 i‡–! 
b
->
yy_ch_buf
 )

1482 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1484 
b
->
yy_is_our_buf„r
 = 1;

1486 
	`yy_öô_buf„r
–
b
, 
fûe
 );

1488  
b
;

1489 
	}
}

1495 
	$yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1498 i‡–! 
b
 )

1501 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1502 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1504 i‡–
b
->
yy_is_our_buf„r
 )

1505 
	`yy‰ì
–(*Ë
b
->
yy_ch_buf
 );

1507 
	`yy‰ì
–(*Ë
b
 );

1508 
	}
}

1514 
	$yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

1517 
€ºno
 = 
î∫o
;

1519 
	`yy_Êush_buf„r
–
b
 );

1521 
b
->
yy_öput_fûe
 = 
fûe
;

1522 
b
->
yy_fûl_buf„r
 = 1;

1528 i‡(
b
 !
YY_CURRENT_BUFFER
){

1529 
b
->
yy_bs_löío
 = 1;

1530 
b
->
yy_bs_cﬁumn
 = 0;

1533 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

1535 
î∫o
 = 
€ºno
;

1536 
	}
}

1542 
	$yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

1544 i‡–! 
b
 )

1547 
b
->
yy_n_ch¨s
 = 0;

1553 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

1554 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

1556 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

1558 
b
->
yy_©_bﬁ
 = 1;

1559 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1561 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1562 
	`yy_lﬂd_buf„r_°©e
( );

1563 
	}
}

1571 
	$yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

1573 i‡(
√w_buf„r
 =
NULL
)

1576 
	`yyísuª_buf„r_°ack
();

1579 i‡–
YY_CURRENT_BUFFER
 )

1582 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

1583 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

1584 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

1588 i‡(
YY_CURRENT_BUFFER
)

1589 (
yy_buf„r_°ack_t›
)++;

1590 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1593 
	`yy_lﬂd_buf„r_°©e
( );

1594 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1595 
	}
}

1601 
	$yyp›_buf„r_°©e
 ()

1603 i‡(!
YY_CURRENT_BUFFER
)

1606 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

1607 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1608 i‡((
yy_buf„r_°ack_t›
) > 0)

1609 --(
yy_buf„r_°ack_t›
);

1611 i‡(
YY_CURRENT_BUFFER
) {

1612 
	`yy_lﬂd_buf„r_°©e
( );

1613 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

1615 
	}
}

1620 
	$yyísuª_buf„r_°ack
 ()

1622 
yy_size_t
 
num_to_Æloc
;

1624 i‡(!(
yy_buf„r_°ack
)) {

1630 
num_to_Æloc
 = 1;

1631 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyÆloc


1632 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1634 i‡–! (
yy_buf„r_°ack
) )

1635 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

1637 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

1639 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1640 (
yy_buf„r_°ack_t›
) = 0;

1644 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

1647 
yy_size_t
 
grow_size
 = 8 ;

1649 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

1650 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyªÆloc


1651 ((
yy_buf„r_°ack
),

1652 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

1654 i‡–! (
yy_buf„r_°ack
) )

1655 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

1658 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

1659 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

1661 
	}
}

1669 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

1671 
YY_BUFFER_STATE
 
b
;

1673 i‡–
size
 < 2 ||

1674 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

1675 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

1677  
NULL
;

1679 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
––
yy_buf„r_°©e
 ) );

1680 i‡–! 
b
 )

1681 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

1683 
b
->
yy_buf_size
 = (Ë(
size
 - 2);

1684 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

1685 
b
->
yy_is_our_buf„r
 = 0;

1686 
b
->
yy_öput_fûe
 = 
NULL
;

1687 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

1688 
b
->
yy_is_öãø˘ive
 = 0;

1689 
b
->
yy_©_bﬁ
 = 1;

1690 
b
->
yy_fûl_buf„r
 = 0;

1691 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

1693 
	`yy_swôch_to_buf„r
–
b
 );

1695  
b
;

1696 
	}
}

1706 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
 (c⁄° * 
yy°r
 )

1709  
	`yy_sˇn_byãs
–
yy°r
, (Ë
	`°æí
(yystr) );

1710 
	}
}

1719 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
 (c⁄° * 
yybyãs
, 
_yybyãs_Àn
 )

1721 
YY_BUFFER_STATE
 
b
;

1722 *
buf
;

1723 
yy_size_t
 
n
;

1724 
i
;

1727 
n
 = (
yy_size_t
Ë(
_yybyãs_Àn
 + 2);

1728 
buf
 = (*Ë
	`yyÆloc
–
n
 );

1729 i‡–! 
buf
 )

1730 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

1732  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

1733 
buf
[
i
] = 
yybyãs
[i];

1735 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

1737 
b
 = 
	`yy_sˇn_buf„r
–
buf
, 
n
 );

1738 i‡–! 
b
 )

1739 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

1744 
b
->
yy_is_our_buf„r
 = 1;

1746  
b
;

1747 
	}
}

1749 #i‚de‡
YY_EXIT_FAILURE


1750 
	#YY_EXIT_FAILURE
 2

	)

1753 
yyn‹ëu∫
 
	$yy_Áèl_îr‹
 (c⁄° * 
msg
 )

1755 
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

1756 
	`exô
–
YY_EXIT_FAILURE
 );

1757 
	}
}

1761 #unde‡
yyÀss


1762 
	#yyÀss
(
n
) \

1766 
yyÀss_ma¸o_¨g
 = (
n
); \

1767 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

1768 
yyãxt
[
yyÀng
] = (
yy_hﬁd_ch¨
); \

1769 (
yy_c_buf_p
Ë
yyãxt
 + 
yyÀss_ma¸o_¨g
; \

1770 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

1771 *(
yy_c_buf_p
) = '\0'; \

1772 
yyÀng
 = 
yyÀss_ma¸o_¨g
; \

1774  0 )

	)

1781 
	$yygë_löío
 ()

1784  
yylöío
;

1785 
	}
}

1790 
FILE
 *
	$yygë_ö
 ()

1792  
yyö
;

1793 
	}
}

1798 
FILE
 *
	$yygë_out
 ()

1800  
yyout
;

1801 
	}
}

1806 
	$yygë_Àng
 ()

1808  
yyÀng
;

1809 
	}
}

1815 *
	$yygë_ãxt
 ()

1817  
yyãxt
;

1818 
	}
}

1824 
	$yy£t_löío
 (
_löe_numbî
 )

1827 
yylöío
 = 
_löe_numbî
;

1828 
	}
}

1836 
	$yy£t_ö
 (
FILE
 * 
_ö_°r
 )

1838 
yyö
 = 
_ö_°r
 ;

1839 
	}
}

1841 
	$yy£t_out
 (
FILE
 * 
_out_°r
 )

1843 
yyout
 = 
_out_°r
 ;

1844 
	}
}

1846 
	$yygë_debug
 ()

1848  
yy_Êex_debug
;

1849 
	}
}

1851 
	$yy£t_debug
 (
_bdebug
 )

1853 
yy_Êex_debug
 = 
_bdebug
 ;

1854 
	}
}

1856 
	$yy_öô_globÆs
 ()

1862 (
yy_buf„r_°ack
Ë
NULL
;

1863 (
yy_buf„r_°ack_t›
) = 0;

1864 (
yy_buf„r_°ack_max
) = 0;

1865 (
yy_c_buf_p
Ë
NULL
;

1866 (
yy_öô
) = 0;

1867 (
yy_°¨t
) = 0;

1870 #ifde‡
YY_STDINIT


1871 
yyö
 = 
°dö
;

1872 
yyout
 = 
°dout
;

1874 
yyö
 = 
NULL
;

1875 
yyout
 = 
NULL
;

1882 
	}
}

1885 
	$yyÀx_de°roy
 ()

1889 
YY_CURRENT_BUFFER
){

1890 
	`yy_dñëe_buf„r
–
YY_CURRENT_BUFFER
 );

1891 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

1892 
	`yyp›_buf„r_°©e
();

1896 
	`yy‰ì
((
yy_buf„r_°ack
) );

1897 (
yy_buf„r_°ack
Ë
NULL
;

1901 
	`yy_öô_globÆs
( );

1904 
	}
}

1910 #i‚de‡
yyãxt_±r


1911 
	$yy_Êex_°∫˝y
 (* 
s1
, c⁄° * 
s2
, 
n
 )

1914 
i
;

1915  
i
 = 0; i < 
n
; ++i )

1916 
s1
[
i
] = 
s2
[i];

1917 
	}
}

1920 #ifde‡
YY_NEED_STRLEN


1921 
	$yy_Êex_°æí
 (c⁄° * 
s
 )

1923 
n
;

1924  
n
 = 0; 
s
[n]; ++n )

1927  
n
;

1928 
	}
}

1931 *
	$yyÆloc
 (
yy_size_t
 
size
 )

1933  
	`mÆloc
(
size
);

1934 
	}
}

1936 *
	$yyªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

1946  
	`ªÆloc
(
±r
, 
size
);

1947 
	}
}

1949 
	$yy‰ì
 (* 
±r
 )

1951 
	`‰ì
–(*Ë
±r
 );

1952 
	}
}

1954 
	#YYTABLES_NAME
 "yyèbÀs"

	)

1959 
TokíTy≥
 
	$gëTokí
()

1960 { 
fú°Time
 = 
TRUE
;

1961 
TokíTy≥
 
cuºítTokí
;

1962 i‡(
fú°Time
)

1963 { 
fú°Time
 = 
FALSE
;

1964 
löío
++;

1965 
yyö
 = 
sour˚
;

1966 
yyout
 = 
li°ög
;

1968 
cuºítTokí
 = 
	`yyÀx
();

1969 
	`°∫˝y
(
tokíSåög
,
yyãxt
,
MAXTOKENLEN
);

1970 i‡(
Tø˚Sˇn
) {

1971 
	`Ârötf
(
li°ög
,"\t%d: ",
löío
);

1972 
	`¥ötTokí
(
cuºítTokí
,
tokíSåög
);

1974  
cuºítTokí
;

1975 
	}
}

	@main.c

8 
	~"globÆs.h
"

11 
	#NO_PARSE
 
FALSE


	)

13 
	#NO_ANALYZE
 
TRUE


	)

18 
	#NO_CODE
 
FALSE


	)

20 
	~"utû.h
"

21 #i‡
NO_PARSE


22 
	~"sˇn.h
"

24 
	~"∑r£.h
"

25 #i‡!
NO_ANALYZE


26 
	~"™Æyze.h
"

27 #i‡!
NO_CODE


28 
	~"cgí.h
"

34 
	glöío
 = 0;

35 
FILE
 * 
	gsour˚
;

36 
FILE
 * 
	gli°ög
;

37 
FILE
 * 
	gcode
;

40 
	gEchoSour˚
 = 
FALSE
;

41 
	gTø˚Sˇn
 = 
FALSE
;

42 
	gTø˚P¨£
 = 
TRUE
;

43 
	gTø˚A«lyze
 = 
FALSE
;

44 
	gTø˚Code
 = 
FALSE
;

46 
	gEº‹
 = 
FALSE
;

48 
	$maö
–
¨gc
, * 
¨gv
[] )

49 { 
TªeNode
 * 
sy¡axTªe
;

50 
pgm
[120];

51 i‡(
¨gc
 != 2)

52 { 
	`Ârötf
(
°dîr
,"ußge: %†<fûíame>\n",
¨gv
[0]);

53 
	`exô
(1);

55 
	`°r˝y
(
pgm
,
¨gv
[1]) ;

56 i‡(
	`°rchr
 (
pgm
, '.'Ë=
NULL
)

57 
	`°rˇt
(
pgm
,".tny");

58 
sour˚
 = 
	`f›í
(
pgm
,"r");

59 i‡(
sour˚
==
NULL
)

60 { 
	`Ârötf
(
°dîr
,"Fûê%†nŸ found\n",
pgm
);

61 
	`exô
(1);

63 
li°ög
 = 
°dout
;

64 
	`Ârötf
(
li°ög
,"\nTINY COMPILATION: %s\n",
pgm
);

65 #i‡
NO_PARSE


66 
	`gëTokí
()!=
ENDFILE
);

68 
sy¡axTªe
 = 
	`∑r£
();

69 i‡(
Tø˚P¨£
) {

70 
	`Ârötf
(
li°ög
,"\nSyntaxÅree:\n");

71 
	`¥ötTªe
(
sy¡axTªe
);

73 #i‡!
NO_ANALYZE


74 i‡(! 
Eº‹
)

75 { i‡(
Tø˚A«lyze
Ë
	`Ârötf
(
li°ög
,"\nBuilding Symbol Table...\n");

76 
	`buûdSymèb
(
sy¡axTªe
);

77 i‡(
Tø˚A«lyze
Ë
	`Ârötf
(
li°ög
,"\nChecking Types...\n");

78 
	`ty≥Check
(
sy¡axTªe
);

79 i‡(
Tø˚A«lyze
Ë
	`Ârötf
(
li°ög
,"\nType Checking Finished\n");

81 #i‡!
NO_CODE


82 i‡(! 
Eº‹
)

83 { * 
codefûe
;

84 
‚Àn
 = 
	`°rc•n
(
pgm
,".");

85 
codefûe
 = (*Ë
	`ˇŒoc
(
‚Àn
+4, ());

86 
	`°∫˝y
(
codefûe
,
pgm
,
‚Àn
);

87 
	`°rˇt
(
codefûe
,".tm");

88 
code
 = 
	`f›í
(
codefûe
,"w");

89 i‡(
code
 =
NULL
)

90 { 
	`¥ötf
("U«bÀÅÿ›í %s\n",
codefûe
);

91 
	`exô
(1);

93 
	`codeGí
(
sy¡axTªe
,
codefûe
);

94 
	`f˛o£
(
code
);

99 
	`f˛o£
(
sour˚
);

101 
	}
}

	@parse.c

8 
	~"globÆs.h
"

9 
	~"utû.h
"

10 
	~"sˇn.h
"

11 
	~"∑r£.h
"

13 
TokíTy≥
 
	gtokí
;

16 
TªeNode
 * 
°mt_£quí˚
();

17 
TªeNode
 * 
°©emít
();

18 
TªeNode
 * 
if_°mt
();

19 
TªeNode
 * 
ª≥©_°mt
();

20 
TªeNode
 * 
assign_°mt
();

21 
TªeNode
 * 
ªad_°mt
();

22 
TªeNode
 * 
wrôe_°mt
();

23 
TªeNode
 * 
exp
();

24 
TªeNode
 * 
sim∂e_exp
();

25 
TªeNode
 * 
ãrm
();

26 
TªeNode
 * 
Á˘‹
();

28 
	$sy¡axEº‹
(* 
mesßge
)

29 { 
	`Ârötf
(
li°ög
,"\n>>> ");

30 
	`Ârötf
(
li°ög
,"Sy¡axÉº‹áàlöê%d: %s",
löío
,
mesßge
);

31 
Eº‹
 = 
TRUE
;

32 
	}
}

34 
	$m©ch
(
TokíTy≥
 
ex≥˘ed
)

35 { i‡(
tokí
 =
ex≥˘ed
Ëtokí = 
	`gëTokí
();

37 
	`sy¡axEº‹
("unexpectedÅoken -> ");

38 
	`¥ötTokí
(
tokí
,
tokíSåög
);

39 
	`Ârötf
(
li°ög
," ");

41 
	}
}

43 
TªeNode
 * 
	$°mt_£quí˚
()

44 { 
TªeNode
 * 
t
 = 
	`°©emít
();

45 
TªeNode
 * 
p
 = 
t
;

46 (
tokí
!=
ENDFILE
Ë&& (tokí!=
END
) &&

47 (
tokí
!=
ELSE
Ë&& (tokí!=
UNTIL
))

48 { 
TªeNode
 * 
q
;

49 
	`m©ch
(
SEMI
);

50 
q
 = 
	`°©emít
();

51 i‡(
q
!=
NULL
) {

52 i‡(
t
==
NULL
Ëà
p
 = 
q
;

54 { 
p
->
siblög
 = 
q
;

55 
p
 = 
q
;

59  
t
;

60 
	}
}

62 
TªeNode
 * 
	$°©emít
()

63 { 
TªeNode
 * 
t
 = 
NULL
;

64 
tokí
) {

65 
IF
 : 
t
 = 
	`if_°mt
(); ;

66 
REPEAT
 : 
t
 = 
	`ª≥©_°mt
(); ;

67 
ID
 : 
t
 = 
	`assign_°mt
(); ;

68 
READ
 : 
t
 = 
	`ªad_°mt
(); ;

69 
WRITE
 : 
t
 = 
	`wrôe_°mt
(); ;

70  : 
	`sy¡axEº‹
("unexpectedÅoken -> ");

71 
	`¥ötTokí
(
tokí
,
tokíSåög
);

72 
tokí
 = 
	`gëTokí
();

75  
t
;

76 
	}
}

78 
TªeNode
 * 
	$if_°mt
()

79 { 
TªeNode
 * 
t
 = 
	`√wStmtNode
(
IfK
);

80 
	`m©ch
(
IF
);

81 i‡(
t
!=
NULL
Ët->
chûd
[0] = 
	`exp
();

82 
	`m©ch
(
THEN
);

83 i‡(
t
!=
NULL
Ët->
chûd
[1] = 
	`°mt_£quí˚
();

84 i‡(
tokí
==
ELSE
) {

85 
	`m©ch
(
ELSE
);

86 i‡(
t
!=
NULL
Ët->
chûd
[2] = 
	`°mt_£quí˚
();

88 
	`m©ch
(
END
);

89  
t
;

90 
	}
}

92 
TªeNode
 * 
	$ª≥©_°mt
()

93 { 
TªeNode
 * 
t
 = 
	`√wStmtNode
(
RïótK
);

94 
	`m©ch
(
REPEAT
);

95 i‡(
t
!=
NULL
Ët->
chûd
[0] = 
	`°mt_£quí˚
();

96 
	`m©ch
(
UNTIL
);

97 i‡(
t
!=
NULL
Ët->
chûd
[1] = 
	`exp
();

98  
t
;

99 
	}
}

101 
TªeNode
 * 
	$assign_°mt
()

102 { 
TªeNode
 * 
t
 = 
	`√wStmtNode
(
AssignK
);

103 i‡((
t
!=
NULL
Ë&& (
tokí
==
ID
))

104 
t
->
©å
.
«me
 = 
	`c›ySåög
(
tokíSåög
);

105 
	`m©ch
(
ID
);

106 
	`m©ch
(
ASSIGN
);

107 i‡(
t
!=
NULL
Ët->
chûd
[0] = 
	`exp
();

108  
t
;

109 
	}
}

111 
TªeNode
 * 
	$ªad_°mt
()

112 { 
TªeNode
 * 
t
 = 
	`√wStmtNode
(
RódK
);

113 
	`m©ch
(
READ
);

114 i‡((
t
!=
NULL
Ë&& (
tokí
==
ID
))

115 
t
->
©å
.
«me
 = 
	`c›ySåög
(
tokíSåög
);

116 
	`m©ch
(
ID
);

117  
t
;

118 
	}
}

120 
TªeNode
 * 
	$wrôe_°mt
()

121 { 
TªeNode
 * 
t
 = 
	`√wStmtNode
(
WrôeK
);

122 
	`m©ch
(
WRITE
);

123 i‡(
t
!=
NULL
Ët->
chûd
[0] = 
	`exp
();

124  
t
;

125 
	}
}

127 
TªeNode
 * 
	$exp
()

128 { 
TªeNode
 * 
t
 = 
	`sim∂e_exp
();

129 i‡((
tokí
==
LT
)||—okí==
EQ
)) {

130 
TªeNode
 * 
p
 = 
	`√wExpNode
(
OpK
);

131 i‡(
p
!=
NULL
) {

132 
p
->
chûd
[0] = 
t
;

133 
p
->
©å
.
›
 = 
tokí
;

134 
t
 = 
p
;

136 
	`m©ch
(
tokí
);

137 i‡(
t
!=
NULL
)

138 
t
->
chûd
[1] = 
	`sim∂e_exp
();

140  
t
;

141 
	}
}

143 
TªeNode
 * 
	$sim∂e_exp
()

144 { 
TªeNode
 * 
t
 = 
	`ãrm
();

145 (
tokí
==
PLUS
)||—okí==
MINUS
))

146 { 
TªeNode
 * 
p
 = 
	`√wExpNode
(
OpK
);

147 i‡(
p
!=
NULL
) {

148 
p
->
chûd
[0] = 
t
;

149 
p
->
©å
.
›
 = 
tokí
;

150 
t
 = 
p
;

151 
	`m©ch
(
tokí
);

152 
t
->
chûd
[1] = 
	`ãrm
();

155  
t
;

156 
	}
}

158 
TªeNode
 * 
	$ãrm
()

159 { 
TªeNode
 * 
t
 = 
	`Á˘‹
();

160 (
tokí
==
TIMES
)||—okí==
OVER
))

161 { 
TªeNode
 * 
p
 = 
	`√wExpNode
(
OpK
);

162 i‡(
p
!=
NULL
) {

163 
p
->
chûd
[0] = 
t
;

164 
p
->
©å
.
›
 = 
tokí
;

165 
t
 = 
p
;

166 
	`m©ch
(
tokí
);

167 
p
->
chûd
[1] = 
	`Á˘‹
();

170  
t
;

171 
	}
}

173 
TªeNode
 * 
	$Á˘‹
()

174 { 
TªeNode
 * 
t
 = 
NULL
;

175 
tokí
) {

176 
NUM
 :

177 
t
 = 
	`√wExpNode
(
C⁄°K
);

178 i‡((
t
!=
NULL
Ë&& (
tokí
==
NUM
))

179 
t
->
©å
.
vÆ
 = 
	`©oi
(
tokíSåög
);

180 
	`m©ch
(
NUM
);

182 
ID
 :

183 
t
 = 
	`√wExpNode
(
IdK
);

184 i‡((
t
!=
NULL
Ë&& (
tokí
==
ID
))

185 
t
->
©å
.
«me
 = 
	`c›ySåög
(
tokíSåög
);

186 
	`m©ch
(
ID
);

188 
LPAREN
 :

189 
	`m©ch
(
LPAREN
);

190 
t
 = 
	`exp
();

191 
	`m©ch
(
RPAREN
);

194 
	`sy¡axEº‹
("unexpectedÅoken -> ");

195 
	`¥ötTokí
(
tokí
,
tokíSåög
);

196 
tokí
 = 
	`gëTokí
();

199  
t
;

200 
	}
}

208 
TªeNode
 * 
	$∑r£
()

209 { 
TªeNode
 * 
t
;

210 
tokí
 = 
	`gëTokí
();

211 
t
 = 
	`°mt_£quí˚
();

212 i‡(
tokí
!=
ENDFILE
)

213 
	`sy¡axEº‹
("CodeÉnds before file\n");

214  
t
;

215 
	}
}

	@parse.h

8 #i‚de‡
_PARSE_H_


9 
	#_PARSE_H_


	)

14 
TªeNode
 * 
∑r£
();

	@scan.c

8 
	~"globÆs.h
"

9 
	~"utû.h
"

10 
	~"sˇn.h
"

14 { 
	mSTART
,
	mINEQ
,
	mINCOMMENT
,
	mINNE
,
	mINLT
,
	mINGT
,
	mINNUM
,
	mINID
,
	mDONE
,
	mINCOMMENT_
 }

15 
	tSèãTy≥
;

18 
	gtokíSåög
[
MAXTOKENLEN
+1];

22 
	#BUFLEN
 256

	)

24 
	glöeBuf
[
BUFLEN
];

25 
	glöïos
 = 0;

26 
	gbufsize
 = 0;

27 
	gEOF_Êag
 = 
FALSE
;

33 
	$gëNextCh¨
()

34 { i‡(!(
löïos
 < 
bufsize
))

35 { 
löío
++;

36 i‡(
	`fgës
(
löeBuf
,
BUFLEN
-1,
sour˚
))

37 { i‡(
EchoSour˚
Ë
	`Ârötf
(
li°ög
,"%4d: %s",
löío
,
löeBuf
);

38 
bufsize
 = 
	`°æí
(
löeBuf
);

39 
löïos
 = 0;

40  
löeBuf
[
löïos
++];

43 { 
EOF_Êag
 = 
TRUE
;

44  
EOF
;

47  
löeBuf
[
löïos
++];

48 
	}
}

53 
	$ungëNextCh¨
()

54 { i‡(!
EOF_Êag
Ë
löïos
-- ;
	}
}

58 { * 
	m°r
;

59 
TokíTy≥
 
	mtok
;

60 } 
	gª£rvedW‹ds
[
MAXRESERVED
]

61 {{"if",
IF
},{"ñ£",
ELSE
},{"whûe",
WHILE
},

62 {"ªtu∫",
RETURN
},{"öt",
INT
},{"void",
VOID
},};

66 
TokíTy≥
 
	$ª£rvedLookup
 (* 
s
)

67 { 
i
;

68 
i
=0;i<
MAXRESERVED
;i++)

69 i‡(!
	`°rcmp
(
s
,
ª£rvedW‹ds
[
i
].
°r
))

70  
ª£rvedW‹ds
[
i
].
tok
;

71  
ID
;

72 
	}
}

80 
TokíTy≥
 
	$gëTokí
()

82 
tokíSåögIndex
 = 0;

84 
TokíTy≥
 
cuºítTokí
;

86 
SèãTy≥
 
°©e
 = 
START
;

88 
ßve
;

89 
°©e
 !
DONE
)

90 { 
c
 = 
	`gëNextCh¨
();

91 
√xt
;

92 
ßve
 = 
TRUE
;

93 
°©e
)

94 { 
START
:

95 i‡(
	`isdigô
(
c
))

96 
°©e
 = 
INNUM
;

97 i‡(
	`ißÕha
(
c
))

98 
°©e
 = 
INID
;

99 i‡(
c
=='!')

100 
°©e
 = 
INNE
;

101 i‡(
c
=='>')

102 
°©e
 = 
INGT
;

103 i‡(
c
=='<')

104 
°©e
 = 
INLT
;

105 i‡(
c
 == '=')

106 
°©e
 = 
INEQ
;

108 i‡(
c
 == '*') {

109 
°©e
 = 
DONE
;

110 
cuºítTokí
 = 
TIMES
;

112 i‡((
c
 == ' ') || (c == '\t') || (c == '\n'))

113 
ßve
 = 
FALSE
;

115 i‡(
c
 == '/')

117 
√xt
=
	`gëNextCh¨
();

118 if(
√xt
=='*'){

120 
ßve
 = 
FALSE
;

121 
°©e
 = 
INCOMMENT
;

124 
	`ungëNextCh¨
();

125 
°©e
 = 
DONE
;

126 
cuºítTokí
 = 
OVER
;

133 
°©e
 = 
DONE
;

134 
c
)

135 { 
EOF
:

136 
ßve
 = 
FALSE
;

137 
cuºítTokí
 = 
ENDFILE
;

141 
cuºítTokí
 = 
PLUS
;

144 
cuºítTokí
 = 
MINUS
;

147 
cuºítTokí
 = 
LPAREN
;

150 
cuºítTokí
 = 
RPAREN
;

153 
cuºítTokí
 = 
LCURLY
;

156 
cuºítTokí
 = 
RCURLY
;

159 
cuºítTokí
 = 
LBRACE
;

162 
cuºítTokí
 = 
RBRACE
;

165 
cuºítTokí
 = 
SEMI
;

168 
cuºítTokí
 = 
COMMA
;

171 
cuºítTokí
 = 
ERROR
;

177 
INCOMMENT
:

178 
ßve
 = 
FALSE
;

179 i‡(
c
 =
EOF
)

180 { 
°©e
=
DONE
;

181 
cuºítTokí
 = 
ENDFILE
;

183 i‡(
c
 == '*'){

184 
°©e
 = 
INCOMMENT_
;

187 
INCOMMENT_
:

188 
ßve
 = 
FALSE
;

189 i‡(
c
 ='/'){ 
°©e
 = 
START
; }

190 i‡(
c
 =
EOF
) {

191 
°©e
 = 
DONE
;

192 
cuºítTokí
 = 
ENDFILE
;

194 i‡(
c
=='*'Ë{
°©e
 =
INCOMMENT_
;}

195 {
°©e
 = 
INCOMMENT
;}

197 
INEQ
:

198 
°©e
 = 
DONE
;

199 i‡(
c
 == '=')

200 
cuºítTokí
 = 
EQ
;

201 i‡(
c
 =
EOF
) {

202 
°©e
 = 
DONE
;

203 
cuºítTokí
 = 
ENDFILE
;

207 
	`ungëNextCh¨
();

208 
cuºítTokí
 = 
ASSIGN
;

212 
INGT
:

213 
°©e
 = 
DONE
;

214 i‡(
c
 == '=')

215 
cuºítTokí
 = 
GE
;

216 i‡(
c
 =
EOF
) {

217 
°©e
 = 
DONE
;

218 
cuºítTokí
 = 
ENDFILE
;

222 
	`ungëNextCh¨
();

223 
ßve
 = 
FALSE
;

224 
cuºítTokí
 = 
GT
;

227 
INLT
:

228 
°©e
 = 
DONE
;

229 i‡(
c
 == '=')

230 
cuºítTokí
 = 
LE
;

231 i‡(
c
 =
EOF
) {

232 
°©e
 = 
DONE
;

233 
cuºítTokí
 = 
ENDFILE
;

237 
	`ungëNextCh¨
();

238 
ßve
 = 
FALSE
;

239 
cuºítTokí
 = 
LT
;

242 
INNE
:

243 
°©e
 = 
DONE
;

244 i‡(
c
 == '=')

245 
cuºítTokí
 = 
NE
;

246 i‡(
c
 =
EOF
) {

247 
°©e
 = 
DONE
;

248 
cuºítTokí
 = 
ENDFILE
;

252 
	`ungëNextCh¨
();

253 
ßve
 = 
FALSE
;

254 
cuºítTokí
 = 
ERROR
;

258 
INNUM
:

259 i‡(
c
 =
EOF
) {

260 
°©e
 = 
DONE
;

261 
cuºítTokí
 = 
ENDFILE
;

263 i‡(!
	`isdigô
(
c
))

265 
	`ungëNextCh¨
();

266 
ßve
 = 
FALSE
;

267 
°©e
 = 
DONE
;

268 
cuºítTokí
 = 
NUM
;

271 
INID
:

272 i‡(
	`ißÕha
(
c
)||
	`isdigô
(c)){

273 
°©e
 = 
INID
;

275 i‡(
c
 =
EOF
) {

276 
°©e
 = 
DONE
;

277 
cuºítTokí
 = 
ENDFILE
;

281 
	`ungëNextCh¨
();

282 
ßve
 = 
FALSE
;

283 
°©e
 = 
DONE
;

284 
cuºítTokí
 = 
ID
;

287 
DONE
:

289 
	`Ârötf
(
li°ög
,"Sˇ¬î Bug: sèã%d\n",
°©e
);

290 
°©e
 = 
DONE
;

291 
cuºítTokí
 = 
ERROR
;

294 i‡((
ßve
Ë&& (
tokíSåögIndex
 <
MAXTOKENLEN
))

295 
tokíSåög
[
tokíSåögIndex
++] = (Ë
c
;

296 i‡(
°©e
 =
DONE
)

297 { 
tokíSåög
[
tokíSåögIndex
] = '\0';

298 i‡(
cuºítTokí
 =
ID
)

299 
cuºítTokí
 = 
	`ª£rvedLookup
(
tokíSåög
);

302 i‡(
Tø˚Sˇn
) {

303 
	`Ârötf
(
li°ög
,"\t%d: ",
löío
);

304 
	`¥ötTokí
(
cuºítTokí
,
tokíSåög
);

306  
cuºítTokí
;

307 
	}
}

	@scan.h

8 #i‚de‡
_SCAN_H_


9 
	#_SCAN_H_


	)

12 
	#MAXTOKENLEN
 40

	)

15 
tokíSåög
[
MAXTOKENLEN
+1];

20 
TokíTy≥
 
gëTokí
();

	@symtab.c

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

14 
	~"symèb.h
"

17 
	#SIZE
 211

	)

21 
	#SHIFT
 4

	)

24 
	$hash
 ( * 
key
 )

25 { 
ãmp
 = 0;

26 
i
 = 0;

27 
key
[
i
] != '\0')

28 { 
ãmp
 = (—em∞<< 
SHIFT
Ë+ 
key
[
i
]Ë% 
SIZE
;

29 ++
i
;

31  
ãmp
;

32 
	}
}

37 
	sLöeLi°Rec


38 { 
	mlöío
;

39 
LöeLi°Rec
 * 
	m√xt
;

40 } * 
	tLöeLi°
;

48 
	sBuckëLi°Rec


49 { * 
	m«me
;

50 
LöeLi°
 
	mlöes
;

51 
	mmemloc
 ;

52 
BuckëLi°Rec
 * 
	m√xt
;

53 } * 
	tBuckëLi°
;

56 
BuckëLi°
 
	ghashTabÀ
[
SIZE
];

63 
	$°_ö£π
–* 
«me
, 
löío
, 
loc
 )

64 { 
h
 = 
	`hash
(
«me
);

65 
BuckëLi°
 
l
 = 
hashTabÀ
[
h
];

66 (
l
 !
NULL
Ë&& (
	`°rcmp
(
«me
,l->name) != 0))

67 
l
 =Ü->
√xt
;

68 i‡(
l
 =
NULL
)

69 { 
l
 = (
BuckëLi°
Ë
	`mÆloc
((
BuckëLi°Rec
));

70 
l
->
«me
 =Çame;

71 
l
->
löes
 = (
LöeLi°
Ë
	`mÆloc
((
LöeLi°Rec
));

72 
l
->
löes
->
löío
 =Üineno;

73 
l
->
memloc
 = 
loc
;

74 
l
->
löes
->
√xt
 = 
NULL
;

75 
l
->
√xt
 = 
hashTabÀ
[
h
];

76 
hashTabÀ
[
h
] = 
l
; }

78 { 
LöeLi°
 
t
 = 
l
->
löes
;

79 
t
->
√xt
 !
NULL
)Å =Å->next;

80 
t
->
√xt
 = (
LöeLi°
Ë
	`mÆloc
((
LöeLi°Rec
));

81 
t
->
√xt
->
löío
 =Üineno;

82 
t
->
√xt
->√xà
NULL
;

84 
	}
}

89 
	$°_lookup
 ( * 
«me
 )

90 { 
h
 = 
	`hash
(
«me
);

91 
BuckëLi°
 
l
 = 
hashTabÀ
[
h
];

92 (
l
 !
NULL
Ë&& (
	`°rcmp
(
«me
,l->name) != 0))

93 
l
 =Ü->
√xt
;

94 i‡(
l
 =
NULL
)  -1;

95  
l
->
memloc
;

96 
	}
}

102 
	$¥ötSymTab
(
FILE
 * 
li°ög
)

103 { 
i
;

104 
	`Ârötf
(
li°ög
,"Variable Name Location Line Numbers\n");

105 
	`Ârötf
(
li°ög
,"------------- -------- ------------\n");

106 
i
=0;i<
SIZE
;++i)

107 { i‡(
hashTabÀ
[
i
] !
NULL
)

108 { 
BuckëLi°
 
l
 = 
hashTabÀ
[
i
];

109 
l
 !
NULL
)

110 { 
LöeLi°
 
t
 = 
l
->
löes
;

111 
	`Ârötf
(
li°ög
,"%-14†",
l
->
«me
);

112 
	`Ârötf
(
li°ög
,"%-8d ",
l
->
memloc
);

113 
t
 !
NULL
)

114 { 
	`Ârötf
(
li°ög
,"%4d ",
t
->
löío
);

115 
t
 =Å->
√xt
;

117 
	`Ârötf
(
li°ög
,"\n");

118 
l
 =Ü->
√xt
;

122 
	}
}

	@symtab.h

9 #i‚de‡
_SYMTAB_H_


10 
	#_SYMTAB_H_


	)

17 
°_ö£π
–* 
«me
, 
löío
, 
loc
 );

22 
°_lookup
 ( * 
«me
 );

28 
¥ötSymTab
(
FILE
 * 
li°ög
);

	@tm.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~<˘y≥.h
>

13 #i‚de‡
TRUE


14 
	#TRUE
 1

	)

16 #i‚de‡
FALSE


17 
	#FALSE
 0

	)

21 
	#IADDR_SIZE
 1024

	)

22 
	#DADDR_SIZE
 1024

	)

23 
	#NO_REGS
 8

	)

24 
	#PC_REG
 7

	)

26 
	#LINESIZE
 121

	)

27 
	#WORDSIZE
 20

	)

32 
	m›˛RR
,

33 
	m›˛RM
,

34 
	m›˛RA


35 } 
	tOPCLASS
;

39 
	m›HALT
,

40 
	m›IN
,

41 
	m›OUT
,

42 
	m›ADD
,

43 
	m›SUB
,

44 
	m›MUL
,

45 
	m›DIV
,

46 
	m›RRLim
,

49 
	m›LD
,

50 
	m›ST
,

51 
	m›RMLim
,

54 
	m›LDA
,

55 
	m›LDC
,

56 
	m›JLT
,

57 
	m›JLE
,

58 
	m›JGT
,

59 
	m›JGE
,

60 
	m›JEQ
,

61 
	m›JNE
,

62 
	m›RALim


63 } 
	tOPCODE
;

66 
	m§OKAY
,

67 
	m§HALT
,

68 
	m§IMEM_ERR
,

69 
	m§DMEM_ERR
,

70 
	m§ZERODIVIDE


71 } 
	tSTEPRESULT
;

74 
	mi›
 ;

75 
	mürg1
 ;

76 
	mürg2
 ;

77 
	mürg3
 ;

78 } 
	tINSTRUCTION
;

81 
	gûoc
 = 0 ;

82 
	gdloc
 = 0 ;

83 
	gåa˚Êag
 = 
FALSE
;

84 
	gicou¡Êag
 = 
FALSE
;

86 
INSTRUCTION
 
	giMem
 [
IADDR_SIZE
];

87 
	gdMem
 [
DADDR_SIZE
];

88 
	gªg
 [
NO_REGS
];

90 * 
	g›CodeTab
[]

98 * 
	g°ïResu…Tab
[]

103 
	gpgmName
[20];

104 
FILE
 *
	gpgm
 ;

106 
	gö_Löe
[
LINESIZE
] ;

107 
	glöeLí
 ;

108 
	göCﬁ
 ;

109 
	gnum
 ;

110 
	gw‹d
[
WORDSIZE
] ;

111 
	gch
 ;

112 
	gd⁄e
 ;

115 
	$›Cœss
–
c
 )

116 { i‡–
c
 <
›RRLim
Ë ( 
›˛RR
 );

117 i‡–
c
 <
›RMLim
Ë ( 
›˛RM
 );

118  ( 
›˛RA
 );

119 
	}
}

122 
	$wrôeIn°ru˘i⁄
 ( 
loc
 )

123 { 
	`¥ötf
–"%5d: ", 
loc
) ;

124 i‡–(
loc
 >0Ë&& (lo¯< 
IADDR_SIZE
) )

125 { 
	`¥ötf
("%6s%3d,", 
›CodeTab
[
iMem
[
loc
].
i›
], iMem[loc].
ürg1
);

126  
	`›Cœss
(
iMem
[
loc
].
i›
) )

127 { 
›˛RR
: 
	`¥ötf
("%1d,%1d", 
iMem
[
loc
].
ürg2
, iMem[loc].
ürg3
);

129 
›˛RM
:

130 
›˛RA
: 
	`¥ötf
("%3d(%1d)", 
iMem
[
loc
].
ürg2
, iMem[loc].
ürg3
);

133 
	`¥ötf
 ("\n") ;

135 
	}
}

138 
	$gëCh
 ()

139 { i‡(++
öCﬁ
 < 
löeLí
)

140 
ch
 = 
ö_Löe
[
öCﬁ
] ;

141 
ch
 = ' ' ;

142 
	}
}

145 
	$n⁄Bœnk
 ()

146 { (
öCﬁ
 < 
löeLí
)

147 && (
ö_Löe
[
öCﬁ
] == ' ') )

148 
öCﬁ
++ ;

149 i‡(
öCﬁ
 < 
löeLí
)

150 { 
ch
 = 
ö_Löe
[
öCﬁ
] ;

151  
TRUE
 ; }

153 { 
ch
 = ' ' ;

154  
FALSE
 ; }

155 
	}
}

158 
	$gëNum
 ()

159 { 
sign
;

160 
ãrm
;

161 
ãmp
 = 
FALSE
;

162 
num
 = 0 ;

164 { 
sign
 = 1;

165  
	`n⁄Bœnk
(Ë&& ((
ch
 == '+') || (ch == '-')) )

166 { 
ãmp
 = 
FALSE
 ;

167 i‡(
ch
 ='-'Ë
sign
 = - sign ;

168 
	`gëCh
();

170 
ãrm
 = 0 ;

171 
	`n⁄Bœnk
();

172 
	`isdigô
(
ch
))

173 { 
ãmp
 = 
TRUE
 ;

174 
ãrm
 =Åîm * 10 + ( 
ch
 - '0' ) ;

175 
	`gëCh
();

177 
num
 =Çum + (
ãrm
 * 
sign
) ;

178 }  (
	`n⁄Bœnk
()Ë&& ((
ch
 == '+') || (ch == '-')) ) ;

179  
ãmp
;

180 
	}
}

183 
	$gëW‹d
 ()

184 { 
ãmp
 = 
FALSE
;

185 
Àngth
 = 0;

186 i‡(
	`n⁄Bœnk
 ())

187 { 
	`iß um
(
ch
))

188 { i‡(
Àngth
 < 
WORDSIZE
-1Ë
w‹d
 [Àngth++] = 
ch
 ;

189 
	`gëCh
() ;

191 
w‹d
[
Àngth
] = '\0';

192 
ãmp
 = (
Àngth
 != 0);

194  
ãmp
;

195 
	}
}

198 
	$skùCh
 ( 
c
 )

199 { 
ãmp
 = 
FALSE
;

200 i‡–
	`n⁄Bœnk
(Ë&& (
ch
 =
c
) )

201 { 
	`gëCh
();

202 
ãmp
 = 
TRUE
;

204  
ãmp
;

205 
	}
}

208 
	$©EOL
()

209 {  ( ! 
	`n⁄Bœnk
 ());

210 
	}
}

213 
	$îr‹
–* 
msg
, 
löeNo
, 
ö°No
)

214 { 
	`¥ötf
("Löê%d",
löeNo
);

215 i‡(
ö°No
 >0Ë
	`¥ötf
(" (Instruction %d)",instNo);

216 
	`¥ötf
(" %s\n",
msg
);

217  
FALSE
;

218 
	}
}

221 
	$ªadIn°ru˘i⁄s
 ()

222 { 
OPCODE
 
›
;

223 
¨g1
, 
¨g2
, 
¨g3
;

224 
loc
, 
ªgNo
, 
löeNo
;

225 
ªgNo
 = 0 ;ÑegNÿ< 
NO_REGS
 ;ÑegNo++)

226 
ªg
[
ªgNo
] = 0 ;

227 
dMem
[0] = 
DADDR_SIZE
 - 1 ;

228 
loc
 = 1 ;Üo¯< 
DADDR_SIZE
 ;Üoc++)

229 
dMem
[
loc
] = 0 ;

230 
loc
 = 0 ;Üo¯< 
IADDR_SIZE
 ;Üoc++)

231 { 
iMem
[
loc
].
i›
 = 
›HALT
 ;

232 
iMem
[
loc
].
ürg1
 = 0 ;

233 
iMem
[
loc
].
ürg2
 = 0 ;

234 
iMem
[
loc
].
ürg3
 = 0 ;

236 
löeNo
 = 0 ;

237 ! 
	`„of
(
pgm
))

238 { 
	`fgës
–
ö_Löe
, 
LINESIZE
-2, 
pgm
 ) ;

239 
öCﬁ
 = 0 ;

240 
löeNo
++;

241 
löeLí
 = 
	`°æí
(
ö_Löe
)-1 ;

242 i‡(
ö_Löe
[
löeLí
]=='\n') in_Line[lineLen] = '\0' ;

243 
ö_Löe
[++
löeLí
] = '\0';

244 i‡–(
	`n⁄Bœnk
()Ë&& (
ö_Löe
[
öCﬁ
] != '*') )

245 { i‡(! 
	`gëNum
())

246  
	`îr‹
("BadÜoˇti⁄", 
löeNo
,-1);

247 
loc
 = 
num
;

248 i‡(
loc
 > 
IADDR_SIZE
)

249  
	`îr‹
("Loˇti⁄Åoÿœrge",
löeNo
,
loc
);

250 i‡(! 
	`skùCh
(':'))

251  
	`îr‹
("Missög cﬁ⁄", 
löeNo
,
loc
);

252 i‡(! 
	`gëW‹d
 ())

253  
	`îr‹
("Missög opcode", 
löeNo
,
loc
);

254 
›
 = 
›HALT
 ;

255 (
›
 < 
›RALim
)

256 && (
	`°∫cmp
(
›CodeTab
[
›
], 
w‹d
, 4) != 0) )

257 
›
++ ;

258 i‡(
	`°∫cmp
(
›CodeTab
[
›
], 
w‹d
, 4) != 0)

259  
	`îr‹
("IŒegÆ opcode", 
löeNo
,
loc
);

260  
	`›Cœss
(
›
) )

261 { 
›˛RR
 :

263 i‡–(! 
	`gëNum
 ()Ë|| (
num
 < 0Ë|| (num >
NO_REGS
) )

264  
	`îr‹
("Bad fú°Ñegi°î", 
löeNo
,
loc
);

265 
¨g1
 = 
num
;

266 i‡–! 
	`skùCh
(','))

267  
	`îr‹
("Missög comma", 
löeNo
, 
loc
);

268 i‡–(! 
	`gëNum
 ()Ë|| (
num
 < 0Ë|| (num >
NO_REGS
) )

269  
	`îr‹
("Bad sec⁄dÑegi°î", 
löeNo
, 
loc
);

270 
¨g2
 = 
num
;

271 i‡–! 
	`skùCh
(','))

272  
	`îr‹
("Missög comma", 
löeNo
,
loc
);

273 i‡–(! 
	`gëNum
 ()Ë|| (
num
 < 0Ë|| (num >
NO_REGS
) )

274  
	`îr‹
("BadÅhúdÑegi°î", 
löeNo
,
loc
);

275 
¨g3
 = 
num
;

278 
›˛RM
 :

279 
›˛RA
 :

281 i‡–(! 
	`gëNum
 ()Ë|| (
num
 < 0Ë|| (num >
NO_REGS
) )

282  
	`îr‹
("Bad fú°Ñegi°î", 
löeNo
,
loc
);

283 
¨g1
 = 
num
;

284 i‡–! 
	`skùCh
(','))

285  
	`îr‹
("Missög comma", 
löeNo
,
loc
);

286 i‡(! 
	`gëNum
 ())

287  
	`îr‹
("Bad di•œ˚mít", 
löeNo
,
loc
);

288 
¨g2
 = 
num
;

289 i‡–! 
	`skùCh
('(') && ! skipCh(',') )

290  
	`îr‹
("Missög LP¨í", 
löeNo
,
loc
);

291 i‡–(! 
	`gëNum
 ()Ë|| (
num
 < 0Ë|| (num >
NO_REGS
))

292  
	`îr‹
("Bad sec⁄dÑegi°î", 
löeNo
,
loc
);

293 
¨g3
 = 
num
;

296 
iMem
[
loc
].
i›
 = 
›
;

297 
iMem
[
loc
].
ürg1
 = 
¨g1
;

298 
iMem
[
loc
].
ürg2
 = 
¨g2
;

299 
iMem
[
loc
].
ürg3
 = 
¨g3
;

302  
TRUE
;

303 
	}
}

307 
STEPRESULT
 
	$°ïTM
 ()

308 { 
INSTRUCTION
 
cuºítö°ru˘i⁄
 ;

309 
pc
 ;

310 
r
,
s
,
t
,
m
 ;

311 
ok
 ;

313 
pc
 = 
ªg
[
PC_REG
] ;

314 i‡–(
pc
 < 0Ë|| (p¯> 
IADDR_SIZE
) )

315  
§IMEM_ERR
 ;

316 
ªg
[
PC_REG
] = 
pc
 + 1 ;

317 
cuºítö°ru˘i⁄
 = 
iMem
[ 
pc
 ] ;

318 
	`›Cœss
(
cuºítö°ru˘i⁄
.
i›
) )

319 { 
›˛RR
 :

321 
r
 = 
cuºítö°ru˘i⁄
.
ürg1
 ;

322 
s
 = 
cuºítö°ru˘i⁄
.
ürg2
 ;

323 
t
 = 
cuºítö°ru˘i⁄
.
ürg3
 ;

326 
›˛RM
 :

328 
r
 = 
cuºítö°ru˘i⁄
.
ürg1
 ;

329 
s
 = 
cuºítö°ru˘i⁄
.
ürg3
 ;

330 
m
 = 
cuºítö°ru˘i⁄
.
ürg2
 + 
ªg
[
s
] ;

331 i‡–(
m
 < 0Ë|| (m > 
DADDR_SIZE
))

332  
§DMEM_ERR
 ;

335 
›˛RA
 :

337 
r
 = 
cuºítö°ru˘i⁄
.
ürg1
 ;

338 
s
 = 
cuºítö°ru˘i⁄
.
ürg3
 ;

339 
m
 = 
cuºítö°ru˘i⁄
.
ürg2
 + 
ªg
[
s
] ;

343  
cuºítö°ru˘i⁄
.
i›
)

345 
›HALT
 :

347 
	`¥ötf
("HALT: %1d,%1d,%1d\n",
r
,
s
,
t
);

348  
§HALT
 ;

351 
›IN
 :

354 { 
	`¥ötf
("Enter value for IN instruction: ") ;

355 
	`fÊush
 (
°dö
);

356 
	`fÊush
 (
°dout
);

357 
	`gës
(
ö_Löe
);

358 
löeLí
 = 
	`°æí
(
ö_Löe
) ;

359 
öCﬁ
 = 0;

360 
ok
 = 
	`gëNum
();

361 i‡–! 
ok
 ) 
	`¥ötf
 ("Illegal value\n");

362 
ªg
[
r
] = 
num
;

364 ! 
ok
);

367 
›OUT
 :

368 
	`¥ötf
 ("OUT in°ru˘i⁄Öröts: %d\n", 
ªg
[
r
] ) ;

370 
›ADD
 : 
ªg
[
r
] =Ñeg[
s
] +Ñeg[
t
] ; ;

371 
›SUB
 : 
ªg
[
r
] =Ñeg[
s
] -Ñeg[
t
] ; ;

372 
›MUL
 : 
ªg
[
r
] =Ñeg[
s
] *Ñeg[
t
] ; ;

374 
›DIV
 :

376 i‡–
ªg
[
t
] !0 )Ñeg[
r
] =Ñeg[
s
] /Ñeg[t];

377  
§ZERODIVIDE
 ;

381 
›LD
 : 
ªg
[
r
] = 
dMem
[
m
] ; ;

382 
›ST
 : 
dMem
[
m
] = 
ªg
[
r
] ; ;

385 
›LDA
 : 
ªg
[
r
] = 
m
 ; ;

386 
›LDC
 : 
ªg
[
r
] = 
cuºítö°ru˘i⁄
.
ürg2
 ; ;

387 
›JLT
 : i‡–
ªg
[
r
] < 0 )Ñeg[
PC_REG
] = 
m
 ; ;

388 
›JLE
 : i‡–
ªg
[
r
] <0 )Ñeg[
PC_REG
] = 
m
 ; ;

389 
›JGT
 : i‡–
ªg
[
r
] > 0 )Ñeg[
PC_REG
] = 
m
 ; ;

390 
›JGE
 : i‡–
ªg
[
r
] >0 )Ñeg[
PC_REG
] = 
m
 ; ;

391 
›JEQ
 : i‡–
ªg
[
r
] =0 )Ñeg[
PC_REG
] = 
m
 ; ;

392 
›JNE
 : i‡–
ªg
[
r
] !0 )Ñeg[
PC_REG
] = 
m
 ; ;

396  
§OKAY
 ;

397 
	}
}

400 
	$doComm™d
 ()

401 { 
cmd
;

402 
°ï˙t
=0, 
i
;

403 
¥öt˙t
;

404 
°ïResu…
;

405 
ªgNo
, 
loc
;

407 { 
	`¥ötf
 ("Enter command: ");

408 
	`fÊush
 (
°dö
);

409 
	`fÊush
 (
°dout
);

410 
	`gës
(
ö_Löe
);

411 
löeLí
 = 
	`°æí
(
ö_Löe
);

412 
öCﬁ
 = 0;

414 ! 
	`gëW‹d
 ());

416 
cmd
 = 
w‹d
[0] ;

417  
cmd
 )

420 
åa˚Êag
 = !Åraceflag ;

421 
	`¥ötf
("TracingÇow ");

422 i‡–
åa˚Êag
 ) 
	`¥ötf
("on.\n"); printf("off.\n");

427 
	`¥ötf
("Commandsáre:\n");

428 
	`¥ötf
(" s(tep <n> "\

430 
	`¥ötf
(" g(o "\

432 
	`¥ötf
("Ñ(egs "\

434 
	`¥ötf
(" i(Mem <b <n>> "\

436 
	`¥ötf
(" d(Mem <b <n>> "\

438 
	`¥ötf
("Å(race "\

440 
	`¥ötf
("Ö(rint "\

443 
	`¥ötf
(" c(lear "\

445 
	`¥ötf
(" h(elp "\

447 
	`¥ötf
(" q(uit "\

453 
icou¡Êag
 = ! icountflag ;

454 
	`¥ötf
("Printing instruction countÇow ");

455 i‡–
icou¡Êag
 ) 
	`¥ötf
("on.\n"); printf("off.\n");

460 i‡–
	`©EOL
 ()Ë
°ï˙t
 = 1;

461 i‡–
	`gëNum
 ()Ë
°ï˙t
 = 
	`abs
(
num
);

462 
	`¥ötf
("Step count?\n");

465 'g' : 
°ï˙t
 = 1 ; ;

469 
i
 = 0; i < 
NO_REGS
; i++)

470 { 
	`¥ötf
("%1d: %4d ", 
i
,
ªg
[i]);

471 i‡–(
i
 % 4Ë=3 ) 
	`¥ötf
 ("\n");

477 
¥öt˙t
 = 1 ;

478 i‡–
	`gëNum
 ())

479 { 
ûoc
 = 
num
 ;

480 i‡–
	`gëNum
 ()Ë
¥öt˙t
 = 
num
 ;

482 i‡–! 
	`©EOL
 ())

483 
	`¥ötf
 ("InstructionÜocations?\n");

485 { (
ûoc
 >0Ë&& (ûo¯< 
IADDR_SIZE
)

486 && (
¥öt˙t
 > 0) )

487 { 
	`wrôeIn°ru˘i⁄
(
ûoc
);

488 
ûoc
++ ;

489 
¥öt˙t
-- ;

496 
¥öt˙t
 = 1 ;

497 i‡–
	`gëNum
 ())

498 { 
dloc
 = 
num
 ;

499 i‡–
	`gëNum
 ()Ë
¥öt˙t
 = 
num
 ;

501 i‡–! 
	`©EOL
 ())

502 
	`¥ötf
("DataÜocations?\n");

504 { (
dloc
 >0Ë&& (dlo¯< 
DADDR_SIZE
)

505 && (
¥öt˙t
 > 0))

506 { 
	`¥ötf
("%5d: %5d\n",
dloc
,
dMem
[dloc]);

507 
dloc
++;

508 
¥öt˙t
--;

515 
ûoc
 = 0;

516 
dloc
 = 0;

517 
°ï˙t
 = 0;

518 
ªgNo
 = 0;ÑegNÿ< 
NO_REGS
 ;ÑegNo++)

519 
ªg
[
ªgNo
] = 0 ;

520 
dMem
[0] = 
DADDR_SIZE
 - 1 ;

521 
loc
 = 1 ;Üo¯< 
DADDR_SIZE
 ;Üoc++)

522 
dMem
[
loc
] = 0 ;

525 'q' :  
FALSE
;

527  : 
	`¥ötf
("Comm™d %¯unknown.\n", 
cmd
); ;

529 
°ïResu…
 = 
§OKAY
;

530 i‡–
°ï˙t
 > 0 )

531 { i‡–
cmd
 == 'g' )

532 { 
°ï˙t
 = 0;

533 
°ïResu…
 =
§OKAY
)

534 { 
ûoc
 = 
ªg
[
PC_REG
] ;

535 i‡–
åa˚Êag
 ) 
	`wrôeIn°ru˘i⁄
–
ûoc
 ) ;

536 
°ïResu…
 = 
	`°ïTM
 ();

537 
°ï˙t
++;

539 i‡–
icou¡Êag
 )

540 
	`¥ötf
("Numbî o‡ö°ru˘i⁄†execuãd = %d\n",
°ï˙t
);

543 { (
°ï˙t
 > 0Ë&& (
°ïResu…
 =
§OKAY
))

544 { 
ûoc
 = 
ªg
[
PC_REG
] ;

545 i‡–
åa˚Êag
 ) 
	`wrôeIn°ru˘i⁄
–
ûoc
 ) ;

546 
°ïResu…
 = 
	`°ïTM
 ();

547 
°ï˙t
-- ;

550 
	`¥ötf
–"%s\n",
°ïResu…Tab
[
°ïResu…
] );

552  
TRUE
;

553 
	}
}

560 
	$maö
–
¨gc
, * 
¨gv
[] )

561 { i‡(
¨gc
 != 2)

562 { 
	`¥ötf
("ußge: %†<fûíame>\n",
¨gv
[0]);

563 
	`exô
(1);

565 
	`°r˝y
(
pgmName
,
¨gv
[1]) ;

566 i‡(
	`°rchr
 (
pgmName
, '.'Ë=
NULL
)

567 
	`°rˇt
(
pgmName
,".tm");

568 
pgm
 = 
	`f›í
(
pgmName
,"r");

569 i‡(
pgm
 =
NULL
)

570 { 
	`¥ötf
("fûê'%s'ÇŸ found\n",
pgmName
);

571 
	`exô
(1);

575 i‡–! 
	`ªadIn°ru˘i⁄s
 ())

576 
	`exô
(1) ;

580 
	`¥ötf
("TM simulation (enter h for help)...\n");

582 
d⁄e
 = ! 
	`doComm™d
 ();

583 ! 
d⁄e
 );

584 
	`¥ötf
("Simulation done.\n");

586 
	}
}

	@util.c

9 
	~"globÆs.h
"

10 
	~"utû.h
"

15 
	$¥ötTokí
–
TokíTy≥
 
tokí
, c⁄° * 
tokíSåög
 )

16 { 
tokí
)

18 
IF
:

19 
ELSE
:

20 
WHILE
:

21 
RETURN
:

22 
INT
:

23 
VOID
: 
	`Ârötf
(
li°ög
,

24 "ª£rved w‹d: %s\n",
tokíSåög
); ;

25 
ASSIGN
: 
	`Ârötf
(
li°ög
,"=\n"); ;

26 
EQ
: 
	`Ârötf
(
li°ög
,"==\n"); ;

27 
NE
: 
	`Ârötf
(
li°ög
,"!=\n"); ;

28 
LT
: 
	`Ârötf
(
li°ög
,"<\n"); ;

29 
LE
: 
	`Ârötf
(
li°ög
,"<=\n"); ;

30 
GT
: 
	`Ârötf
(
li°ög
,">\n"); ;

31 
GE
: 
	`Ârötf
(
li°ög
,">=\n"); ;

32 
PLUS
: 
	`Ârötf
(
li°ög
,"+\n"); ;

33 
MINUS
: 
	`Ârötf
(
li°ög
,"-\n"); ;

34 
TIMES
: 
	`Ârötf
(
li°ög
,"*\n"); ;

35 
OVER
: 
	`Ârötf
(
li°ög
,"/\n"); ;

36 
LPAREN
: 
	`Ârötf
(
li°ög
,"(\n"); ;

37 
RPAREN
: 
	`Ârötf
(
li°ög
,")\n"); ;

38 
LBRACE
: 
	`Ârötf
(
li°ög
,"[\n"); ;

39 
RBRACE
: 
	`Ârötf
(
li°ög
,"]\n"); ;

40 
LCURLY
: 
	`Ârötf
(
li°ög
,"{\n"); ;

41 
RCURLY
: 
	`Ârötf
(
li°ög
,"}\n"); ;

42 
SEMI
: 
	`Ârötf
(
li°ög
,";\n"); ;

43 
COMMA
: 
	`Ârötf
(
li°ög
,",\n"); ;

44 
ENDFILE
: 
	`Ârötf
(
li°ög
, "EOF\n"); ;

45 
NUM
:

46 
	`Ârötf
(
li°ög
,

47 "NUM, vÆ%s\n",
tokíSåög
);

49 
ID
:

50 
	`Ârötf
(
li°ög
,

51 "ID,Çame%s\n",
tokíSåög
);

53 
ERROR
:

54 
	`Ârötf
(
li°ög
,

55 "ERROR: %s\n",
tokíSåög
);

59 
	`Ârötf
(
li°ög
,"Unknow¿tokí: %d\n",
tokí
);

61 
	}
}

66 
TªeNode
 * 
	$√wStmtNode
(
StmtKöd
 
köd
)

67 { 
TªeNode
 * 
t
 = (TªeNodê*Ë
	`mÆloc
((TreeNode));

68 
i
;

69 i‡(
t
==
NULL
)

70 
	`Ârötf
(
li°ög
,"Ouào‡mem‹yÉº‹áàlöê%d\n",
löío
);

72 
i
=0;i<
MAXCHILDREN
;i++Ë
t
->
chûd
[i] = 
NULL
;

73 
t
->
siblög
 = 
NULL
;

74 
t
->
nodeköd
 = 
StmtK
;

75 
t
->
köd
.
°mt
 = kind;

76 
t
->
löío
 =Üineno;

78  
t
;

79 
	}
}

84 
TªeNode
 * 
	$√wExpNode
(
ExpKöd
 
köd
)

85 { 
TªeNode
 * 
t
 = (TªeNodê*Ë
	`mÆloc
((TreeNode));

86 
i
;

87 i‡(
t
==
NULL
)

88 
	`Ârötf
(
li°ög
,"Ouào‡mem‹yÉº‹áàlöê%d\n",
löío
);

90 
i
=0;i<
MAXCHILDREN
;i++Ë
t
->
chûd
[i] = 
NULL
;

91 
t
->
siblög
 = 
NULL
;

92 
t
->
nodeköd
 = 
ExpK
;

93 
t
->
köd
.
exp
 = kind;

94 
t
->
löío
 =Üineno;

95 
t
->
ty≥
 = 
Void
;

97  
t
;

98 
	}
}

99 
TªeNode
 * 
	$√wDe˛Node
(
De˛Köd
 
köd
)

100 { 
TªeNode
 * 
t
 = (TªeNodê*Ë
	`mÆloc
((TreeNode));

101 
i
;

102 i‡(
t
==
NULL
)

103 
	`Ârötf
(
li°ög
,"Ouào‡mem‹yÉº‹áàlöê%d\n",
löío
);

105 
i
=0;i<
MAXCHILDREN
;i++Ë
t
->
chûd
[i] = 
NULL
;

106 
t
->
siblög
 = 
NULL
;

107 
t
->
nodeköd
 = 
De˛K
;

108 
t
->
köd
.
de˛
 = kind;

109 
t
->
löío
 =Üineno;

110 
t
->
ty≥
 = 
Void
;

112  
t
;

113 
	}
}

117 * 
	$c›ySåög
(c⁄° * 
s
)

118 { 
n
;

119 * 
t
;

120 i‡(
s
==
NULL
)  NULL;

121 
n
 = 
	`°æí
(
s
)+1;

122 
t
 = 
	`mÆloc
(
n
);

123 i‡(
t
==
NULL
)

124 
	`Ârötf
(
li°ög
,"Ouào‡mem‹yÉº‹áàlöê%d\n",
löío
);

125 
	`°r˝y
(
t
,
s
);

126  
t
;

127 
	}
}

132 
	gödíäo
 = 0;

135 
	#INDENT
 
ödíäo
+=2

	)

136 
	#UNINDENT
 
ödíäo
-=2

	)

139 
	$¥ötS∑˚s
()

140 { 
i
;

141 
i
=0;i<
ödíäo
;i++)

142 
	`Ârötf
(
li°ög
," ");

143 
	}
}

148 
	$¥ötTªe
–
TªeNode
 * 
åì
 )

149 { 
i
;

150 
INDENT
;

151 
åì
 !
NULL
) {

152 
	`¥ötS∑˚s
();

153 i‡(
åì
->
nodeköd
==
StmtK
)

154 { 
åì
->
köd
.
°mt
) {

155 
IfK
:

156 
	`Ârötf
(
li°ög
,"If Statement:\n");

158 
El£K
:

159 
	`Ârötf
(
li°ög
,"If-Else Statement:\n");

161 
WhûeK
:

162 
	`Ârötf
(
li°ög
,"While Statement:\n");

164 
CompoundK
:

165 
	`Ârötf
(
li°ög
,"Compound Statement:\n");

167 
Rëu∫K
:

168 
	`Ârötf
(
li°ög
,"Return Statement:\n");

171 
	`Ârötf
(
li°ög
,"Unknown ExpNode kind\n");

175 i‡(
åì
->
nodeköd
==
ExpK
)

176 { 
åì
->
köd
.
exp
) {

177 
OpK
:

178 
	`Ârötf
(
li°ög
,"Op: ");

179 
	`¥ötTokí
(
åì
->
©å
.
›
,"\0");

181 
C⁄°K
:

182 
	`Ârötf
(
li°ög
,"C⁄°: %d\n",
åì
->
©å
.
vÆ
);

184 
IdK
:

185 
	`Ârötf
(
li°ög
,"V¨übÀ:Çamê%s,Åy≥ = %s\n",
åì
->
©å
.
«me
,—ªe->
ty≥
==
I¡egî
)?"int":"void");

187 
AºIdK
:

188 
	`Ârötf
(
li°ög
,"V¨übÀ:Çamê%s,Åy≥ = %s\n",
åì
->
©å
.
«me
,—ªe->
ty≥
==
I¡Aºay
)?"int[]":"void[]");

190 
CÆlK
:

191 
	`Ârötf
(
li°ög
,"CÆl: fun˘i⁄Çamê%s\n",
åì
->
©å
.
«me
);

193 
AssignK
:

194 
	`Ârötf
(
li°ög
,"Assign:\n");

197 
	`Ârötf
(
li°ög
,"Unknown ExpNode kind\n");

201 i‡(
åì
->
nodeköd
==
De˛K
){

202 
åì
->
köd
.
de˛
){

203 
V¨K
:

204 
	`Ârötf
(
li°ög
,"V¨übÀ De˛¨©i⁄:Çamê%s,Åy≥ = %s\n",
åì
->
©å
.
«me
,—ªe->
ty≥
==
I¡egî
)?"int":"void");

206 
AºK
:

207 
	`Ârötf
(
li°ög
,"V¨übÀ De˛¨©i⁄:Çamê%s,Åy≥ = %s\n",
åì
->
©å
.
«me
,—ªe->
ty≥
==
I¡Aºay
)?"int[]":"void[]");

209 
FuncK
:

210 
	`Ârötf
(
li°ög
,"Fun˘i⁄ De˛¨©i⁄:Çamê%s,Åy≥ = %s\n",
åì
->
©å
.
«me
,—ªe->
ty≥
==
I¡egî
)?"int":"void");

212 
P¨amK
:

213 
	`Ârötf
(
li°ög
,"P¨amëî:Çamê%s,Åy≥ = %d\n",
åì
->
©å
.
«me
,Åªe->
ty≥
);

215 
VoidP¨amK
:

216 
	`Ârötf
(
li°ög
,"Void Parameter\n");

218 
AºP¨amK
:

219 
	`Ârötf
(
li°ög
,"Fun˘i⁄ De˛¨©i⁄:Çamê%s,Åy≥ = %s\n",
åì
->
©å
.
«me
,—ªe->
ty≥
==
I¡Aºay
)?"int[]":"void[]");

222 
	`Ârötf
(
li°ög
,"Unknown DeclNode kind\n");

226 
	`Ârötf
(
li°ög
,"UnknownÇode kind\n");

227 
i
=0;i<
MAXCHILDREN
;i++)

228 
	`¥ötTªe
(
åì
->
chûd
[
i
]);

229 
åì
 =Åªe->
siblög
;

231 
UNINDENT
;

232 
	}
}

	@util.h

8 #i‚de‡
_UTIL_H_


9 
	#_UTIL_H_


	)

14 
¥ötTokí
–
TokíTy≥
, const * );

19 
TªeNode
 * 
√wStmtNode
(
StmtKöd
);

24 
TªeNode
 * 
√wExpNode
(
ExpKöd
);

25 
TªeNode
 * 
√wDe˛Node
(
De˛Köd
);

29 * 
c›ySåög
( const * );

34 
¥ötTªe
–
TªeNode
 * );

	@y.tab.c

48 
	#YYBISON
 1

	)

51 
	#YYBISON_VERSION
 "3.5.1"

	)

54 
	#YYSKELETON_NAME
 "yacc.c"

	)

57 
	#YYPURE
 0

	)

60 
	#YYPUSH
 0

	)

63 
	#YYPULL
 1

	)

71 
	#YYPARSER


	)

73 
	~"globÆs.h
"

74 
	~"utû.h
"

75 
	~"sˇn.h
"

76 
	~"∑r£.h
"

80 
	#YYSTYPE
 
TªeNode
 *

	)

81 
	gßvedNumbî
;

82 * 
	gßvedName
;

84 
ExpTy≥
 
	gßvedTy≥
;

85 
	gßvedLöeNo
;

86 
TªeNode
 * 
	gßvedTªe
;

87 
yyÀx
();

90 
yyîr‹
(* 
mesßge
);

95 #i‚de‡
YY_CAST


96 #ifde‡
__˝lu•lus


97 
	#YY_CAST
(
Ty≥
, 
VÆ
Ë
°©ic_ˇ°
<Ty≥> (VÆ)

	)

98 
	#YY_REINTERPRET_CAST
(
Ty≥
, 
VÆ
Ë
ªöãΩªt_ˇ°
<Ty≥> (VÆ)

	)

100 
	#YY_CAST
(
Ty≥
, 
VÆ
Ë((Ty≥Ë(VÆ))

	)

101 
	#YY_REINTERPRET_CAST
(
Ty≥
, 
VÆ
Ë((Ty≥Ë(VÆ))

	)

104 #i‚de‡
YY_NULLPTR


105 #i‡
deföed
 
__˝lu•lus


106 #i‡201103L <
__˝lu•lus


107 
	#YY_NULLPTR
 
nuŒ±r


	)

109 
	#YY_NULLPTR
 0

	)

112 
	#YY_NULLPTR
 ((*)0)

	)

117 #ifde‡
YYERROR_VERBOSE


118 #unde‡
YYERROR_VERBOSE


119 
	#YYERROR_VERBOSE
 1

	)

121 
	#YYERROR_VERBOSE
 0

	)

126 #i‚de‡
YY_YY_Y_TAB_H_INCLUDED


127 
	#YY_YY_Y_TAB_H_INCLUDED


	)

129 #i‚de‡
YYDEBUG


130 
	#YYDEBUG
 0

	)

132 #i‡
YYDEBUG


133 
yydebug
;

137 #i‚de‡
YYTOKENTYPE


138 
	#YYTOKENTYPE


	)

139 
	eyytokíty≥


141 
	mIF
 = 258,

142 
	mELSE
 = 259,

143 
	mINT
 = 260,

144 
	mRETURN
 = 261,

145 
	mVOID
 = 262,

146 
	mWHILE
 = 263,

147 
	mID
 = 264,

148 
	mNUM
 = 265,

149 
	mLT
 = 266,

150 
	mLE
 = 267,

151 
	mGT
 = 268,

152 
	mGE
 = 269,

153 
	mEQ
 = 270,

154 
	mNE
 = 271,

155 
	mSEMI
 = 272,

156 
	mLPAREN
 = 273,

157 
	mRPAREN
 = 274,

158 
	mLCURLY
 = 275,

159 
	mRCURLY
 = 276,

160 
	mLBRACE
 = 277,

161 
	mRBRACE
 = 278,

162 
	mPLUS
 = 279,

163 
	mMINUS
 = 280,

164 
	mTIMES
 = 281,

165 
	mOVER
 = 282,

166 
	mCOMMA
 = 283,

167 
	mASSIGN
 = 284,

168 
	mTHEN
 = 285,

169 
	mERROR
 = 286

173 
	#IF
 258

	)

174 
	#ELSE
 259

	)

175 
	#INT
 260

	)

176 
	#RETURN
 261

	)

177 
	#VOID
 262

	)

178 
	#WHILE
 263

	)

179 
	#ID
 264

	)

180 
	#NUM
 265

	)

181 
	#LT
 266

	)

182 
	#LE
 267

	)

183 
	#GT
 268

	)

184 
	#GE
 269

	)

185 
	#EQ
 270

	)

186 
	#NE
 271

	)

187 
	#SEMI
 272

	)

188 
	#LPAREN
 273

	)

189 
	#RPAREN
 274

	)

190 
	#LCURLY
 275

	)

191 
	#RCURLY
 276

	)

192 
	#LBRACE
 277

	)

193 
	#RBRACE
 278

	)

194 
	#PLUS
 279

	)

195 
	#MINUS
 280

	)

196 
	#TIMES
 281

	)

197 
	#OVER
 282

	)

198 
	#COMMA
 283

	)

199 
	#ASSIGN
 284

	)

200 
	#THEN
 285

	)

201 
	#ERROR
 286

	)

204 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


205 
	tYYSTYPE
;

206 
	#YYSTYPE_IS_TRIVIAL
 1

	)

207 
	#YYSTYPE_IS_DECLARED
 1

	)

211 
YYSTYPE
 
yylvÆ
;

213 
yy∑r£
 ();

227 #i‚de‡
__PTRDIFF_MAX__


228 
	~<limôs.h
>

229 #i‡
deföed
 
__STDC_VERSION__
 && 199901 <= __STDC_VERSION__

230 
	~<°döt.h
>

231 
	#YY_STDINT_H


	)

240 #ifde‡
__INT_LEAST8_MAX__


241 
__INT_LEAST8_TYPE__
 
	tyyty≥_öt8
;

242 #ñi‡
deföed
 
YY_STDINT_H


243 
öt_Àa°8_t
 
	tyyty≥_öt8
;

245 sig√d 
	tyyty≥_öt8
;

248 #ifde‡
__INT_LEAST16_MAX__


249 
__INT_LEAST16_TYPE__
 
	tyyty≥_öt16
;

250 #ñi‡
deföed
 
YY_STDINT_H


251 
öt_Àa°16_t
 
	tyyty≥_öt16
;

253 
	tyyty≥_öt16
;

256 #i‡
deföed
 
__UINT_LEAST8_MAX__
 && __UINT_LEAST8_MAX__ <
__INT_MAX__


257 
__UINT_LEAST8_TYPE__
 
	tyyty≥_uöt8
;

258 #ñi‡(!
deföed
 
__UINT_LEAST8_MAX__
 && deföed 
YY_STDINT_H
 \

259 && 
	gUINT_LEAST8_MAX
 <
INT_MAX
)

260 
uöt_Àa°8_t
 
	tyyty≥_uöt8
;

261 #ñi‡!
deföed
 
__UINT_LEAST8_MAX__
 && 
UCHAR_MAX
 <
INT_MAX


262 
	tyyty≥_uöt8
;

264 
	tyyty≥_uöt8
;

267 #i‡
deföed
 
__UINT_LEAST16_MAX__
 && __UINT_LEAST16_MAX__ <
__INT_MAX__


268 
__UINT_LEAST16_TYPE__
 
	tyyty≥_uöt16
;

269 #ñi‡(!
deföed
 
__UINT_LEAST16_MAX__
 && deföed 
YY_STDINT_H
 \

270 && 
	gUINT_LEAST16_MAX
 <
INT_MAX
)

271 
uöt_Àa°16_t
 
	tyyty≥_uöt16
;

272 #ñi‡!
deföed
 
__UINT_LEAST16_MAX__
 && 
USHRT_MAX
 <
INT_MAX


273 
	tyyty≥_uöt16
;

275 
	tyyty≥_uöt16
;

278 #i‚de‡
YYPTRDIFF_T


279 #i‡
deföed
 
__PTRDIFF_TYPE__
 && deföed 
__PTRDIFF_MAX__


280 
	#YYPTRDIFF_T
 
__PTRDIFF_TYPE__


	)

281 
	#YYPTRDIFF_MAXIMUM
 
__PTRDIFF_MAX__


	)

282 #ñi‡
deföed
 
PTRDIFF_MAX


283 #i‚de‡
±rdiff_t


284 
	~<°ddef.h
>

286 
	#YYPTRDIFF_T
 
±rdiff_t


	)

287 
	#YYPTRDIFF_MAXIMUM
 
PTRDIFF_MAX


	)

289 
	#YYPTRDIFF_T
 

	)

290 
	#YYPTRDIFF_MAXIMUM
 
LONG_MAX


	)

294 #i‚de‡
YYSIZE_T


295 #ifde‡
__SIZE_TYPE__


296 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

297 #ñi‡
deföed
 
size_t


298 
	#YYSIZE_T
 
size_t


	)

299 #ñi‡
deföed
 
__STDC_VERSION__
 && 199901 <= __STDC_VERSION__

300 
	~<°ddef.h
>

301 
	#YYSIZE_T
 
size_t


	)

303 
	#YYSIZE_T
 

	)

307 
	#YYSIZE_MAXIMUM
 \

308 
	`YY_CAST
 (
YYPTRDIFF_T
, \

309 (
YYPTRDIFF_MAXIMUM
 < 
	`YY_CAST
 (
YYSIZE_T
, -1) \

310 ? 
YYPTRDIFF_MAXIMUM
 \

311 : 
	`YY_CAST
 (
YYSIZE_T
, -1)))

	)

313 
	#YYSIZEOF
(
X
Ë
	`YY_CAST
 (
YYPTRDIFF_T
,  (X))

	)

316 
yyty≥_öt8
 
	tyy_°©e_t
;

319 
	tyy_°©e_Á°_t
;

321 #i‚de‡
YY_


322 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

323 #i‡
ENABLE_NLS


324 
	~<liböé.h
>

325 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

328 #i‚de‡
YY_


329 
	#YY_
(
Msgid
Ë
	)
Msgid

333 #i‚de‡
YY_ATTRIBUTE_PURE


334 #i‡
deföed
 
__GNUC__
 && 2 < __GNUC__ + (96 <
__GNUC_MINOR__
)

335 
	#YY_ATTRIBUTE_PURE
 
	`__©åibuã__
 ((
__puª__
))

	)

337 
	#YY_ATTRIBUTE_PURE


	)

341 #i‚de‡
YY_ATTRIBUTE_UNUSED


342 #i‡
deföed
 
__GNUC__
 && 2 < __GNUC__ + (7 <
__GNUC_MINOR__
)

343 
	#YY_ATTRIBUTE_UNUSED
 
	`__©åibuã__
 ((
__unu£d__
))

	)

345 
	#YY_ATTRIBUTE_UNUSED


	)

350 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


351 
	#YYUSE
(
E
Ë((Ë(E))

	)

353 
	#YYUSE
(
E
Ë

	)

356 #i‡
deföed
 
__GNUC__
 && ! deföed 
__ICC
 && 407 <__GNUC__ * 100 + 
__GNUC_MINOR__


358 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

359 
	`_Pøgma
 ("GCC diagnosticÖush") \

360 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"") \

361 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

362 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

363 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

365 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
Value

367 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


368 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

369 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

371 #i‚de‡
YY_INITIAL_VALUE


372 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

375 #i‡
deföed
 
__˝lu•lus
 && deföed 
__GNUC__
 && ! deföed 
__ICC
 && 6 <= __GNUC__

376 
	#YY_IGNORE_USELESS_CAST_BEGIN
 \

377 
	`_Pøgma
 ("GCC diagnosticÖush") \

378 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wu£Àss-ˇ°\"")

	)

379 
	#YY_IGNORE_USELESS_CAST_END
 \

380 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

382 #i‚de‡
YY_IGNORE_USELESS_CAST_BEGIN


383 
	#YY_IGNORE_USELESS_CAST_BEGIN


	)

384 
	#YY_IGNORE_USELESS_CAST_END


	)

388 
	#YY_ASSERT
(
E
Ë((Ë(0 && (E)))

	)

390 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


394 #ifde‡
YYSTACK_USE_ALLOCA


395 #i‡
YYSTACK_USE_ALLOCA


396 #ifde‡
__GNUC__


397 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

398 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


399 
	~<Æloˇ.h
>

400 #ñi‡
deföed
 
_AIX


401 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

402 #ñi‡
deföed
 
_MSC_VER


403 
	~<mÆloc.h
>

404 
	#Æloˇ
 
_Æloˇ


	)

406 
	#YYSTACK_ALLOC
 
Æloˇ


	)

407 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


408 
	~<°dlib.h
>

410 #i‚de‡
EXIT_SUCCESS


411 
	#EXIT_SUCCESS
 0

	)

418 #ifde‡
YYSTACK_ALLOC


420 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

421 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


426 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

429 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

430 
	#YYSTACK_FREE
 
YYFREE


	)

431 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


432 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

434 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

435 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

436 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

437 
	~<°dlib.h
>

438 #i‚de‡
EXIT_SUCCESS


439 
	#EXIT_SUCCESS
 0

	)

442 #i‚de‡
YYMALLOC


443 
	#YYMALLOC
 
mÆloc


	)

444 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


445 *
mÆloc
 (
YYSIZE_T
);

448 #i‚de‡
YYFREE


449 
	#YYFREE
 
‰ì


	)

450 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


451 
‰ì
 (*);

458 #i‡(! 
deföed
 
yyovîÊow
 \

459 && (! 
deföed
 
	g__˝lu•lus
 \

460 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

463 
	uyyÆloc


465 
yy_°©e_t
 
	myyss_Æloc
;

466 
YYSTYPE
 
	myyvs_Æloc
;

470 
	#YYSTACK_GAP_MAXIMUM
 (
	`YYSIZEOF
 (
yyÆloc
Ë- 1)

	)

474 
	#YYSTACK_BYTES
(
N
) \

475 ((
N
Ë* (
	`YYSIZEOF
 (
yy_°©e_t
Ë+ YYSIZEOF (
YYSTYPE
)) \

476 + 
YYSTACK_GAP_MAXIMUM
)

	)

478 
	#YYCOPY_NEEDED
 1

	)

485 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

488 
YYPTRDIFF_T
 
yy√wbyãs
; \

489 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

490 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

491 
yy√wbyãs
 = 
yy°acksize
 * 
	`YYSIZEOF
 (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

492 
yy±r
 +
yy√wbyãs
 / 
	`YYSIZEOF
 (*yyptr); \

494 0)

	)

498 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

501 #i‚de‡
YYCOPY


502 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

503 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

504 
	`__buûtö_mem˝y
 (
D°
, 
Src
, 
	`YY_CAST
 (
YYSIZE_T
, (
Cou¡
)Ë*  (*(Src)))

	)

506 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

509 
YYPTRDIFF_T
 
yyi
; \

510 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

511 (
D°
)[
yyi
] = (
Src
)[yyi]; \

513 0)

	)

519 
	#YYFINAL
 9

	)

521 
	#YYLAST
 101

	)

524 
	#YYNTOKENS
 32

	)

526 
	#YYNNTS
 32

	)

528 
	#YYNRULES
 66

	)

530 
	#YYNSTATES
 106

	)

532 
	#YYUNDEFTOK
 2

	)

533 
	#YYMAXUTOK
 286

	)

538 
	#YYTRANSLATE
(
YYX
) \

539 (0 <(
YYX
Ë&& (YYXË<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

543 c⁄° 
yyty≥_öt8
 
	gyyå™¶©e
[] =

576 #i‡
YYDEBUG


578 c⁄° 
yyty≥_öt16
 
	gyyæöe
[] =

590 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 0

593 c⁄° *c⁄° 
	gyyäame
[] =

605 "mul›", "Á˘‹", "ˇŒ", "¨gs", "¨g_li°", 
YY_NULLPTR


609 #ifde‡
YYPRINT


612 c⁄° 
yyty≥_öt16
 
	gyytoknum
[] =

621 
	#YYPACT_NINF
 (-88)

	)

623 
	#yy∑˘_vÆue_is_deÁu…
(
Yyn
) \

624 ((
Yyn
Ë=
YYPACT_NINF
)

	)

626 
	#YYTABLE_NINF
 (-16)

	)

628 
	#yyèbÀ_vÆue_is_îr‹
(
Yyn
) \

629 0

	)

633 c⁄° 
yyty≥_öt8
 
	gyy∑˘
[] =

651 c⁄° 
yyty≥_öt8
 
	gyydeÁ˘
[] =

667 c⁄° 
yyty≥_öt8
 
	gyypgŸo
[] =

676 c⁄° 
yyty≥_öt8
 
	gyydefgŸo
[] =

687 c⁄° 
yyty≥_öt8
 
	gyyèbÀ
[] =

702 c⁄° 
yyty≥_öt8
 
	gyycheck
[] =

719 c⁄° 
yyty≥_öt8
 
	gyy°os
[] =

735 c⁄° 
yyty≥_öt8
 
	gyyr1
[] =

747 c⁄° 
yyty≥_öt8
 
	gyyr2
[] =

759 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

760 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

761 
	#YYEMPTY
 (-2)

	)

762 
	#YYEOF
 0

	)

764 
	#YYACCEPT
 
yyac˚±œb


	)

765 
	#YYABORT
 
yyab‹éab


	)

766 
	#YYERROR
 
yyîr‹œb


	)

769 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

771 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

773 i‡(
yych¨
 =
YYEMPTY
) \

775 
yych¨
 = (
Tokí
); \

776 
yylvÆ
 = (
VÆue
); \

777 
	`YYPOPSTACK
 (
yyÀn
); \

778 
yy°©e
 = *
yys•
; \

779 
yybackup
; \

783 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

784 
YYERROR
; \

786 0)

	)

789 
	#YYTERROR
 1

	)

790 
	#YYERRCODE
 256

	)

795 #i‡
YYDEBUG


797 #i‚de‡
YYFPRINTF


798 
	~<°dio.h
>

799 
	#YYFPRINTF
 
Ârötf


	)

802 
	#YYDPRINTF
(
Args
) \

804 i‡(
yydebug
) \

805 
YYFPRINTF
 
Args
; \

806 } 0)

	)

809 #i‚de‡
YY_LOCATION_PRINT


810 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

814 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

816 i‡(
yydebug
) \

818 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

819 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

820 
Ty≥
, 
VÆue
); \

821 
	`YYFPRINTF
 (
°dîr
, "\n"); \

823 } 0)

	)

831 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyo
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

833 
FILE
 *
yyouçut
 = 
yyo
;

834 
	`YYUSE
 (
yyouçut
);

835 i‡(!
yyvÆuï
)

837 #ifde‡
YYPRINT


838 i‡(
yyty≥
 < 
YYNTOKENS
)

839 
	`YYPRINT
 (
yyo
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

841 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


842 
	`YYUSE
 (
yyty≥
);

843 
YY_IGNORE_MAYBE_UNINITIALIZED_END


844 
	}
}

852 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyo
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

854 
	`YYFPRINTF
 (
yyo
, "%s %s (",

855 
yyty≥
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
yyäame
[yytype]);

857 
	`yy_symbﬁ_vÆue_¥öt
 (
yyo
, 
yyty≥
, 
yyvÆuï
);

858 
	`YYFPRINTF
 (
yyo
, ")");

859 
	}
}

867 
	$yy_°ack_¥öt
 (
yy_°©e_t
 *
yybŸtom
, yy_°©e_à*
yyt›
)

869 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

870 ; 
yybŸtom
 <
yyt›
; yybottom++)

872 
yybŸ
 = *
yybŸtom
;

873 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

875 
	`YYFPRINTF
 (
°dîr
, "\n");

876 
	}
}

878 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

880 i‡(
yydebug
) \

881 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

882 } 0)

	)

890 
	$yy_ªdu˚_¥öt
 (
yy_°©e_t
 *
yys•
, 
YYSTYPE
 *
yyv•
, 
yyruÀ
)

892 
yy o
 = 
yyæöe
[
yyruÀ
];

893 
yyƒhs
 = 
yyr2
[
yyruÀ
];

894 
yyi
;

895 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %d):\n",

896 
yyruÀ
 - 1, 
yy o
);

898 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

900 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

901 
	`yy_symbﬁ_¥öt
 (
°dîr
,

902 
yy°os
[+
yys•
[
yyi
 + 1 - 
yyƒhs
]],

903 &
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)]

905 
	`YYFPRINTF
 (
°dîr
, "\n");

907 
	}
}

909 
	#YY_REDUCE_PRINT
(
RuÀ
) \

911 i‡(
yydebug
) \

912 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
RuÀ
); \

913 } 0)

	)

917 
	gyydebug
;

919 
	#YYDPRINTF
(
Args
)

	)

920 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

921 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

922 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

927 #i‚de‡
YYINITDEPTH


928 
	#YYINITDEPTH
 200

	)

938 #i‚de‡
YYMAXDEPTH


939 
	#YYMAXDEPTH
 10000

	)

943 #i‡
YYERROR_VERBOSE


945 #i‚de‡
yy°æí


946 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


947 
	#yy°æí
(
S
Ë(
	`YY_CAST
 (
YYPTRDIFF_T
, 
	`°æí
 (S)))

	)

950 
YYPTRDIFF_T


951 
	$yy°æí
 (c⁄° *
yy°r
)

953 
YYPTRDIFF_T
 
yyÀn
;

954 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

956  
yyÀn
;

957 
	}
}

961 #i‚de‡
yy°p˝y


962 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


963 
	#yy°p˝y
 
°p˝y


	)

968 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

970 *
yyd
 = 
yyde°
;

971 c⁄° *
yys
 = 
yy§c
;

973 (*
yyd
++ = *
yys
++) != '\0')

976  
yyd
 - 1;

977 
	}
}

981 #i‚de‡
yyäamîr


989 
YYPTRDIFF_T


990 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

992 i‡(*
yy°r
 == '"')

994 
YYPTRDIFF_T
 
yyn
 = 0;

995 c⁄° *
yyp
 = 
yy°r
;

998 *++
yyp
)

1002 
do_nŸ_°rù_quŸes
;

1005 i‡(*++
yyp
 != '\\')

1006 
do_nŸ_°rù_quŸes
;

1008 
≠≥nd
;

1010 
≠≥nd
:

1012 i‡(
yyªs
)

1013 
yyªs
[
yyn
] = *
yyp
;

1014 
yyn
++;

1018 i‡(
yyªs
)

1019 
yyªs
[
yyn
] = '\0';

1020  
yyn
;

1022 
do_nŸ_°rù_quŸes
: ;

1025 i‡(
yyªs
)

1026  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1028  
	`yy°æí
 (
yy°r
);

1029 
	}
}

1041 
	$yysy¡ax_îr‹
 (
YYPTRDIFF_T
 *
yymsg_Æloc
, **
yymsg
,

1042 
yy_°©e_t
 *
yys•
, 
yytokí
)

1044 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1046 c⁄° *
yyf‹m©
 = 
YY_NULLPTR
;

1049 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1051 
yycou¡
 = 0;

1053 
YYPTRDIFF_T
 
yysize
 = 0;

1078 i‡(
yytokí
 !
YYEMPTY
)

1080 
yyn
 = 
yy∑˘
[+*
yys•
];

1081 
YYPTRDIFF_T
 
yysize0
 = 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yytokí
]);

1082 
yysize
 = 
yysize0
;

1083 
yy¨g
[
yycou¡
++] = 
yyäame
[
yytokí
];

1084 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1089 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1091 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1092 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1093 
yyx
;

1095 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1096 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR


1097 && !
	`yyèbÀ_vÆue_is_îr‹
 (
yyèbÀ
[
yyx
 + 
yyn
]))

1099 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1101 
yycou¡
 = 1;

1102 
yysize
 = 
yysize0
;

1105 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1107 
YYPTRDIFF_T
 
yysize1


1108 
yysize
 + 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yyx
]);

1109 i‡(
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
)

1110 
yysize
 = 
yysize1
;

1118 
yycou¡
)

1120 
	#YYCASE_
(
N
, 
S
) \

1121 
N
: \

1122 
yyf‹m©
 = 
S
; \

1123 

	)

1125 
	`YYCASE_
(0, 
	`YY_
("syntaxÉrror"));

1126 
	`YYCASE_
(1, 
	`YY_
("syntaxÉrror, unexpected %s"));

1127 
	`YYCASE_
(2, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s"));

1128 
	`YYCASE_
(3, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s"));

1129 
	`YYCASE_
(4, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s"));

1130 
	`YYCASE_
(5, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s"));

1131 #unde‡
YYCASE_


1137 
YYPTRDIFF_T
 
yysize1
 = 
yysize
 + (
	`yy°æí
 (
yyf‹m©
Ë- 2 * 
yycou¡
) + 1;

1138 i‡(
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
)

1139 
yysize
 = 
yysize1
;

1144 i‡(*
yymsg_Æloc
 < 
yysize
)

1146 *
yymsg_Æloc
 = 2 * 
yysize
;

1147 i‡(! (
yysize
 <*
yymsg_Æloc


1148 && *
yymsg_Æloc
 <
YYSTACK_ALLOC_MAXIMUM
))

1149 *
yymsg_Æloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1157 *
yyp
 = *
yymsg
;

1158 
yyi
 = 0;

1159 (*
yyp
 = *
yyf‹m©
) != '\0')

1160 i‡(*
yyp
 ='%' && 
yyf‹m©
[1] ='s' && 
yyi
 < 
yycou¡
)

1162 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1163 
yyf‹m©
 += 2;

1167 ++
yyp
;

1168 ++
yyf‹m©
;

1172 
	}
}

1180 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1182 
	`YYUSE
 (
yyvÆuï
);

1183 i‡(!
yymsg
)

1184 
yymsg
 = "Deleting";

1185 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1187 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1188 
	`YYUSE
 (
yyty≥
);

1189 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1190 
	}
}

1196 
	gyych¨
;

1199 
YYSTYPE
 
	gyylvÆ
;

1201 
	gyy√ºs
;

1209 
	$yy∑r£
 ()

1211 
yy_°©e_Á°_t
 
yy°©e
;

1213 
yyîr°©us
;

1223 
yy_°©e_t
 
yysß
[
YYINITDEPTH
];

1224 
yy_°©e_t
 *
yyss
;

1225 
yy_°©e_t
 *
yys•
;

1228 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1229 
YYSTYPE
 *
yyvs
;

1230 
YYSTYPE
 *
yyv•
;

1232 
YYPTRDIFF_T
 
yy°acksize
;

1234 
yyn
;

1235 
yyªsu…
;

1237 
yytokí
 = 0;

1240 
YYSTYPE
 
yyvÆ
;

1242 #i‡
YYERROR_VERBOSE


1244 
yymsgbuf
[128];

1245 *
yymsg
 = 
yymsgbuf
;

1246 
YYPTRDIFF_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1249 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1253 
yyÀn
 = 0;

1255 
yys•
 = 
yyss
 = 
yysß
;

1256 
yyv•
 = 
yyvs
 = 
yyvß
;

1257 
yy°acksize
 = 
YYINITDEPTH
;

1259 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1261 
yy°©e
 = 0;

1262 
yyîr°©us
 = 0;

1263 
yy√ºs
 = 0;

1264 
yych¨
 = 
YYEMPTY
;

1265 
yy£t°©e
;

1271 
yy√w°©e
:

1274 
yys•
++;

1280 
yy£t°©e
:

1281 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1282 
	`YY_ASSERT
 (0 <
yy°©e
 && yy°©ê< 
YYNSTATES
);

1283 
YY_IGNORE_USELESS_CAST_BEGIN


1284 *
yys•
 = 
	`YY_CAST
 (
yy_°©e_t
, 
yy°©e
);

1285 
YY_IGNORE_USELESS_CAST_END


1287 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1288 #i‡!
deföed
 
yyovîÊow
 && !deföed 
YYSTACK_RELOCATE


1289 
yyexhau°edœb
;

1293 
YYPTRDIFF_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1295 #i‡
deföed
 
yyovîÊow


1300 
yy_°©e_t
 *
yyss1
 = 
yyss
;

1301 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1307 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1308 &
yyss1
, 
yysize
 * 
	`YYSIZEOF
 (*
yys•
),

1309 &
yyvs1
, 
yysize
 * 
	`YYSIZEOF
 (*
yyv•
),

1310 &
yy°acksize
);

1311 
yyss
 = 
yyss1
;

1312 
yyvs
 = 
yyvs1
;

1316 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1317 
yyexhau°edœb
;

1318 
yy°acksize
 *= 2;

1319 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1320 
yy°acksize
 = 
YYMAXDEPTH
;

1323 
yy_°©e_t
 *
yyss1
 = 
yyss
;

1324 
yyÆloc
 *
yy±r
 =

1325 
	`YY_CAST
 (
yyÆloc
 *,

1326 
	`YYSTACK_ALLOC
 (
	`YY_CAST
 (
YYSIZE_T
, 
	`YYSTACK_BYTES
 (
yy°acksize
))));

1327 i‡(! 
yy±r
)

1328 
yyexhau°edœb
;

1329 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1330 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1331 #unde‡
YYSTACK_RELOCATE


1332 i‡(
yyss1
 !
yysß
)

1333 
	`YYSTACK_FREE
 (
yyss1
);

1337 
yys•
 = 
yyss
 + 
yysize
 - 1;

1338 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1340 
YY_IGNORE_USELESS_CAST_BEGIN


1341 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %ld\n",

1342 
	`YY_CAST
 (, 
yy°acksize
)));

1343 
YY_IGNORE_USELESS_CAST_END


1345 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1346 
YYABORT
;

1350 i‡(
yy°©e
 =
YYFINAL
)

1351 
YYACCEPT
;

1353 
yybackup
;

1359 
yybackup
:

1364 
yyn
 = 
yy∑˘
[
yy°©e
];

1365 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1366 
yydeÁu…
;

1371 i‡(
yych¨
 =
YYEMPTY
)

1373 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1374 
yych¨
 = 
	`yyÀx
 ();

1377 i‡(
yych¨
 <
YYEOF
)

1379 
yych¨
 = 
yytokí
 = 
YYEOF
;

1380 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1384 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1385 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1390 
yyn
 +
yytokí
;

1391 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1392 
yydeÁu…
;

1393 
yyn
 = 
yyèbÀ
[yyn];

1394 i‡(
yyn
 <= 0)

1396 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

1397 
yyîæab
;

1398 
yyn
 = -yyn;

1399 
yyªdu˚
;

1404 i‡(
yyîr°©us
)

1405 
yyîr°©us
--;

1408 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1409 
yy°©e
 = 
yyn
;

1410 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1411 *++
yyv•
 = 
yylvÆ
;

1412 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1415 
yych¨
 = 
YYEMPTY
;

1416 
yy√w°©e
;

1422 
yydeÁu…
:

1423 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1424 i‡(
yyn
 == 0)

1425 
yyîæab
;

1426 
yyªdu˚
;

1432 
yyªdu˚
:

1434 
yyÀn
 = 
yyr2
[
yyn
];

1444 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1447 
	`YY_REDUCE_PRINT
 (
yyn
);

1448 
yyn
)

1452 { 
ßvedTªe
 = 
yyv•
[0]; }

1458 { 
YYSTYPE
 
t
 = 
yyv•
[-1];

1459 i‡(
t
 !
NULL
) {

1460 
t
->
siblög
 !
NULL
) {Å =Å->sibling; }

1461 
t
->
siblög
 = 
yyv•
[0];

1462 
yyvÆ
 = 
yyv•
[-1];

1464 
yyvÆ
 = 
yyv•
[0];

1472 { 
yyvÆ
 = 
yyv•
[0]; }

1478 { 
yyvÆ
 = 
yyv•
[0]; }

1484 { 
yyvÆ
 = 
yyv•
[0]; }

1490 { 
ßvedName
 = 
	`c›ySåög
(
tokíSåög
);

1491 
ßvedLöeNo
 = 
löío
;

1498 { 
ßvedNumbî
 = 
	`©oi
(
tokíSåög
);

1499 
ßvedLöeNo
 = 
löío
;

1506 { 
yyvÆ
 = 
	`√wDe˛Node
(
V¨K
);

1507 
yyvÆ
->
ty≥
=
ßvedTy≥
;

1508 
yyvÆ
->
löío
 =Üineno;

1509 
yyvÆ
->
©å
.
«me
 = 
ßvedName
;

1516 { 
yyvÆ
 = 
	`√wDe˛Node
(
AºK
);

1517 
yyvÆ
->
ty≥
=
I¡Aºay
;

1518 
yyvÆ
->
©å
.
«me
=
ßvedName
;

1519 
yyvÆ
->
chûd
[0] = 
	`√wExpNode
(
C⁄°K
);

1520 
yyvÆ
->
chûd
[0]->
©å
.
vÆ
=
ßvedNumbî
;

1521 
yyvÆ
->
löío
=lineno;

1528 { 
ßvedTy≥
=
I¡egî
; }

1534 { 
ßvedTy≥
=
Void
;}

1540 { 
yyvÆ
 = 
	`√wDe˛Node
(
FuncK
);

1541 
yyvÆ
->
ty≥
=
ßvedTy≥
;

1542 
yyvÆ
->
©å
.
«me
=
ßvedName
;

1543 
yyvÆ
->
löío
=lineno;

1544 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1545 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1552 { 
yyvÆ
 = 
yyv•
[0]; }

1558 { 
yyvÆ
 = 
	`√wDe˛Node
(
VoidP¨amK
);

1565 { 
YYSTYPE
 
t
 = 
yyv•
[-2];

1566 i‡(
t
 !
NULL
) {

1567 
t
->
siblög
 !
NULL
) {Å =Å->sibling; }

1568 
t
->
siblög
 = 
yyv•
[0];

1569 
yyvÆ
 = 
yyv•
[-2];

1571 
yyvÆ
 = 
yyv•
[0];

1579 { 
yyvÆ
 = 
yyv•
[0]; }

1585 { 
yyvÆ
 = 
	`√wDe˛Node
(
P¨amK
);

1586 
yyvÆ
->
ty≥
=
ßvedTy≥
;

1587 
yyvÆ
->
©å
.
«me
 = 
ßvedName
;

1594 { 
yyvÆ
 = 
	`√wDe˛Node
(
AºP¨amK
);

1595 
yyvÆ
->
©å
.
«me
 = 
	`c›ySåög
(
ßvedName
);

1596 
yyvÆ
->
ty≥
=
I¡Aºay
;

1603 { 
yyvÆ
 = 
	`√wStmtNode
(
CompoundK
);

1604 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1605 
yyvÆ
->
chûd
[1] = 
yyv•
[-1];

1612 { 
YYSTYPE
 
t
 = 
yyv•
[-1];

1613 i‡(
t
 !
NULL
) {

1614 
t
->
siblög
 !
NULL
) {Å =Å->sibling; }

1615 
t
->
siblög
 = 
yyv•
[0];

1616 
yyvÆ
 = 
yyv•
[-1];

1618 
yyvÆ
 = 
yyv•
[0];

1626 { 
yyvÆ
 = 
NULL
; }

1632 { 
YYSTYPE
 
t
 = 
yyv•
[-1];

1633 i‡(
t
 !
NULL
) {

1634 
t
->
siblög
 !
NULL
) {Å =Å->sibling; }

1635 
t
->
siblög
 = 
yyv•
[0];

1636 
yyvÆ
 = 
yyv•
[-1];

1638 
yyvÆ
 = 
yyv•
[0];

1646 { 
yyvÆ
 = 
NULL
; }

1652 { 
yyvÆ
 = 
yyv•
[0]; }

1658 { 
yyvÆ
 = 
yyv•
[0]; }

1664 { 
yyvÆ
 = 
yyv•
[0]; }

1670 { 
yyvÆ
 = 
yyv•
[0]; }

1676 { 
yyvÆ
 = 
yyv•
[0]; }

1682 { 
	`yyîr‹
("Sy¡axÉº‹ i¿°©emít."); 
yyîrok
; }

1688 { 
yyvÆ
 = 
yyv•
[-1]; }

1694 { 
yyvÆ
 = 
NULL
; }

1701 
yyvÆ
 = 
	`√wStmtNode
(
IfK
);

1702 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1703 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1711 
yyvÆ
 = 
	`√wStmtNode
(
IfK
);

1712 
yyvÆ
->
chûd
[0] = 
yyv•
[-4];

1713 
yyvÆ
->
chûd
[1] = 
yyv•
[-2];

1714 
yyvÆ
->
chûd
[2] = 
yyv•
[0];

1721 { 
yyvÆ
 = 
	`√wStmtNode
(
WhûeK
);

1722 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1723 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1730 { 
yyvÆ
 = 
	`√wStmtNode
(
Rëu∫K
);

1737 { 
yyvÆ
 = 
	`√wStmtNode
(
Rëu∫K
);

1738 
yyvÆ
->
chûd
[0] = 
yyv•
[-1];

1745 { 
yyvÆ
 = 
	`√wStmtNode
(
AssignK
);

1746 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1747 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1754 { 
yyvÆ
 = 
yyv•
[0]; }

1760 { 
yyvÆ
 = 
	`√wExpNode
(
IdK
);

1768 
yyvÆ
 = 
	`√wExpNode
(
AºIdK
);

1769 
yyvÆ
->
chûd
[0] = 
yyv•
[-1];

1776 { 
yyvÆ
 = 
	`√wExpNode
(
OpK
);

1777 
yyvÆ
->
ty≥
=
yyv•
[-1]->type;

1778 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1779 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1786 { 
yyvÆ
 = 
yyv•
[0]; }

1792 { 
yyvÆ
->
©å
.
›
 = 
LT
; }

1798 { 
yyvÆ
->
©å
.
›
 = 
LE
; }

1804 { 
yyvÆ
->
©å
.
›
 = 
GT
; }

1810 { 
yyvÆ
->
©å
.
›
 = 
GE
; }

1816 { 
yyvÆ
->
©å
.
›
 = 
EQ
; }

1822 { 
yyvÆ
->
©å
.
›
 = 
NE
; }

1828 { 
yyvÆ
 = 
	`√wExpNode
(
OpK
);

1829 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1830 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1837 { 
yyvÆ
 = 
yyv•
[0]; }

1843 { 
yyvÆ
->
©å
.
›
 = 
PLUS
; }

1849 { 
yyvÆ
->
©å
.
›
 = 
MINUS
; }

1855 { 
yyvÆ
 = 
	`√wExpNode
(
OpK
);

1856 
yyvÆ
->
chûd
[0] = 
yyv•
[-2];

1857 
yyvÆ
->
chûd
[1] = 
yyv•
[0];

1864 { 
yyvÆ
 = 
yyv•
[0]; }

1870 { 
yyvÆ
->
©å
.
›
 = 
TIMES
; }

1876 { 
yyvÆ
->
©å
.
›
 = 
OVER
; }

1882 { 
yyvÆ
 = 
yyv•
[-1]; }

1888 { 
yyvÆ
 = 
yyv•
[0]; }

1894 { 
yyvÆ
 = 
yyv•
[0]; }

1900 { 
yyvÆ
 = 
	`√wExpNode
(
C⁄°K
);

1901 
yyvÆ
->
©å
.
vÆ
=
ßvedNumbî
;

1908 { 
yyvÆ
 = 
	`√wExpNode
(
CÆlK
);

1909 
yyvÆ
->
©å
.
«me
 = 
ßvedName
;

1910 
yyvÆ
->
chûd
[0] = 
yyv•
[-1];

1917 { 
yyvÆ
 = 
yyv•
[0]; }

1923 { 
yyvÆ
 = 
NULL
; }

1929 { 
YYSTYPE
 
t
 = 
yyv•
[-2];

1930 i‡(
t
 !
NULL
) {

1931 
t
->
siblög
 !
NULL
) {Å =Å->sibling; }

1932 
t
->
siblög
 = 
yyv•
[0];

1933 
yyvÆ
 = 
yyv•
[-2];

1935 
yyvÆ
 = 
yyv•
[0];

1943 { 
yyvÆ
 = 
yyv•
[0]; }

1963 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

1965 
	`YYPOPSTACK
 (
yyÀn
);

1966 
yyÀn
 = 0;

1967 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

1969 *++
yyv•
 = 
yyvÆ
;

1975 c⁄° 
yylhs
 = 
yyr1
[
yyn
] - 
YYNTOKENS
;

1976 c⁄° 
yyi
 = 
yypgŸo
[
yylhs
] + *
yys•
;

1977 
yy°©e
 = (0 <
yyi
 && yyò<
YYLAST
 && 
yycheck
[yyi] =*
yys•


1978 ? 
yyèbÀ
[
yyi
]

1979 : 
yydefgŸo
[
yylhs
]);

1982 
yy√w°©e
;

1988 
yyîæab
:

1991 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? YYEMPTY : 
	`YYTRANSLATE
 (yychar);

1994 i‡(!
yyîr°©us
)

1996 ++
yy√ºs
;

1997 #i‡! 
YYERROR_VERBOSE


1998 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

2000 
	#YYSYNTAX_ERROR
 
	`yysy¡ax_îr‹
 (&
yymsg_Æloc
, &
yymsg
, \

2001 
yys•
, 
yytokí
)

	)

2003 c⁄° *
yymsgp
 = 
	`YY_
("syntaxÉrror");

2004 
yysy¡ax_îr‹_°©us
;

2005 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

2006 i‡(
yysy¡ax_îr‹_°©us
 == 0)

2007 
yymsgp
 = 
yymsg
;

2008 i‡(
yysy¡ax_îr‹_°©us
 == 1)

2010 i‡(
yymsg
 !
yymsgbuf
)

2011 
	`YYSTACK_FREE
 (
yymsg
);

2012 
yymsg
 = 
	`YY_CAST
 (*, 
	`YYSTACK_ALLOC
 (YY_CAST (
YYSIZE_T
, 
yymsg_Æloc
)));

2013 i‡(!
yymsg
)

2015 
yymsg
 = 
yymsgbuf
;

2016 
yymsg_Æloc
 =  
yymsgbuf
;

2017 
yysy¡ax_îr‹_°©us
 = 2;

2021 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

2022 
yymsgp
 = 
yymsg
;

2025 
	`yyîr‹
 (
yymsgp
);

2026 i‡(
yysy¡ax_îr‹_°©us
 == 2)

2027 
yyexhau°edœb
;

2029 #unde‡
YYSYNTAX_ERROR


2035 i‡(
yyîr°©us
 == 3)

2040 i‡(
yych¨
 <
YYEOF
)

2043 i‡(
yych¨
 =
YYEOF
)

2044 
YYABORT
;

2048 
	`yyde°ru˘
 ("Error: discarding",

2049 
yytokí
, &
yylvÆ
);

2050 
yych¨
 = 
YYEMPTY
;

2056 
yyîæab1
;

2062 
yyîr‹œb
:

2066 
YYERROR
;

2070 
	`YYPOPSTACK
 (
yyÀn
);

2071 
yyÀn
 = 0;

2072 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2073 
yy°©e
 = *
yys•
;

2074 
yyîæab1
;

2080 
yyîæab1
:

2081 
yyîr°©us
 = 3;

2085 
yyn
 = 
yy∑˘
[
yy°©e
];

2086 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

2088 
yyn
 +
YYTERROR
;

2089 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

2091 
yyn
 = 
yyèbÀ
[yyn];

2092 i‡(0 < 
yyn
)

2098 i‡(
yys•
 =
yyss
)

2099 
YYABORT
;

2102 
	`yyde°ru˘
 ("Error:Öopping",

2103 
yy°os
[
yy°©e
], 
yyv•
);

2104 
	`YYPOPSTACK
 (1);

2105 
yy°©e
 = *
yys•
;

2106 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2109 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


2110 *++
yyv•
 = 
yylvÆ
;

2111 
YY_IGNORE_MAYBE_UNINITIALIZED_END


2115 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

2117 
yy°©e
 = 
yyn
;

2118 
yy√w°©e
;

2124 
yyac˚±œb
:

2125 
yyªsu…
 = 0;

2126 
yyªtu∫
;

2132 
yyab‹éab
:

2133 
yyªsu…
 = 1;

2134 
yyªtu∫
;

2137 #i‡!
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


2141 
yyexhau°edœb
:

2142 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

2143 
yyªsu…
 = 2;

2151 
yyªtu∫
:

2152 i‡(
yych¨
 !
YYEMPTY
)

2156 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

2157 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

2158 
yytokí
, &
yylvÆ
);

2162 
	`YYPOPSTACK
 (
yyÀn
);

2163 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2164 
yys•
 !
yyss
)

2166 
	`yyde°ru˘
 ("Cleanup:Öopping",

2167 
yy°os
[+*
yys•
], 
yyv•
);

2168 
	`YYPOPSTACK
 (1);

2170 #i‚de‡
yyovîÊow


2171 i‡(
yyss
 !
yysß
)

2172 
	`YYSTACK_FREE
 (
yyss
);

2174 #i‡
YYERROR_VERBOSE


2175 i‡(
yymsg
 !
yymsgbuf
)

2176 
	`YYSTACK_FREE
 (
yymsg
);

2178  
yyªsu…
;

2179 
	}
}

2187 
	$yyîr‹
(* 
mesßge
) {

2188 
	`Ârötf
(
li°ög
,"Sy¡axÉº‹áàlöê%d: %s\n",
löío
,
mesßge
);

2189 
	`Ârötf
(
li°ög
,"CurrentÅoken: ");

2190 
	`¥ötTokí
(
yych¨
,
tokíSåög
);

2191 
Eº‹
 = 
TRUE
;

2193 
	}
}

2198 
	$yyÀx
() {

2199  
	`gëTokí
();

2200 
	}
}

2202 
TªeNode
 * 
	$∑r£
() {

2203 
	`yy∑r£
();

2204  
ßvedTªe
;

2205 
	}
}

	@y.tab.h

37 #i‚de‡
YY_YY_Y_TAB_H_INCLUDED


38 
	#YY_YY_Y_TAB_H_INCLUDED


	)

40 #i‚de‡
YYDEBUG


41 
	#YYDEBUG
 0

	)

43 #i‡
YYDEBUG


44 
yydebug
;

48 #i‚de‡
YYTOKENTYPE


49 
	#YYTOKENTYPE


	)

50 
	eyytokíty≥


52 
	mIF
 = 258,

53 
	mELSE
 = 259,

54 
	mINT
 = 260,

55 
	mRETURN
 = 261,

56 
	mVOID
 = 262,

57 
	mWHILE
 = 263,

58 
	mID
 = 264,

59 
	mNUM
 = 265,

60 
	mLT
 = 266,

61 
	mLE
 = 267,

62 
	mGT
 = 268,

63 
	mGE
 = 269,

64 
	mEQ
 = 270,

65 
	mNE
 = 271,

66 
	mSEMI
 = 272,

67 
	mLPAREN
 = 273,

68 
	mRPAREN
 = 274,

69 
	mLCURLY
 = 275,

70 
	mRCURLY
 = 276,

71 
	mLBRACE
 = 277,

72 
	mRBRACE
 = 278,

73 
	mPLUS
 = 279,

74 
	mMINUS
 = 280,

75 
	mTIMES
 = 281,

76 
	mOVER
 = 282,

77 
	mCOMMA
 = 283,

78 
	mASSIGN
 = 284,

79 
	mTHEN
 = 285,

80 
	mERROR
 = 286

84 
	#IF
 258

	)

85 
	#ELSE
 259

	)

86 
	#INT
 260

	)

87 
	#RETURN
 261

	)

88 
	#VOID
 262

	)

89 
	#WHILE
 263

	)

90 
	#ID
 264

	)

91 
	#NUM
 265

	)

92 
	#LT
 266

	)

93 
	#LE
 267

	)

94 
	#GT
 268

	)

95 
	#GE
 269

	)

96 
	#EQ
 270

	)

97 
	#NE
 271

	)

98 
	#SEMI
 272

	)

99 
	#LPAREN
 273

	)

100 
	#RPAREN
 274

	)

101 
	#LCURLY
 275

	)

102 
	#RCURLY
 276

	)

103 
	#LBRACE
 277

	)

104 
	#RBRACE
 278

	)

105 
	#PLUS
 279

	)

106 
	#MINUS
 280

	)

107 
	#TIMES
 281

	)

108 
	#OVER
 282

	)

109 
	#COMMA
 283

	)

110 
	#ASSIGN
 284

	)

111 
	#THEN
 285

	)

112 
	#ERROR
 286

	)

115 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


116 
	tYYSTYPE
;

117 
	#YYSTYPE_IS_TRIVIAL
 1

	)

118 
	#YYSTYPE_IS_DECLARED
 1

	)

122 
YYSTYPE
 
yylvÆ
;

124 
yy∑r£
 ();

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<bôs/ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

108 
__ex˘y≥
 (
iß um
);

109 
__ex˘y≥
 (
ißÕha
);

110 
__ex˘y≥
 (
is˙ål
);

111 
__ex˘y≥
 (
isdigô
);

112 
__ex˘y≥
 (
i¶owî
);

113 
__ex˘y≥
 (
isgøph
);

114 
__ex˘y≥
 (
i•röt
);

115 
__ex˘y≥
 (
i•un˘
);

116 
__ex˘y≥
 (
is•a˚
);

117 
__ex˘y≥
 (
isuµî
);

118 
__ex˘y≥
 (
isxdigô
);

122 
	$tﬁowî
 (
__c
Ë
__THROW
;

125 
	$touµî
 (
__c
Ë
__THROW
;

129 #ifdef 
__USE_ISOC99


130 
	`__ex˘y≥
 (
isbœnk
);

133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE


173 #ifde‡
__is˘y≥_f


174 
	$__is˘y≥_f
 (
Ænum
)

175 
	$__is˘y≥_f
 (
Æpha
)

176 
	$__is˘y≥_f
 (
˙ål
)

177 
	$__is˘y≥_f
 (
digô
)

178 
	$__is˘y≥_f
 (
lowî
)

179 
	$__is˘y≥_f
 (
gøph
)

180 
	$__is˘y≥_f
 (
¥öt
)

181 
	$__is˘y≥_f
 (
pun˘
)

182 
	$__is˘y≥_f
 (
•a˚
)

183 
	$__is˘y≥_f
 (
uµî
)

184 
	$__is˘y≥_f
 (
xdigô
)

185 #ifde‡
__USE_ISOC99


186 
	$__is˘y≥_f
 (
bœnk
)

188 #ñi‡
deföed
 
__is˘y≥


189 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

190 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

191 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

192 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

193 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

194 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

195 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

196 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

197 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

198 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

199 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

200 #ifde‡
__USE_ISOC99


201 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

205 #ifde‡
__USE_EXTERN_INLINES


206 
__exã∫_ölöe
 

207 
	`__NTH
 (
	$tﬁowî
 (
__c
))

209  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

210 
	}
}

212 
__exã∫_ölöe
 

213 
__NTH
 (
	$touµî
 (
__c
))

215  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

216 
	}
}

219 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


220 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

221 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

224 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


225 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

226 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

228 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

229 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

235 #ifde‡
__USE_XOPEN2K8


237 
	~<bôs/ty≥s/loˇÀ_t.h
>

241 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

242 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

244 
	#__ex˘y≥_l
(
«me
) \

245 
	`«me
 (, 
loˇÀ_t
Ë
__THROW


	)

251 
__ex˘y≥_l
 (
iß um_l
);

252 
__ex˘y≥_l
 (
ißÕha_l
);

253 
__ex˘y≥_l
 (
is˙ål_l
);

254 
__ex˘y≥_l
 (
isdigô_l
);

255 
__ex˘y≥_l
 (
i¶owî_l
);

256 
__ex˘y≥_l
 (
isgøph_l
);

257 
__ex˘y≥_l
 (
i•röt_l
);

258 
__ex˘y≥_l
 (
i•un˘_l
);

259 
__ex˘y≥_l
 (
is•a˚_l
);

260 
__ex˘y≥_l
 (
isuµî_l
);

261 
__ex˘y≥_l
 (
isxdigô_l
);

263 
__ex˘y≥_l
 (
isbœnk_l
);

267 
	$__tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

271 
	$__touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

272 
	$touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

274 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


275 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

276 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

277 
	#__touµî_l
(
c
, 
loˇÀ
) \

278 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

279 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

280 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

284 #i‚de‡
__NO_CTYPE


285 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

286 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

287 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

288 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

289 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

290 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

291 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

292 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

293 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

294 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

295 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

297 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

299 #ifde‡
__USE_MISC


300 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

301 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

304 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

305 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

306 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

307 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

308 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

309 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

310 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

311 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

312 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

313 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

314 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

316 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

318 #ifde‡
__USE_MISC


319 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

320 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

327 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


23 
	#_ERRNO_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/î∫o.h
>

32 #i‚de‡
__ASSEMBLER__


34 
__BEGIN_DECLS


37 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
__©åibuã_c⁄°__
;

38 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

40 #ifde‡
__USE_GNU


45 *
¥ogøm_övoˇti⁄_«me
;

46 *
¥ogøm_övoˇti⁄_sh‹t_«me
;

48 
	~<bôs/ty≥s/îr‹_t.h
>

52 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/libintl.h

20 #i‚de‡
_LIBINTL_H


21 
	#_LIBINTL_H
 1

	)

23 
	~<„©uªs.h
>

27 
	#__USE_GNU_GETTEXT
 1

	)

31 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

32 ((
maj‹
Ë=0 ? 1 : -1)

	)

34 
__BEGIN_DECLS


39 *
	$gëãxt
 (c⁄° *
__msgid
)

40 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

44 *
	$dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

45 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

46 *
	$__dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

47 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

51 *
	$dcgëãxt
 (c⁄° *
__domaö«me
,

52 c⁄° *
__msgid
, 
__ˇãg‹y
)

53 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

54 *
	$__dcgëãxt
 (c⁄° *
__domaö«me
,

55 c⁄° *
__msgid
, 
__ˇãg‹y
)

56 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

61 *
	$ngëãxt
 (c⁄° *
__msgid1
, c⁄° *
__msgid2
,

62 
__n
)

63 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

67 *
	$dngëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

68 c⁄° *
__msgid2
, 
__n
)

69 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

73 *
	$d˙gëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

74 c⁄° *
__msgid2
, 
__n
,

75 
__ˇãg‹y
)

76 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

82 *
	$ãxtdomaö
 (c⁄° *
__domaö«me
Ë
__THROW
;

86 *
	$bödãxtdomaö
 (c⁄° *
__domaö«me
,

87 c⁄° *
__dú«me
Ë
__THROW
;

91 *
	$böd_ãxtdomaö_code£t
 (c⁄° *
__domaö«me
,

92 c⁄° *
__code£t
Ë
__THROW
;

96 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


99 
	#__√ed_NULL


	)

100 
	~<°ddef.h
>

103 
	~<loˇÀ.h
>

109 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

111 
	#dgëãxt
(
domaö«me
, 
msgid
) \

112 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

114 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

116 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

117 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

121 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

145 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

146 #i‚de‡
CHAR_WIDTH


147 
	#CHAR_WIDTH
 8

	)

149 #i‚de‡
SCHAR_WIDTH


150 
	#SCHAR_WIDTH
 8

	)

152 #i‚de‡
UCHAR_WIDTH


153 
	#UCHAR_WIDTH
 8

	)

155 #i‚de‡
SHRT_WIDTH


156 
	#SHRT_WIDTH
 16

	)

158 #i‚de‡
USHRT_WIDTH


159 
	#USHRT_WIDTH
 16

	)

161 #i‚de‡
INT_WIDTH


162 
	#INT_WIDTH
 32

	)

164 #i‚de‡
UINT_WIDTH


165 
	#UINT_WIDTH
 32

	)

167 #i‚de‡
LONG_WIDTH


168 
	#LONG_WIDTH
 
__WORDSIZE


	)

170 #i‚de‡
ULONG_WIDTH


171 
	#ULONG_WIDTH
 
__WORDSIZE


	)

173 #i‚de‡
LLONG_WIDTH


174 
	#LLONG_WIDTH
 64

	)

176 #i‚de‡
ULLONG_WIDTH


177 
	#ULLONG_WIDTH
 64

	)

181 #ifdef 
__USE_POSIX


183 
	~<bôs/posix1_lim.h
>

186 #ifdef 
__USE_POSIX2


187 
	~<bôs/posix2_lim.h
>

190 #ifdef 
__USE_XOPEN


191 
	~<bôs/x›í_lim.h
>

	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


39 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

42 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

43 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

50 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

51 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

58 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

59 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2, 3));

62 
	$‰ì
 (*
__±r
Ë
__THROW
;

65 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

66 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

69 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


70 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

74 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

78 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

81 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

82 
__THROW
 
__©åibuã_mÆloc__
;

86 
	smÆlöfo


88 
¨ía
;

89 
‹dblks
;

90 
smblks
;

91 
hblks
;

92 
hblkhd
;

93 
usmblks
;

94 
fsmblks
;

95 
u‹dblks
;

96 
f‹dblks
;

97 
kìpco°
;

101 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

104 #i‚de‡
M_MXFAST


105 
	#M_MXFAST
 1

	)

107 #i‚de‡
M_NLBLKS


108 
	#M_NLBLKS
 2

	)

110 #i‚de‡
M_GRAIN


111 
	#M_GRAIN
 3

	)

113 #i‚de‡
M_KEEP


114 
	#M_KEEP
 4

	)

118 
	#M_TRIM_THRESHOLD
 -1

	)

119 
	#M_TOP_PAD
 -2

	)

120 
	#M_MMAP_THRESHOLD
 -3

	)

121 
	#M_MMAP_MAX
 -4

	)

122 
	#M_CHECK_ACTION
 -5

	)

123 
	#M_PERTURB
 -6

	)

124 
	#M_ARENA_TEST
 -7

	)

125 
	#M_ARENA_MAX
 -8

	)

128 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

132 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

136 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

139 
	$mÆloc_°©s
 (Ë
__THROW
;

142 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

145 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

147 
__MALLOC_DEPRECATED
;

148 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

150 
__MALLOC_DEPRECATED
;

151 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

152 
size_t
 
__size
,

154 
__MALLOC_DEPRECATED
;

155 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

156 
size_t
 
__size
,

158 
__MALLOC_DEPRECATED
;

159 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

162 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

34 
	~<bôs/°döt-öä.h
>

37 
	~<bôs/°döt-uöä.h
>

43 
__öt_Àa°8_t
 
	töt_Àa°8_t
;

44 
__öt_Àa°16_t
 
	töt_Àa°16_t
;

45 
__öt_Àa°32_t
 
	töt_Àa°32_t
;

46 
__öt_Àa°64_t
 
	töt_Àa°64_t
;

49 
__uöt_Àa°8_t
 
	tuöt_Àa°8_t
;

50 
__uöt_Àa°16_t
 
	tuöt_Àa°16_t
;

51 
__uöt_Àa°32_t
 
	tuöt_Àa°32_t
;

52 
__uöt_Àa°64_t
 
	tuöt_Àa°64_t
;

58 sig√d 
	töt_Á°8_t
;

59 #i‡
__WORDSIZE
 == 64

60 
	töt_Á°16_t
;

61 
	töt_Á°32_t
;

62 
	töt_Á°64_t
;

64 
	töt_Á°16_t
;

65 
	töt_Á°32_t
;

66 
__exãnsi⁄__


67 
	töt_Á°64_t
;

71 
	tuöt_Á°8_t
;

72 #i‡
__WORDSIZE
 == 64

73 
	tuöt_Á°16_t
;

74 
	tuöt_Á°32_t
;

75 
	tuöt_Á°64_t
;

77 
	tuöt_Á°16_t
;

78 
	tuöt_Á°32_t
;

79 
__exãnsi⁄__


80 
	tuöt_Á°64_t
;

85 #i‡
__WORDSIZE
 == 64

86 #i‚de‡
__öçå_t_deföed


87 
	töçå_t
;

88 
	#__öçå_t_deföed


	)

90 
	tuöçå_t
;

92 #i‚de‡
__öçå_t_deföed


93 
	töçå_t
;

94 
	#__öçå_t_deföed


	)

96 
	tuöçå_t
;

101 
__ötmax_t
 
	tötmax_t
;

102 
__uötmax_t
 
	tuötmax_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	#__INT64_C
(
c
Ë¯## 
L


	)

107 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

109 
	#__INT64_C
(
c
Ë¯## 
LL


	)

110 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

116 
	#INT8_MIN
 (-128)

	)

117 
	#INT16_MIN
 (-32767-1)

	)

118 
	#INT32_MIN
 (-2147483647-1)

	)

119 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

121 
	#INT8_MAX
 (127)

	)

122 
	#INT16_MAX
 (32767)

	)

123 
	#INT32_MAX
 (2147483647)

	)

124 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

127 
	#UINT8_MAX
 (255)

	)

128 
	#UINT16_MAX
 (65535)

	)

129 
	#UINT32_MAX
 (4294967295U)

	)

130 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

134 
	#INT_LEAST8_MIN
 (-128)

	)

135 
	#INT_LEAST16_MIN
 (-32767-1)

	)

136 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

137 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

139 
	#INT_LEAST8_MAX
 (127)

	)

140 
	#INT_LEAST16_MAX
 (32767)

	)

141 
	#INT_LEAST32_MAX
 (2147483647)

	)

142 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

145 
	#UINT_LEAST8_MAX
 (255)

	)

146 
	#UINT_LEAST16_MAX
 (65535)

	)

147 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

148 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

152 
	#INT_FAST8_MIN
 (-128)

	)

153 #i‡
__WORDSIZE
 == 64

154 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

155 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

157 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

158 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

160 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

162 
	#INT_FAST8_MAX
 (127)

	)

163 #i‡
__WORDSIZE
 == 64

164 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

165 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

167 
	#INT_FAST16_MAX
 (2147483647)

	)

168 
	#INT_FAST32_MAX
 (2147483647)

	)

170 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

173 
	#UINT_FAST8_MAX
 (255)

	)

174 #i‡
__WORDSIZE
 == 64

175 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

176 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

178 
	#UINT_FAST16_MAX
 (4294967295U)

	)

179 
	#UINT_FAST32_MAX
 (4294967295U)

	)

181 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

185 #i‡
__WORDSIZE
 == 64

186 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

187 
	#INTPTR_MAX
 (9223372036854775807L)

	)

188 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

190 
	#INTPTR_MIN
 (-2147483647-1)

	)

191 
	#INTPTR_MAX
 (2147483647)

	)

192 
	#UINTPTR_MAX
 (4294967295U)

	)

197 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

199 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

202 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

208 #i‡
__WORDSIZE
 == 64

209 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

210 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

212 #i‡
__WORDSIZE32_PTRDIFF_LONG


213 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

214 
	#PTRDIFF_MAX
 (2147483647L)

	)

216 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

217 
	#PTRDIFF_MAX
 (2147483647)

	)

222 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

223 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

226 #i‡
__WORDSIZE
 == 64

227 
	#SIZE_MAX
 (18446744073709551615UL)

	)

229 #i‡
__WORDSIZE32_SIZE_ULONG


230 
	#SIZE_MAX
 (4294967295UL)

	)

232 
	#SIZE_MAX
 (4294967295U)

	)

237 #i‚de‡
WCHAR_MIN


239 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

240 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

244 
	#WINT_MIN
 (0u)

	)

245 
	#WINT_MAX
 (4294967295u)

	)

248 
	#INT8_C
(
c
Ë
	)
c

249 
	#INT16_C
(
c
Ë
	)
c

250 
	#INT32_C
(
c
Ë
	)
c

251 #i‡
__WORDSIZE
 == 64

252 
	#INT64_C
(
c
Ë¯## 
L


	)

254 
	#INT64_C
(
c
Ë¯## 
LL


	)

258 
	#UINT8_C
(
c
Ë
	)
c

259 
	#UINT16_C
(
c
Ë
	)
c

260 
	#UINT32_C
(
c
Ë¯## 
U


	)

261 #i‡
__WORDSIZE
 == 64

262 
	#UINT64_C
(
c
Ë¯## 
UL


	)

264 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

268 #i‡
__WORDSIZE
 == 64

269 
	#INTMAX_C
(
c
Ë¯## 
L


	)

270 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

272 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

273 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

276 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

278 
	#INT8_WIDTH
 8

	)

279 
	#UINT8_WIDTH
 8

	)

280 
	#INT16_WIDTH
 16

	)

281 
	#UINT16_WIDTH
 16

	)

282 
	#INT32_WIDTH
 32

	)

283 
	#UINT32_WIDTH
 32

	)

284 
	#INT64_WIDTH
 64

	)

285 
	#UINT64_WIDTH
 64

	)

287 
	#INT_LEAST8_WIDTH
 8

	)

288 
	#UINT_LEAST8_WIDTH
 8

	)

289 
	#INT_LEAST16_WIDTH
 16

	)

290 
	#UINT_LEAST16_WIDTH
 16

	)

291 
	#INT_LEAST32_WIDTH
 32

	)

292 
	#UINT_LEAST32_WIDTH
 32

	)

293 
	#INT_LEAST64_WIDTH
 64

	)

294 
	#UINT_LEAST64_WIDTH
 64

	)

296 
	#INT_FAST8_WIDTH
 8

	)

297 
	#UINT_FAST8_WIDTH
 8

	)

298 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

299 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

300 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

301 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

302 
	#INT_FAST64_WIDTH
 64

	)

303 
	#UINT_FAST64_WIDTH
 64

	)

305 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

306 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

308 
	#INTMAX_WIDTH
 64

	)

309 
	#UINTMAX_WIDTH
 64

	)

311 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

312 
	#SIG_ATOMIC_WIDTH
 32

	)

313 
	#SIZE_WIDTH
 
__WORDSIZE


	)

314 
	#WCHAR_WIDTH
 32

	)

315 
	#WINT_WIDTH
 32

	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	#__√ed___va_li°


	)

36 
	~<°d¨g.h
>

38 
	~<bôs/ty≥s.h
>

39 
	~<bôs/ty≥s/__Âos_t.h
>

40 
	~<bôs/ty≥s/__Âos64_t.h
>

41 
	~<bôs/ty≥s/__FILE.h
>

42 
	~<bôs/ty≥s/FILE.h
>

43 
	~<bôs/ty≥s/°ru˘_FILE.h
>

45 #ifde‡
__USE_GNU


46 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

49 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


50 #ifde‡
__GNUC__


51 #i‚de‡
_VA_LIST_DEFINED


52 
__gnuc_va_li°
 
	tva_li°
;

53 
	#_VA_LIST_DEFINED


	)

56 
	~<°d¨g.h
>

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__off_t_deföed


62 #i‚de‡
__USE_FILE_OFFSET64


63 
__off_t
 
	toff_t
;

65 
__off64_t
 
	toff_t
;

67 
	#__off_t_deföed


	)

69 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


70 
__off64_t
 
	toff64_t
;

71 
	#__off64_t_deföed


	)

75 #ifde‡
__USE_XOPEN2K8


76 #i‚de‡
__ssize_t_deföed


77 
__ssize_t
 
	tssize_t
;

78 
	#__ssize_t_deföed


	)

83 #i‚de‡
__USE_FILE_OFFSET64


84 
__Âos_t
 
	tÂos_t
;

86 
__Âos64_t
 
	tÂos_t
;

88 #ifde‡
__USE_LARGEFILE64


89 
__Âos64_t
 
	tÂos64_t
;

93 
	#_IOFBF
 0

	)

94 
	#_IOLBF
 1

	)

95 
	#_IONBF
 2

	)

99 
	#BUFSIZ
 8192

	)

104 
	#EOF
 (-1)

	)

109 
	#SEEK_SET
 0

	)

110 
	#SEEK_CUR
 1

	)

111 
	#SEEK_END
 2

	)

112 #ifde‡
__USE_GNU


113 
	#SEEK_DATA
 3

	)

114 
	#SEEK_HOLE
 4

	)

118 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


120 
	#P_tmpdú
 "/tmp"

	)

133 
	~<bôs/°dio_lim.h
>

137 
FILE
 *
°dö
;

138 
FILE
 *
°dout
;

139 
FILE
 *
°dîr
;

141 
	#°dö
 
°dö


	)

142 
	#°dout
 
°dout


	)

143 
	#°dîr
 
°dîr


	)

146 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

148 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

150 #ifde‡
__USE_ATFILE


152 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

153 c⁄° *
__√w
Ë
__THROW
;

156 #ifde‡
__USE_GNU


158 
	#RENAME_NOREPLACE
 (1 << 0)

	)

159 
	#RENAME_EXCHANGE
 (1 << 1)

	)

160 
	#RENAME_WHITEOUT
 (1 << 2)

	)

164 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

165 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

172 #i‚de‡
__USE_FILE_OFFSET64


173 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

175 #ifde‡
__REDIRECT


176 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

178 
	#tmpfûe
 
tmpfûe64


	)

182 #ifde‡
__USE_LARGEFILE64


183 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

187 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

213 
	`f˛o£
 (
FILE
 *
__°ªam
);

218 
	`fÊush
 (
FILE
 *
__°ªam
);

220 #ifde‡
__USE_MISC


227 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

230 #ifde‡
__USE_GNU


237 
	`f˛o£Æl
 ();

241 #i‚de‡
__USE_FILE_OFFSET64


246 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

247 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

252 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

253 c⁄° *
__ª°ri˘
 
__modes
,

254 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

256 #ifde‡
__REDIRECT


257 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

258 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

259 
__wur
;

260 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

261 c⁄° *
__ª°ri˘
 
__modes
,

262 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

263 
__wur
;

265 
	#f›í
 
f›í64


	)

266 
	#‰e›í
 
‰e›í64


	)

269 #ifde‡
__USE_LARGEFILE64


270 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

271 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

272 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
,

274 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

277 #ifdef 
__USE_POSIX


279 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

282 #ifdef 
__USE_GNU


285 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

286 c⁄° *
__ª°ri˘
 
__modes
,

287 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

290 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

292 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

293 
__THROW
 
__wur
;

298 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

308 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

309 
__modes
, 
size_t
 
__n
Ë
__THROW
;

311 #ifdef 
__USE_MISC


314 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

315 
size_t
 
__size
Ë
__THROW
;

318 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

327 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

332 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

334 
	$•rötf
 (*
__ª°ri˘
 
__s
,

335 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

341 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

342 
__gnuc_va_li°
 
__¨g
);

347 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

349 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

350 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

352 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


354 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

355 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

356 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

358 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

360 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

363 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

366 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

367 
__gnuc_va_li°
 
__¨g
)

368 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

369 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

370 c⁄° *
__ª°ri˘
 
__fmt
, ...)

371 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

372 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

373 c⁄° *
__ª°ri˘
 
__fmt
, ...)

374 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

377 #ifde‡
__USE_XOPEN2K8


379 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

380 
__gnuc_va_li°
 
__¨g
)

381 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

382 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

383 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

391 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

392 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

397 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

399 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

400 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

405 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT


406 #ifde‡
__REDIRECT


407 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

409 
__isoc99_fsˇnf
Ë
__wur
;

410 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

411 
__isoc99_sˇnf
Ë
__wur
;

412 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

413 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

414 
__isoc99_ssˇnf
);

416 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

417 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

418 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

419 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

420 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

421 
	#fsˇnf
 
__isoc99_fsˇnf


	)

422 
	#sˇnf
 
__isoc99_sˇnf


	)

423 
	#ssˇnf
 
__isoc99_ssˇnf


	)

427 #ifdef 
__USE_ISOC99


432 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

433 
__gnuc_va_li°
 
__¨g
)

434 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

440 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

441 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

444 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

445 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

446 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

449 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

450 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT


451 
	`__REDIRECT
 (
vfsˇnf
,

452 (
FILE
 *
__ª°ri˘
 
__s
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

454 
__isoc99_vfsˇnf
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

456 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

457 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

458 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

459 
	`__REDIRECT_NTH
 (
vssˇnf
,

460 (c⁄° *
__ª°ri˘
 
__s
,

461 c⁄° *
__ª°ri˘
 
__f‹m©
,

462 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

463 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

464 #ñi‡!
deföed
 
__REDIRECT


465 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

466 c⁄° *
__ª°ri˘
 
__f‹m©
,

467 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

468 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

469 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

470 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

471 c⁄° *
__ª°ri˘
 
__f‹m©
,

472 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

473 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

474 
	#vsˇnf
 
__isoc99_vsˇnf


	)

475 
	#vssˇnf
 
__isoc99_vssˇnf


	)

485 
	`fgëc
 (
FILE
 *
__°ªam
);

486 
	`gëc
 (
FILE
 *
__°ªam
);

492 
	`gëch¨
 ();

494 #ifde‡
__USE_POSIX199506


499 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

500 
	`gëch¨_u∆ocked
 ();

503 #ifde‡
__USE_MISC


510 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

521 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

522 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

528 
	`putch¨
 (
__c
);

530 #ifde‡
__USE_MISC


537 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

540 #ifde‡
__USE_POSIX199506


545 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

546 
	`putch¨_u∆ocked
 (
__c
);

550 #i‡
deföed
 
__USE_MISC
 \

551 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

553 
	`gëw
 (
FILE
 *
__°ªam
);

556 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

564 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

565 
__wur
;

567 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

577 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

580 #ifde‡
__USE_GNU


587 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

588 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

592 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

603 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

604 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

605 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

606 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

607 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

608 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

616 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

617 
size_t
 *
__ª°ri˘
 
__n
,

618 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

626 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

632 
	`puts
 (c⁄° *
__s
);

639 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

646 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

647 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

652 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

653 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

655 #ifde‡
__USE_GNU


662 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
);

666 #ifde‡
__USE_MISC


673 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

674 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

676 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

684 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

689 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

694 
	`ªwöd
 (
FILE
 *
__°ªam
);

701 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


702 #i‚de‡
__USE_FILE_OFFSET64


707 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

712 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

714 #ifde‡
__REDIRECT


715 
	`__REDIRECT
 (
f£eko
,

716 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

717 
f£eko64
);

718 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

720 
	#f£eko
 
f£eko64


	)

721 
	#·ñlo
 
·ñlo64


	)

726 #i‚de‡
__USE_FILE_OFFSET64


731 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

736 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

738 #ifde‡
__REDIRECT


739 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

740 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

741 
	`__REDIRECT
 (
f£ços
,

742 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

744 
	#fgëpos
 
fgëpos64


	)

745 
	#f£ços
 
f£ços64


	)

749 #ifde‡
__USE_LARGEFILE64


750 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

751 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

753 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

757 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

759 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

761 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

763 #ifde‡
__USE_MISC


765 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

766 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

767 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

775 
	`≥º‹
 (c⁄° *
__s
);

781 
	~<bôs/sys_îæi°.h
>

784 #ifdef 
__USE_POSIX


786 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

789 #ifde‡
__USE_MISC


791 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

795 #ifde‡
__USE_POSIX2


800 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

806 
	`p˛o£
 (
FILE
 *
__°ªam
);

810 #ifdef 
__USE_POSIX


812 *
	$˘îmid
 (*
__s
Ë
__THROW
;

816 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


818 *
	`cu£rid
 (*
__s
);

822 #ifdef 
__USE_GNU


823 
ob°ack
;

826 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

827 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

828 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

829 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

830 c⁄° *
__ª°ri˘
 
__f‹m©
,

831 
__gnuc_va_li°
 
__¨gs
)

832 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

836 #ifde‡
__USE_POSIX199506


840 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

844 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

847 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

850 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


853 
	~<bôs/gë›t_posix.h
>

858 
	`__uÊow
 (
FILE
 *);

859 
	`__ovîÊow
 (
FILE
 *, );

863 #ifde‡
__USE_EXTERN_INLINES


864 
	~<bôs/°dio.h
>

866 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


867 
	~<bôs/°dio2.h
>

869 #ifde‡
__LDBL_COMPAT


870 
	~<bôs/°dio-ldbl.h
>

873 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

25 
	~<bôs/libc-hódî-°¨t.h
>

28 
	#__√ed_size_t


	)

29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

33 
	g__BEGIN_DECLS


35 
	#_STDLIB_H
 1

	)

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


39 
	~<bôs/waôÊags.h
>

40 
	~<bôs/waô°©us.h
>

43 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

44 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

45 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

46 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

47 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

48 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

49 #ifde‡
__WIFCONTINUED


50 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

55 
	~<bôs/Êﬂä.h
>

60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

74 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__exãnsi⁄__
 struct

78 
	mquŸ
;

79 
	mªm
;

80 } 
	tŒdiv_t
;

81 
	#__Œdiv_t_deföed
 1

	)

86 
	#RAND_MAX
 2147483647

	)

91 
	#EXIT_FAILURE
 1

	)

92 
	#EXIT_SUCCESS
 0

	)

96 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

97 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

101 
	$©of
 (c⁄° *
__≈å
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

104 
	$©oi
 (c⁄° *
__≈å
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

107 
	$©ﬁ
 (c⁄° *
__≈å
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

110 #ifde‡
__USE_ISOC99


112 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

113 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

117 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

118 **
__ª°ri˘
 
__íd±r
)

119 
__THROW
 
	`__n⁄nuŒ
 ((1));

121 #ifdef 
__USE_ISOC99


123 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

124 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

126 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

127 **
__ª°ri˘
 
__íd±r
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1));

133 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

135 **
__ª°ri˘
 
__íd±r
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

140 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

141 **
__ª°ri˘
 
__íd±r
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

146 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

147 **
__ª°ri˘
 
__íd±r
)

148 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

152 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

153 **
__ª°ri˘
 
__íd±r
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1));

157 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

158 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

159 **
__ª°ri˘
 
__íd±r
)

160 
__THROW
 
	`__n⁄nuŒ
 ((1));

163 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

164 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

169 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

170 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

176 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1));

180 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

181 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

182 
__THROW
 
	`__n⁄nuŒ
 ((1));

184 #ifde‡
__USE_MISC


186 
__exãnsi⁄__


187 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

191 
__exãnsi⁄__


192 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

193 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

194 
__THROW
 
	`__n⁄nuŒ
 ((1));

197 #ifde‡
__USE_ISOC99


199 
__exãnsi⁄__


200 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

204 
__exãnsi⁄__


205 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

206 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

212 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

213 
__f
)

214 
__THROW
 
	`__n⁄nuŒ
 ((3));

216 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

217 
__f
)

218 
__THROW
 
	`__n⁄nuŒ
 ((3));

220 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

221 
__f
)

222 
__THROW
 
	`__n⁄nuŒ
 ((3));

225 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

226 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

227 
_Flﬂt16
 
__f
)

228 
__THROW
 
	`__n⁄nuŒ
 ((3));

231 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

232 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

233 
_Flﬂt32
 
__f
)

234 
__THROW
 
	`__n⁄nuŒ
 ((3));

237 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

238 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

239 
_Flﬂt64
 
__f
)

240 
__THROW
 
	`__n⁄nuŒ
 ((3));

243 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

244 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

245 
_Flﬂt128
 
__f
)

246 
__THROW
 
	`__n⁄nuŒ
 ((3));

249 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

250 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

251 
_Flﬂt32x
 
__f
)

252 
__THROW
 
	`__n⁄nuŒ
 ((3));

255 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

256 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

257 
_Flﬂt64x
 
__f
)

258 
__THROW
 
	`__n⁄nuŒ
 ((3));

261 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

262 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

263 
_Flﬂt128x
 
__f
)

264 
__THROW
 
	`__n⁄nuŒ
 ((3));

268 #ifde‡
__USE_GNU


272 
	~<bôs/ty≥s/loˇÀ_t.h
>

274 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

276 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

278 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

279 **
__ª°ri˘
 
__íd±r
,

280 
__ba£
, 
loˇÀ_t
 
__loc
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

283 
__exãnsi⁄__


284 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

285 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

286 
loˇÀ_t
 
__loc
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

289 
__exãnsi⁄__


290 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
loˇÀ_t
 
__loc
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

295 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

296 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

299 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

300 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

303 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

304 **
__ª°ri˘
 
__íd±r
,

305 
loˇÀ_t
 
__loc
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

308 #i‡
__HAVE_FLOAT16


309 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

310 **
__ª°ri˘
 
__íd±r
,

311 
loˇÀ_t
 
__loc
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

315 #i‡
__HAVE_FLOAT32


316 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

317 **
__ª°ri˘
 
__íd±r
,

318 
loˇÀ_t
 
__loc
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

322 #i‡
__HAVE_FLOAT64


323 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

324 **
__ª°ri˘
 
__íd±r
,

325 
loˇÀ_t
 
__loc
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

329 #i‡
__HAVE_FLOAT128


330 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 **
__ª°ri˘
 
__íd±r
,

332 
loˇÀ_t
 
__loc
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

336 #i‡
__HAVE_FLOAT32X


337 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 **
__ª°ri˘
 
__íd±r
,

339 
loˇÀ_t
 
__loc
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

343 #i‡
__HAVE_FLOAT64X


344 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

350 #i‡
__HAVE_FLOAT128X


351 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

352 **
__ª°ri˘
 
__íd±r
,

353 
loˇÀ_t
 
__loc
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

359 #ifde‡
__USE_EXTERN_INLINES


360 
__exã∫_ölöe
 

361 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

363  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

364 
	}
}

365 
__exã∫_ölöe
 

366 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

368  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

369 
	}
}

371 #ifde‡
__USE_ISOC99


372 
__exãnsi⁄__
 
__exã∫_ölöe
 

373 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

375  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

376 
	}
}

381 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


385 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

388 
	$a64l
 (c⁄° *
__s
)

389 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

393 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


394 
	~<sys/ty≥s.h
>

401 
	$øndom
 (Ë
__THROW
;

404 
	$§™dom
 (
__£ed
Ë
__THROW
;

410 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

411 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

415 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

418 #ifde‡
__USE_MISC


423 
	søndom_d©a


425 
öt32_t
 *
Âå
;

426 
öt32_t
 *
Ωå
;

427 
öt32_t
 *
°©e
;

428 
ønd_ty≥
;

429 
ønd_deg
;

430 
ønd_£p
;

431 
öt32_t
 *
íd_±r
;

434 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

435 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

437 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

441 
size_t
 
__°©ñí
,

442 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

446 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

447 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$ønd
 (Ë
__THROW
;

455 
	$§™d
 (
__£ed
Ë
__THROW
;

457 #ifde‡
__USE_POSIX199506


459 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

463 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


467 
	$dønd48
 (Ë
__THROW
;

468 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

471 
	$Ã™d48
 (Ë
__THROW
;

472 
	$ƒ™d48
 (
__xsubi
[3])

473 
__THROW
 
	`__n⁄nuŒ
 ((1));

476 
	$mønd48
 (Ë
__THROW
;

477 
	$jønd48
 (
__xsubi
[3])

478 
__THROW
 
	`__n⁄nuŒ
 ((1));

481 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

482 *
	$£ed48
 (
__£ed16v
[3])

483 
__THROW
 
	`__n⁄nuŒ
 ((1));

484 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

486 #ifde‡
__USE_MISC


490 
	sdønd48_d©a


492 
__x
[3];

493 
__ﬁd_x
[3];

494 
__c
;

495 
__öô
;

496 
__exãnsi⁄__
 
__a
;

501 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

502 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

503 
	$î™d48_r
 (
__xsubi
[3],

504 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

505 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

508 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

509 *
__ª°ri˘
 
__ªsu…
)

510 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

511 
	$ƒ™d48_r
 (
__xsubi
[3],

512 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

513 *
__ª°ri˘
 
__ªsu…
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

517 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

518 *
__ª°ri˘
 
__ªsu…
)

519 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

520 
	$jønd48_r
 (
__xsubi
[3],

521 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

522 *
__ª°ri˘
 
__ªsu…
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

526 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

527 
__THROW
 
	`__n⁄nuŒ
 ((2));

529 
	$£ed48_r
 (
__£ed16v
[3],

530 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

532 
	$lc⁄g48_r
 (
__∑øm
[7],

533 
dønd48_d©a
 *
__buf„r
)

534 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

539 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


540 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

542 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

543 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

550 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

551 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

553 #ifde‡
__USE_MISC


559 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

560 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


561 
	`__©åibuã_Æloc_size__
 ((2, 3));

565 
	$‰ì
 (*
__±r
Ë
__THROW
;

567 #ifde‡
__USE_MISC


568 
	~<Æloˇ.h
>

571 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

572 || 
deföed
 
__USE_MISC


574 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


575 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

578 #ifde‡
__USE_XOPEN2K


580 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

584 #ifde‡
__USE_ISOC11


586 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

587 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

591 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

595 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

597 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


599 #ifde‡
__˝lu•lus


600 "C++" 
	$©_quick_exô
 ((*
__func
) ())

601 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

603 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

607 #ifdef 
__USE_MISC


610 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

611 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

619 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


623 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

626 #ifde‡
__USE_ISOC99


629 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

634 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

636 #ifde‡
__USE_GNU


639 *
	$£cuª_gëív
 (c⁄° *
__«me
)

640 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


647 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

650 #ifde‡
__USE_XOPEN2K


653 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

654 
__THROW
 
	`__n⁄nuŒ
 ((2));

657 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

660 #ifdef 
__USE_MISC


664 
	$˛óªnv
 (Ë
__THROW
;

668 #i‡
deföed
 
__USE_MISC
 \

669 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

675 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

678 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


687 #i‚de‡
__USE_FILE_OFFSET64


688 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

690 #ifde‡
__REDIRECT


691 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

692 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

694 
	#mk°emp
 
mk°emp64


	)

697 #ifde‡
__USE_LARGEFILE64


698 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 #ifde‡
__USE_MISC


709 #i‚de‡
__USE_FILE_OFFSET64


710 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

714 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

716 
	#mk°emps
 
mk°emps64


	)

719 #ifde‡
__USE_LARGEFILE64


720 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

721 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

725 #ifde‡
__USE_XOPEN2K8


731 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

734 #ifde‡
__USE_GNU


741 #i‚de‡
__USE_FILE_OFFSET64


742 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

744 #ifde‡
__REDIRECT


745 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

746 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

748 
	#mko°emp
 
mko°emp64


	)

751 #ifde‡
__USE_LARGEFILE64


752 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

761 #i‚de‡
__USE_FILE_OFFSET64


762 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

763 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

765 #ifde‡
__REDIRECT


766 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

767 
__Êags
), 
mko°emps64
)

768 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

770 
	#mko°emps
 
mko°emps64


	)

773 #ifde‡
__USE_LARGEFILE64


774 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

775 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

784 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

787 #ifdef 
__USE_GNU


790 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

794 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


800 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

801 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

806 #i‚de‡
__COMPAR_FN_T


807 
	#__COMPAR_FN_T


	)

808 (*
	t__com∑r_‚_t
) (const *, const *);

810 #ifdef 
__USE_GNU


811 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

814 #ifde‡
__USE_GNU


815 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

820 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

821 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

822 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

824 #ifde‡
__USE_EXTERN_INLINES


825 
	~<bôs/°dlib-b£¨ch.h
>

830 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

831 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

832 #ifde‡
__USE_GNU


833 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

834 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

835 
	`__n⁄nuŒ
 ((1, 4));

840 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

841 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

843 #ifde‡
__USE_ISOC99


844 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

845 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

852 
div_t
 
	$div
 (
__numî
, 
__díom
)

853 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

854 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

855 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

857 #ifde‡
__USE_ISOC99


858 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

859 
__díom
)

860 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

864 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

865 || 
deföed
 
__USE_MISC


872 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

873 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

878 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

879 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

884 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

885 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

888 #ifde‡
__USE_MISC


890 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

891 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

892 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

893 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

894 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

895 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

896 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

897 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

902 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

903 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

904 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

905 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

906 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

907 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

909 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

910 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

911 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

912 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

913 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

914 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

915 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

922 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

925 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

926 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

929 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

933 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

934 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

936 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

937 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

938 
__THROW
;

941 #ifde‡
__USE_MISC


946 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


957 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

958 *c⁄° *
__ª°ri˘
 
__tokís
,

959 **
__ª°ri˘
 
__vÆuï
)

960 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

966 #ifde‡
__USE_XOPEN2KXSI


968 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

971 #ifde‡
__USE_XOPEN_EXTENDED


976 
	$gø¡±
 (
__fd
Ë
__THROW
;

980 
	$u∆ock±
 (
__fd
Ë
__THROW
;

985 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

988 #ifde‡
__USE_GNU


992 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

993 
__THROW
 
	`__n⁄nuŒ
 ((2));

996 
	`gë±
 ();

999 #ifde‡
__USE_MISC


1003 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1));

1007 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1010 
	$ây¶Ÿ
 (Ë
__THROW
;

1013 
	~<bôs/°dlib-Êﬂt.h
>

1016 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1017 
	~<bôs/°dlib.h
>

1019 #ifde‡
__LDBL_COMPAT


1020 
	~<bôs/°dlib-ldbl.h
>

1023 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && (
__GNUC_PREREQ
 (4, 4) \

37 || 
	$__glibc_˛™g_¥îeq
 (3, 5))

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || 
	`__GLIBC_USE
 (
ISOC2X
)

54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

61 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

64 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

65 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

68 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


71 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

72 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

74 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__OPTIMIZE__


77 
__exã∫_Æways_ölöe
 *

78 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


80  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

83 
__exã∫_Æways_ölöe
 const *

84 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


86  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

89 
	}
}

91 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

92 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 #ifde‡
__USE_GNU


98 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


99 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

100 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

104 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


110 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

111 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

112 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

122 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

123 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

125 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

126 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

131 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

134 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

138 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

148 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
 
	`__n⁄nuŒ
 ((2));

151 #ifde‡
__USE_XOPEN2K8


153 
	~<bôs/ty≥s/loˇÀ_t.h
>

156 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

157 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

160 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

161 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

164 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

165 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| 
	$__GLIBC_USE
 (
ISOC2X
))

167 *
	$°rdup
 (c⁄° *
__s
)

168 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

174 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| __GLIBC_USE (
ISOC2X
)

175 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


181 
	#°rdu∑
(
s
) \

182 (
__exãnsi⁄__
 \

184 c⁄° *
__ﬁd
 = (
s
); \

185 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

186 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

187 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

188 
	}
}))

	)

191 
	#°∫du∑
(
s
, 
n
) \

192 (
__exãnsi⁄__
 \

194 c⁄° *
__ﬁd
 = (
s
); \

195 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

196 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

197 
__√w
[
__Àn
] = '\0'; \

198 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

199 }))

	)

203 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


206 *
°rchr
 (*
__s
, 
__c
)

207 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

208 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

209 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

211 #ifde‡
__OPTIMIZE__


212 
__exã∫_Æways_ölöe
 *

213 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


215  
__buûtö_°rchr
 (
__s
, 
__c
);

218 
__exã∫_Æways_ölöe
 const *

219 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

226 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


233 *
	`°ºchr
 (*
__s
, 
__c
)

234 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

236 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

238 #ifde‡
__OPTIMIZE__


239 
__exã∫_Æways_ölöe
 *

240 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


242  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

245 
__exã∫_Æways_ölöe
 const *

246 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
	}
}

253 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

254 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

257 #ifde‡
__USE_GNU


260 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


261 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

262 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

267 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

277 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


283 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

284 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__OPTIMIZE__


289 
__exã∫_Æways_ölöe
 *

290 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


292  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

295 
__exã∫_Æways_ölöe
 const *

296 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


298  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

301 
	}
}

303 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

304 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


310 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

311 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

312 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

313 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__OPTIMIZE__


316 
__exã∫_Æways_ölöe
 *

317 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


319  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

322 
__exã∫_Æways_ölöe
 const *

323 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


325  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

328 
	}
}

330 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

331 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

336 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

337 
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

342 c⁄° *
__ª°ri˘
 
__dñim
,

343 **
__ª°ri˘
 
__ßve_±r
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

345 #ifde‡
__USE_POSIX


346 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

347 **
__ª°ri˘
 
__ßve_±r
)

348 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

351 #ifde‡
__USE_GNU


353 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


354 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

355 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

356 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

357 c⁄° *
__√edÀ
)

358 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

360 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

361 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 #ifde‡
__USE_GNU


369 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

370 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

371 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

375 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

376 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

379 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

380 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

385 
size_t
 
	$°æí
 (c⁄° *
__s
)

386 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

388 #ifdef 
__USE_XOPEN2K8


391 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

392 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

398 #ifde‡
__USE_XOPEN2K


406 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

411 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

412 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

414 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

415 
__THROW
 
	`__n⁄nuŒ
 ((2));

416 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

421 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

422 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

426 #ifde‡
__USE_XOPEN2K8


428 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

431 #ifde‡
__USE_MISC


432 
	~<°rögs.h
>

436 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

440 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

441 c⁄° *
__ª°ri˘
 
__dñim
)

442 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

445 #ifdef 
__USE_XOPEN2K8


447 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

450 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

452 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

453 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

458 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

459 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

460 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

461 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

462 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

465 #ifdef 
__USE_GNU


467 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

468 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

471 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

474 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

476 #i‚de‡
ba£«me


481 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


482 "C++" *
	$ba£«me
 (*
__fûíame
)

483 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

484 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

485 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

487 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

492 #i‡
	`__GNUC_PREREQ
 (3,4)

493 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


495 
	~<bôs/°rög_f‹tifõd.h
>

499 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_MISC


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_MISC


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #ifde‡
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #ifde‡
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_MISC


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #ifde‡
__USE_MISC


784 
	$ây¶Ÿ
 (Ë
__THROW
;

789 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

792 #ifde‡
__USE_ATFILE


795 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

796 c⁄° *
__to
, 
__Êags
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

800 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


802 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

803 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

808 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

809 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

813 #ifde‡
__USE_ATFILE


815 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

816 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

819 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

820 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

825 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

827 #ifde‡
__USE_ATFILE


829 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

830 
__THROW
 
	`__n⁄nuŒ
 ((2));

834 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

841 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

848 *
	`gëlogö
 ();

849 #ifde‡
__USE_POSIX199506


856 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

859 #ifdef 
__USE_MISC


861 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

865 #ifdef 
__USE_POSIX2


869 
	~<bôs/gë›t_posix.h
>

873 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


877 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

881 #i‡
deföed
 
__USE_MISC


884 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

895 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

896 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

897 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

904 
	$vh™gup
 (Ë
__THROW
;

907 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

916 
size_t
 
__off£t
, 
__sˇÀ
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1));

923 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

927 *
	$gëu£rshñl
 (Ë
__THROW
;

928 
	$ídu£rshñl
 (Ë
__THROW
;

929 
	$£tu£rshñl
 (Ë
__THROW
;

935 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

939 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

942 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

946 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

954 
	`fsync
 (
__fd
);

957 #ifde‡
__USE_GNU


960 
	$syncfs
 (
__fd
Ë
__THROW
;

964 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


967 
	`gëho°id
 ();

970 
	$sync
 (Ë
__THROW
;

973 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


976 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

981 
	$gëdèbÀsize
 (Ë
__THROW
;

987 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


990 #i‚de‡
__USE_FILE_OFFSET64


991 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

992 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

994 #ifde‡
__REDIRECT_NTH


995 
	`__REDIRECT_NTH
 (
åunˇã
,

996 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

997 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 
	#åunˇã
 
åunˇã64


	)

1002 #ifde‡
__USE_LARGEFILE64


1003 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1009 #i‡
deföed
 
__USE_POSIX199309
 \

1010 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1013 #i‚de‡
__USE_FILE_OFFSET64


1014 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1016 #ifde‡
__REDIRECT_NTH


1017 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1018 
·runˇã64
Ë
__wur
;

1020 
	#·runˇã
 
·runˇã64


	)

1023 #ifde‡
__USE_LARGEFILE64


1024 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1030 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1031 || 
deföed
 
__USE_MISC


1035 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1041 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1045 #ifde‡
__USE_MISC


1056 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1061 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1073 
	#F_ULOCK
 0

	)

1074 
	#F_LOCK
 1

	)

1075 
	#F_TLOCK
 2

	)

1076 
	#F_TEST
 3

	)

1078 #i‚de‡
__USE_FILE_OFFSET64


1079 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1081 #ifde‡
__REDIRECT


1082 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1083 
lockf64
Ë
__wur
;

1085 
	#lockf
 
lockf64


	)

1088 #ifde‡
__USE_LARGEFILE64


1089 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1094 #ifde‡
__USE_GNU


1099 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1100 (
__exãnsi⁄__
 \

1101 ({ 
__ªsu…
; \

1102 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1103 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1104 
__ªsu…
; 
	}
}))

	)

1107 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1108 
__outfd
, 
__off64_t
 *
__poutoff
,

1109 
size_t
 
__Àngth
, 
__Êags
);

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1118 #ifde‡
__USE_MISC


1124 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1125 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 #ifdef 
__USE_XOPEN


1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1141 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1143 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1146 *
	`cu£rid
 (*
__s
);

1152 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1153 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1154 (*
__∑ª¡
) (),

1155 (*
__chûd
Ë()Ë
__THROW
;

1158 #ifde‡
__USE_MISC


1161 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur
;

1165 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1166 
	~<bôs/uni°d.h
>

1170 
	~<bôs/uni°d_ext.h
>

1172 
__END_DECLS


	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/endian.h

19 #i‚de‡
_BITS_ENDIAN_H


20 
	#_BITS_ENDIAN_H
 1

	)

30 
	#__LITTLE_ENDIAN
 1234

	)

31 
	#__BIG_ENDIAN
 4321

	)

32 
	#__PDP_ENDIAN
 3412

	)

35 
	~<bôs/ídü¬ess.h
>

39 #i‚de‡
__FLOAT_WORD_ORDER


40 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

43 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


44 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

45 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #i‚de‡
_BITS_ERRNO_H


20 
	#_BITS_ERRNO_H
 1

	)

22 #i‡!
deföed
 
_ERRNO_H


26 
	~<löux/î∫o.h
>

29 #i‚de‡
ENOTSUP


30 
	#ENOTSUP
 
EOPNOTSUPP


	)

33 #i‚de‡
ECANCELED


34 
	#ECANCELED
 125

	)

37 #i‚de‡
EOWNERDEAD


38 
	#EOWNERDEAD
 130

	)

41 #i‚de‡
ENOTRECOVERABLE


42 
	#ENOTRECOVERABLE
 131

	)

45 #i‚de‡
ERFKILL


46 
	#ERFKILL
 132

	)

49 #i‚de‡
EHWPOISON


50 
	#EHWPOISON
 133

	)

	@/usr/include/bits/floatn.h

19 #i‚de‡
_BITS_FLOATN_H


20 
	#_BITS_FLOATN_H


	)

22 
	~<„©uªs.h
>

29 #i‡(
deföed
 
__x86_64__
 \

30 ? 
__GNUC_PREREQ
 (4, 3) \

31 : (
deföed
 
__GNU__
 ? 
	$__GNUC_PREREQ
 (4, 5Ë: 
	`__GNUC_PREREQ
 (4, 4))) \

32 && !
	$deföed
(
__CUDACC__
)

33 
	#__HAVE_FLOAT128
 1

	)

35 
	#__HAVE_FLOAT128
 0

	)

40 #i‡
__HAVE_FLOAT128


41 
	#__HAVE_DISTINCT_FLOAT128
 1

	)

43 
	#__HAVE_DISTINCT_FLOAT128
 0

	)

49 
	#__HAVE_FLOAT64X
 1

	)

55 
	#__HAVE_FLOAT64X_LONG_DOUBLE
 1

	)

57 #i‚de‡
__ASSEMBLER__


61 #i‡
__HAVE_FLOAT128


62 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


64 
	#__f128
(
x
Ëx##
q


	)

66 
	#__f128
(
x
Ëx##
f128


	)

71 #i‡
__HAVE_FLOAT128


72 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


75 
_Com∂ex
 
	t__cÊﬂt128
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__TC__
)));

76 
	#__CFLOAT128
 
__cÊﬂt128


	)

78 
	#__CFLOAT128
 
_Com∂ex
 
_Flﬂt128


	)

83 #i‡
__HAVE_FLOAT128


86 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


87 
__Êﬂt128
 
	t_Flﬂt128
;

91 #i‡!
	`__GNUC_PREREQ
 (7, 0)

92 
	#__buûtö_huge_vÆf128
(Ë((
_Flﬂt128
Ë
	`__buûtö_huge_vÆ
 ())

	)

100 #i‡!
	`__GNUC_PREREQ
 (7, 0)

101 
	#__buûtö_c›ysignf128
 
__buûtö_c›ysignq


	)

102 
	#__buûtö_Ábsf128
 
__buûtö_Ábsq


	)

103 
	#__buûtö_öff128
(Ë((
_Flﬂt128
Ë
	`__buûtö_öf
 ())

	)

104 
	#__buûtö_«nf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«n
 (x))

	)

105 
	#__buûtö_«nsf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«ns
 (x))

	)

112 #i‡!
	`__GNUC_PREREQ
 (6, 0)

113 
	#__buûtö_signbôf128
 
__signbôf128


	)

120 
	~<bôs/Êﬂä-comm⁄.h
>

	@/usr/include/bits/getopt_posix.h

20 #i‚de‡
_GETOPT_POSIX_H


21 
	#_GETOPT_POSIX_H
 1

	)

23 #i‡!
deföed
 
_UNISTD_H
 && !deföed 
_STDIO_H


27 
	~<bôs/gë›t_c‹e.h
>

29 
	g__BEGIN_DECLS


31 #i‡
deföed
 
__USE_POSIX2
 && !deföed 
__USE_POSIX_IMPLICITLY
 \

32 && !
deföed
 
	g__USE_GNU
 && !deföed 
	g_GETOPT_H


37 #ifde‡
__REDIRECT


38 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

39 c⁄° *
__sh‹t›ts
),

40 
__posix_gë›t
);

42 
	$__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

43 c⁄° *
__sh‹t›ts
)

44 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

45 
	#gë›t
 
__posix_gë›t


	)

49 
__END_DECLS


	@/usr/include/bits/libc-header-start.h

27 #i‚de‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


31 #unde‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


33 
	~<„©uªs.h
>

37 #unde‡
__GLIBC_USE_LIB_EXT2


38 #i‡(
deföed
 
__USE_GNU
 \

39 || (
deföed
 
	g__STDC_WANT_LIB_EXT2__
 && __STDC_WANT_LIB_EXT2__ > 0))

40 
	#__GLIBC_USE_LIB_EXT2
 1

	)

42 
	#__GLIBC_USE_LIB_EXT2
 0

	)

49 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT


50 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_BFP_EXT__


51 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 1

	)

53 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 0

	)

55 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT_C2X


56 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

57 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 1

	)

59 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 0

	)

66 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_FUNCS_EXT__


68 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 1

	)

70 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 0

	)

72 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X


73 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

74 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 1

	)

76 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 0

	)

81 #unde‡
__GLIBC_USE_IEC_60559_TYPES_EXT


82 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_TYPES_EXT__


83 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 1

	)

85 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 0

	)

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

27 
	~<bôs/w‹dsize.h
>

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 #ifde‡
__USE_XOPEN2K


139 
	#_POSIX_TZNAME_MAX
 6

	)

141 
	#_POSIX_TZNAME_MAX
 3

	)

144 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


146 
	#_POSIX_QLIMIT
 1

	)

150 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

153 
	#_POSIX_UIO_MAXIOV
 16

	)

157 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

161 
	~<bôs/loˇl_lim.h
>

164 #i‚def 
SSIZE_MAX


168 #i‡
__WORDSIZE
 =64 || 
__WORDSIZE32_SIZE_ULONG


169 
	#SSIZE_MAX
 
LONG_MAX


	)

171 
	#SSIZE_MAX
 
INT_MAX


	)

179 #i‚def 
NGROUPS_MAX


180 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

32 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

35 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

38 
	#_POSIX_FSYNC
 200809L

	)

41 
	#_POSIX_MAPPED_FILES
 200809L

	)

44 
	#_POSIX_MEMLOCK
 200809L

	)

47 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

50 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

53 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

57 
	#_POSIX_VDISABLE
 '\0'

	)

60 
	#_POSIX_NO_TRUNC
 1

	)

63 
	#_XOPEN_REALTIME
 1

	)

66 
	#_XOPEN_REALTIME_THREADS
 1

	)

69 
	#_XOPEN_SHM
 1

	)

72 
	#_POSIX_THREADS
 200809L

	)

75 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

76 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

79 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

85 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

88 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

92 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

94 #ifde‡
__USE_XOPEN2K8


96 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

99 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

103 
	#_POSIX_SEMAPHORES
 200809L

	)

106 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

109 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

110 
	#_POSIX_ASYNC_IO
 1

	)

112 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

114 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

117 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

120 
	#_LFS_LARGEFILE
 1

	)

121 
	#_LFS64_LARGEFILE
 1

	)

122 
	#_LFS64_STDIO
 1

	)

125 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

128 
	#_POSIX_CPUTIME
 0

	)

131 
	#_POSIX_THREAD_CPUTIME
 0

	)

134 
	#_POSIX_REGEXP
 1

	)

137 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

140 
	#_POSIX_SHELL
 1

	)

143 
	#_POSIX_TIMEOUTS
 200809L

	)

146 
	#_POSIX_SPIN_LOCKS
 200809L

	)

149 
	#_POSIX_SPAWN
 200809L

	)

152 
	#_POSIX_TIMERS
 200809L

	)

155 
	#_POSIX_BARRIERS
 200809L

	)

158 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

161 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

164 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

167 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

170 
	#_POSIX_ADVISORY_INFO
 200809L

	)

173 
	#_POSIX_IPV6
 200809L

	)

176 
	#_POSIX_RAW_SOCKETS
 200809L

	)

179 
	#_POSIX2_CHAR_TERM
 200809L

	)

182 
	#_POSIX_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

186 
	#_POSIX_TRACE
 -1

	)

187 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

188 
	#_POSIX_TRACE_INHERIT
 -1

	)

189 
	#_POSIX_TRACE_LOG
 -1

	)

192 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/stdint-intn.h

19 #i‚de‡
_BITS_STDINT_INTN_H


20 
	#_BITS_STDINT_INTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__öt8_t
 
	töt8_t
;

25 
__öt16_t
 
	töt16_t
;

26 
__öt32_t
 
	töt32_t
;

27 
__öt64_t
 
	töt64_t
;

	@/usr/include/bits/stdint-uintn.h

19 #i‚de‡
_BITS_STDINT_UINTN_H


20 
	#_BITS_STDINT_UINTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__uöt8_t
 
	tuöt8_t
;

25 
__uöt16_t
 
	tuöt16_t
;

26 
__uöt32_t
 
	tuöt32_t
;

27 
__uöt64_t
 
	tuöt64_t
;

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

24 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

25 
	$__LDBL_REDIR_DECL
 (
•rötf
)

26 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

27 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

28 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

29 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

30 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

31 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

32 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

34 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

35 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

36 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

39 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


40 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

41 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

44 #ifdef 
__USE_ISOC99


45 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

46 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

47 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

48 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

50 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

51 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

52 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

56 #ifde‡
__USE_XOPEN2K8


57 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

58 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

61 #ifde‡
__USE_GNU


62 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

63 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

64 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

65 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

66 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


70 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

72 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


73 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

74 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 1

77 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

79 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

81 #ifde‡
__USE_XOPEN2K8


82 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

85 #ifde‡
__USE_GNU


86 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_BITS_STDIO_H


20 
	#_BITS_STDIO_H
 1

	)

22 #i‚de‡
_STDIO_H


26 #i‚de‡
__exã∫_ölöe


27 
	#__STDIO_INLINE
 
ölöe


	)

29 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

33 #ifde‡
__USE_EXTERN_INLINES


36 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

38 
__STDIO_INLINE
 

39 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

41  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

42 
	}
}

46 
__STDIO_INLINE
 

47 
	$gëch¨
 ()

49  
	`gëc
 (
°dö
);

50 
	}
}

53 #ifde‡
__USE_MISC


55 
__STDIO_INLINE
 

56 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

58  
	`__gëc_u∆ocked_body
 (
__Â
);

59 
	}
}

63 #ifde‡
__USE_POSIX


65 
__STDIO_INLINE
 

66 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

68  
	`__gëc_u∆ocked_body
 (
__Â
);

69 
	}
}

72 
__STDIO_INLINE
 

73 
	$gëch¨_u∆ocked
 ()

75  
	`__gëc_u∆ocked_body
 (
°dö
);

76 
	}
}

81 
__STDIO_INLINE
 

82 
	$putch¨
 (
__c
)

84  
	`putc
 (
__c
, 
°dout
);

85 
	}
}

88 #ifde‡
__USE_MISC


90 
__STDIO_INLINE
 

91 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

93  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

94 
	}
}

98 #ifde‡
__USE_POSIX


100 
__STDIO_INLINE
 

101 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

103  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

104 
	}
}

107 
__STDIO_INLINE
 

108 
	$putch¨_u∆ocked
 (
__c
)

110  
	`__putc_u∆ocked_body
 (
__c
, 
°dout
);

111 
	}
}

115 #ifdef 
__USE_GNU


117 
__STDIO_INLINE
 
__ssize_t


118 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

120  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

121 
	}
}

125 #ifde‡
__USE_MISC


127 
__STDIO_INLINE
 

128 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

130  
	`__„of_u∆ocked_body
 (
__°ªam
);

131 
	}
}

134 
__STDIO_INLINE
 

135 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

137  
	`__„º‹_u∆ocked_body
 (
__°ªam
);

138 
	}
}

144 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

145 && !
deföed
 
	g__˝lu•lus


147 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

148 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

149 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

150 && (
size_t
Ë(
size
) != 0) \

151 ? ({ *
__±r
 = (*Ë(
±r
); \

152 
FILE
 *
__°ªam
 = (
°ªam
); \

153 
size_t
 
__˙t
; \

154 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

155 
__˙t
 > 0; --__cnt) \

157 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
); \

158 i‡(
__c
 =
EOF
) \

160 *
__±r
++ = 
__c
; \

162 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

163 / (
size_t
Ë(
size
); }) \

164 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

165 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

167 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

168 (Ë(
n
), (
size_t
) 0) \

169 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

171 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

172 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

173 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

174 && (
size_t
Ë(
size
) != 0) \

175 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

176 
FILE
 *
__°ªam
 = (
°ªam
); \

177 
size_t
 
__˙t
; \

178 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

179 
__˙t
 > 0; --__cnt) \

180 i‡(
	`putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

182 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

183 / (
size_t
Ë(
size
); }) \

184 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

185 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

187 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

188 (Ë(
n
), (
size_t
) 0) \

189 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

193 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_BITS_STDIO2_H


20 
	#_BITS_STDIO2_H
 1

	)

22 #i‚de‡
_STDIO_H


26 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

28 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

29 c⁄° *
__ª°ri˘
 
__f‹m©
,

30 
__gnuc_va_li°
 
__≠
Ë
__THROW
;

32 #ifde‡
__va_¨g_∑ck


33 
__f‹tify_fun˘i⁄
 

34 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

36  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

37 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

38 
	}
}

39 #ñi‡!
deföed
 
__˝lu•lus


40 
	#•rötf
(
°r
, ...) \

41 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

42 
__VA_ARGS__
)

	)

45 
__f‹tify_fun˘i⁄
 

46 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

47 
__gnuc_va_li°
 
__≠
))

49  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

50 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

51 
	}
}

53 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


55 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 ...Ë
__THROW
;

58 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

59 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

60 
__gnuc_va_li°
 
__≠
Ë
__THROW
;

62 #ifde‡
__va_¨g_∑ck


63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

65 c⁄° *
__ª°ri˘
 
__fmt
, ...))

67  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

68 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

69 
	}
}

70 #ñi‡!
deföed
 
__˝lu•lus


71 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

72 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

73 
__VA_ARGS__
)

	)

76 
__f‹tify_fun˘i⁄
 

77 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

78 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

80  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

81 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

82 
	}
}

86 #i‡
__USE_FORTIFY_LEVEL
 > 1

88 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

90 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

91 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

92 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__≠
);

93 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

94 
__gnuc_va_li°
 
__≠
);

96 #ifde‡
__va_¨g_∑ck


97 
__f‹tify_fun˘i⁄
 

98 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

100  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

101 
	`__va_¨g_∑ck
 ());

102 
	}
}

104 
__f‹tify_fun˘i⁄
 

105 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

107  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

108 
	}
}

109 #ñi‡!
deföed
 
__˝lu•lus


110 
	#¥ötf
(...) \

111 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

112 
	#Ârötf
(
°ªam
, ...) \

113 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

116 
__f‹tify_fun˘i⁄
 

117 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

119 #ifde‡
__USE_EXTERN_INLINES


120  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

124 
	}
}

126 
__f‹tify_fun˘i⁄
 

127 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

128 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

130  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

131 
	}
}

133 #ifde‡
__USE_XOPEN2K8


134 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

135 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

136 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

137 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

138 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

140 #ifde‡
__va_¨g_∑ck


141 
__f‹tify_fun˘i⁄
 

142 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

144  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

145 
	`__va_¨g_∑ck
 ());

146 
	}
}

147 #ñi‡!
deföed
 
__˝lu•lus


148 
	#d¥ötf
(
fd
, ...) \

149 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

152 
__f‹tify_fun˘i⁄
 

153 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

155  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

156 
	}
}

159 #ifde‡
__USE_GNU


161 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, ...)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

164 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

165 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

166 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

167 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

168 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

170 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

171 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

172 
__Êag
,

173 c⁄° *
__ª°ri˘
 
__f‹m©
,

174 
__gnuc_va_li°
 
__¨gs
)

175 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

177 #ifde‡
__va_¨g_∑ck


178 
__f‹tify_fun˘i⁄
 

179 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

181  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

185 
__f‹tify_fun˘i⁄
 

186 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

189  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

190 
	`__va_¨g_∑ck
 ());

191 
	}
}

193 
__f‹tify_fun˘i⁄
 

194 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

195 c⁄° *
__ª°ri˘
 
__fmt
, ...))

197  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

198 
	`__va_¨g_∑ck
 ());

199 
	}
}

200 #ñi‡!
deföed
 
__˝lu•lus


201 
	#a•rötf
(
±r
, ...) \

202 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

203 
	#__a•rötf
(
±r
, ...) \

204 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

205 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

206 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

209 
__f‹tify_fun˘i⁄
 

210 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

211 
__gnuc_va_li°
 
__≠
))

213  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

214 
	}
}

216 
__f‹tify_fun˘i⁄
 

217 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

218 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

220  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

221 
__≠
);

222 
	}
}

228 #i‡
__GLIBC_USE
 (
DEPRECATED_GETS
)

229 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

230 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

231 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

234 
__f‹tify_fun˘i⁄
 
__wur
 *

235 
	$gës
 (*
__°r
)

237 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

238  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

239  
	`__gës_w¨n
 (
__°r
);

240 
	}
}

243 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

244 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

245 *
	`__REDIRECT
 (
__fgës_Æüs
,

246 (*
__ª°ri˘
 
__s
, 
__n
,

247 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

248 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

249 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

250 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

251 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

254 
__f‹tify_fun˘i⁄
 
__wur
 *

255 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

257 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

259 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

260  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

262 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

263  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

265  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

266 
	}
}

268 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

269 
size_t
 
__size
, size_à
__n
,

270 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

271 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

272 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

273 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

274 
‰ód
Ë
__wur
;

275 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

276 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

277 
size_t
 
__size
, size_à
__n
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
),

279 
__‰ód_chk
)

280 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

283 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


284 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

285 
FILE
 *
__ª°ri˘
 
__°ªam
)

287 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

289 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

290 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

291 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

292  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

294 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

295  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

297  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

298 
	}
}

300 #ifde‡
__USE_GNU


301 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

302 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

303 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

304 (*
__ª°ri˘
 
__s
, 
__n
,

305 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

306 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

307 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

308 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

309 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

312 
__f‹tify_fun˘i⁄
 
__wur
 *

313 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

315 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

317 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

318  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

320 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

321  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

323  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

324 
	}
}

327 #ifde‡
__USE_MISC


328 #unde‡
‰ód_u∆ocked


329 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

330 
size_t
 
__size
, size_à
__n
,

331 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

332 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

333 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

334 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

335 
‰ód_u∆ocked
Ë
__wur
;

336 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

337 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

338 
size_t
 
__size
, size_à
__n
,

339 
FILE
 *
__ª°ri˘
 
__°ªam
),

340 
__‰ód_u∆ocked_chk
)

341 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

344 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


345 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

346 
FILE
 *
__ª°ri˘
 
__°ªam
)

348 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

350 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

351 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

352 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

353  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

354 
__°ªam
);

356 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

357  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

358 
__°ªam
);

361 #ifde‡
__USE_EXTERN_INLINES


362 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

363 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

364 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

365 && 
__size
 * 
__n
 <= 8)

367 
size_t
 
__˙t
 = 
__size
 * 
__n
;

368 *
__˝å
 = (*Ë
__±r
;

369 i‡(
__˙t
 == 0)

372 ; 
__˙t
 > 0; --__cnt)

374 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
);

375 i‡(
__c
 =
EOF
)

377 *
__˝å
++ = 
__c
;

379  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

382  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

383 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‚de‡
_BITS_STDIO_LIM_H


19 
	#_BITS_STDIO_LIM_H
 1

	)

21 #i‚de‡
_STDIO_H


25 
	#L_tm≤am
 20

	)

26 
	#TMP_MAX
 238328

	)

27 
	#FILENAME_MAX
 4096

	)

29 #ifde‡
__USE_POSIX


30 
	#L_˘îmid
 9

	)

31 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


32 
	#L_cu£rid
 9

	)

36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__exã∫_ölöe
 

25 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

27  
	`°πod
 (
__≈å
, (**Ë
NULL
);

28 
	}
}

	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 #ifde‡
__USE_GNU


28 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

31 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

32 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
°r‰omd
)

35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string_fortified.h

18 #i‚de‡
_BITS_STRING_FORTIFIED_H


19 
	#_BITS_STRING_FORTIFIED_H
 1

	)

21 #i‚de‡
_STRING_H


25 #i‡!
__GNUC_PREREQ
 (5,0)

26 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

30 
__f‹tify_fun˘i⁄
 *

31 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

32 
size_t
 
__Àn
))

34  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

35 
	}
}

37 
__f‹tify_fun˘i⁄
 *

38 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

40  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

41 
	}
}

43 #ifde‡
__USE_GNU


44 
__f‹tify_fun˘i⁄
 *

45 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

46 
size_t
 
__Àn
))

48  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

49 
	}
}

58 
__f‹tify_fun˘i⁄
 *

59 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

63 #i‡!
	`__GNUC_PREREQ
 (5,0)

64 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

65 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

67 
	`__w¨n_mem£t_zîo_Àn
 ();

68  
__de°
;

71  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

72 
	}
}

74 #ifde‡
__USE_MISC


75 
	~<bôs/°rögs_f‹tifõd.h
>

77 
	$__ex∂icô_bzîo_chk
 (*
__de°
, 
size_t
 
__Àn
, size_à
__de°Àn
)

78 
__THROW
 
	`__n⁄nuŒ
 ((1));

80 
__f‹tify_fun˘i⁄
 

81 
	`__NTH
 (
	$ex∂icô_bzîo
 (*
__de°
, 
size_t
 
__Àn
))

83 
	`__ex∂icô_bzîo_chk
 (
__de°
, 
__Àn
, 
	`__bos0
 (__dest));

84 
	}
}

87 
__f‹tify_fun˘i⁄
 *

88 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

90  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

91 
	}
}

93 #ifde‡
__USE_GNU


94 
__f‹tify_fun˘i⁄
 *

95 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

97  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

98 
	}
}

102 
__f‹tify_fun˘i⁄
 *

103 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

104 
size_t
 
__Àn
))

106  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

107 
	}
}

110 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

111 
size_t
 
__de°Àn
Ë
__THROW
;

112 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

113 
size_t
 
__n
), 
°≤˝y
);

115 
__f‹tify_fun˘i⁄
 *

116 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

119 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

120  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

121  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

122 
	}
}

125 
__f‹tify_fun˘i⁄
 *

126 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

128  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

129 
	}
}

132 
__f‹tify_fun˘i⁄
 *

133 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

134 
size_t
 
__Àn
))

136  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

137 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/timesize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 
__öt8_t
 
	t__öt_Àa°8_t
;

53 
__uöt8_t
 
	t__uöt_Àa°8_t
;

54 
__öt16_t
 
	t__öt_Àa°16_t
;

55 
__uöt16_t
 
	t__uöt_Àa°16_t
;

56 
__öt32_t
 
	t__öt_Àa°32_t
;

57 
__uöt32_t
 
	t__uöt_Àa°32_t
;

58 
__öt64_t
 
	t__öt_Àa°64_t
;

59 
__uöt64_t
 
	t__uöt_Àa°64_t
;

62 #i‡
__WORDSIZE
 == 64

63 
	t__quad_t
;

64 
	t__u_quad_t
;

66 
__exãnsi⁄__
 
	t__quad_t
;

67 
__exãnsi⁄__
 
	t__u_quad_t
;

71 #i‡
__WORDSIZE
 == 64

72 
	t__ötmax_t
;

73 
	t__uötmax_t
;

75 
__exãnsi⁄__
 
	t__ötmax_t
;

76 
__exãnsi⁄__
 
	t__uötmax_t
;

109 
	#__S16_TYPE
 

	)

110 
	#__U16_TYPE
 

	)

111 
	#__S32_TYPE
 

	)

112 
	#__U32_TYPE
 

	)

113 
	#__SLONGWORD_TYPE
 

	)

114 
	#__ULONGWORD_TYPE
 

	)

115 #i‡
__WORDSIZE
 == 32

116 
	#__SQUAD_TYPE
 
__öt64_t


	)

117 
	#__UQUAD_TYPE
 
__uöt64_t


	)

118 
	#__SWORD_TYPE
 

	)

119 
	#__UWORD_TYPE
 

	)

120 
	#__SLONG32_TYPE
 

	)

121 
	#__ULONG32_TYPE
 

	)

122 
	#__S64_TYPE
 
__öt64_t


	)

123 
	#__U64_TYPE
 
__uöt64_t


	)

126 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

127 #ñi‡
__WORDSIZE
 == 64

128 
	t__SQUAD_TYPE
 

	)

129 
	t__UQUAD_TYPE
 

	)

130 
	t__SWORD_TYPE
 

	)

131 
	t__UWORD_TYPE
 

	)

132 
	t__SLONG32_TYPE
 

	)

133 
	t__ULONG32_TYPE
 

	)

134 
	t__S64_TYPE
 

	)

135 
	t__U64_TYPE
 

	)

137 
	t__STD_TYPE
 

	)

141 
	~<bôs/ty≥sizes.h
>

142 
	~<bôs/time64.h
>

145 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

146 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

147 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

148 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

149 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

150 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

151 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

152 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

153 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

154 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

155 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

156 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

157 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

158 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

159 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

160 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

161 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

162 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

164 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

165 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

168 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

171 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

174 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

179 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

180 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

183 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

184 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

187 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

188 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

191 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

193 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

196 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

198 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

202 
__off64_t
 
	t__loff_t
;

203 *
	t__ˇddr_t
;

206 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

209 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

214 
	t__sig_©omic_t
;

219 #i‡
__TIMESIZE
 =64 && 
deföed
 
__LIBC


220 
	#__time64_t
 
__time_t


	)

221 #ñi‡
__TIMESIZE
 != 64

222 
__STD_TYPE
 
__TIME64_T_TYPE
 
	g__time64_t
;

225 #unde‡
__STD_TYPE


	@/usr/include/bits/types/FILE.h

1 #i‚de‡
__FILE_deföed


2 
	#__FILE_deföed
 1

	)

4 
	g_IO_FILE
;

7 
_IO_FILE
 
	tFILE
;

	@/usr/include/bits/types/__FILE.h

1 #i‚de‡
____FILE_deföed


2 
	#____FILE_deföed
 1

	)

4 
	g_IO_FILE
;

5 
_IO_FILE
 
	t__FILE
;

	@/usr/include/bits/types/__fpos64_t.h

1 #i‚de‡
_____Âos64_t_deföed


2 
	#_____Âos64_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos64_t


12 
__off64_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos64_t
;

	@/usr/include/bits/types/__fpos_t.h

1 #i‚de‡
_____Âos_t_deföed


2 
	#_____Âos_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos_t


12 
__off_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos_t
;

	@/usr/include/bits/types/cookie_io_functions_t.h

18 #i‚de‡
__cookõ_io_fun˘i⁄s_t_deföed


19 
	#__cookõ_io_fun˘i⁄s_t_deföed
 1

	)

21 
	~<bôs/ty≥s.h
>

27 
__ssize_t
 
	tcookõ_ªad_fun˘i⁄_t
 (*
	t__cookõ
, *
	t__buf
,

28 
	tsize_t
 
	t__nbyãs
);

36 
__ssize_t
 
	tcookõ_wrôe_fun˘i⁄_t
 (*
	t__cookõ
, c⁄° *
	t__buf
,

37 
	tsize_t
 
	t__nbyãs
);

45 
	tcookõ_£ek_fun˘i⁄_t
 (*
	t__cookõ
, 
	t__off64_t
 *
	t__pos
, 
	t__w
);

48 
	tcookõ_˛o£_fun˘i⁄_t
 (*
	t__cookõ
);

55 
	s_IO_cookõ_io_fun˘i⁄s_t


57 
cookõ_ªad_fun˘i⁄_t
 *
	mªad
;

58 
cookõ_wrôe_fun˘i⁄_t
 *
	mwrôe
;

59 
cookõ_£ek_fun˘i⁄_t
 *
	m£ek
;

60 
cookõ_˛o£_fun˘i⁄_t
 *
	m˛o£
;

61 } 
	tcookõ_io_fun˘i⁄s_t
;

	@/usr/include/bits/types/error_t.h

19 #i‚de‡
__îr‹_t_deföed


20 
	#__îr‹_t_deföed
 1

	)

22 
	tîr‹_t
;

	@/usr/include/bits/types/locale_t.h

19 #i‚de‡
_BITS_TYPES_LOCALE_T_H


20 
	#_BITS_TYPES_LOCALE_T_H
 1

	)

22 
	~<bôs/ty≥s/__loˇÀ_t.h
>

24 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/types/struct_FILE.h

18 #i‚de‡
__°ru˘_FILE_deföed


19 
	#__°ru˘_FILE_deföed
 1

	)

25 #i‡
deföed
 
_IO_USE_OLD_IO_FILE
 && !deföed 
_LIBC


29 #i‡
deföed
 
_IO_lock_t_deföed
 && !deföed 
_LIBC


33 
	~<bôs/ty≥s.h
>

35 
	g_IO_FILE
;

36 
	g_IO_m¨kî
;

37 
	g_IO_codecvt
;

38 
	g_IO_wide_d©a
;

42 #i‚de‡
_IO_lock_t_deföed


43 
	t_IO_lock_t
;

49 
	s_IO_FILE


51 
	m_Êags
;

54 *
	m_IO_ªad_±r
;

55 *
	m_IO_ªad_íd
;

56 *
	m_IO_ªad_ba£
;

57 *
	m_IO_wrôe_ba£
;

58 *
	m_IO_wrôe_±r
;

59 *
	m_IO_wrôe_íd
;

60 *
	m_IO_buf_ba£
;

61 *
	m_IO_buf_íd
;

64 *
	m_IO_ßve_ba£
;

65 *
	m_IO_backup_ba£
;

66 *
	m_IO_ßve_íd
;

68 
_IO_m¨kî
 *
	m_m¨kîs
;

70 
_IO_FILE
 *
	m_chaö
;

72 
	m_fûío
;

73 
	m_Êags2
;

74 
__off_t
 
	m_ﬁd_off£t
;

77 
	m_cur_cﬁumn
;

78 sig√d 
	m_vèbÀ_off£t
;

79 
	m_sh‹tbuf
[1];

81 
_IO_lock_t
 *
	m_lock
;

82 #ifde‡
_IO_USE_OLD_IO_FILE


85 
	s_IO_FILE_com∂ëe


87 
_IO_FILE
 
	m_fûe
;

89 
__off64_t
 
	m_off£t
;

91 
_IO_codecvt
 *
	m_codecvt
;

92 
_IO_wide_d©a
 *
	m_wide_d©a
;

93 
_IO_FILE
 *
	m_‰ìªs_li°
;

94 *
	m_‰ìªs_buf
;

95 
size_t
 
	m__∑d5
;

96 
	m_mode
;

98 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

102 
	#__gëc_u∆ocked_body
(
_Â
) \

103 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
) \

104 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

106 
	#__putc_u∆ocked_body
(
_ch
, 
_Â
) \

107 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
) \

108 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

109 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

111 
	#_IO_EOF_SEEN
 0x0010

	)

112 
	#__„of_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

114 
	#_IO_ERR_SEEN
 0x0020

	)

115 
	#__„º‹_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

117 
	#_IO_USER_LOCK
 0x8000

	)

	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #ifde‡
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/unistd_ext.h

19 #i‚de‡
_UNISTD_H


23 #ifde‡
__USE_GNU


34 
__pid_t
 
	$gëtid
 (Ë
__THROW
;

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

36 
	#__WNOTHREAD
 0x20000000

	)

38 
	#__WALL
 0x40000000

	)

39 
	#__WCLONE
 0x80000000

	)

42 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


43 #i‚de‡
__ENUM_IDTYPE_T


44 
	#__ENUM_IDTYPE_T
 1

	)

48 #unde‡
P_ALL


49 #unde‡
P_PID


50 #unde‡
P_PGID


54 
	mP_ALL
,

55 
	mP_PID
,

56 
	mP_PGID


57 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

7 
	#__WORDSIZE32_SIZE_ULONG
 0

	)

8 
	#__WORDSIZE32_PTRDIFF_LONG
 0

	)

11 #ifde‡
__x86_64__


12 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

14 
	#__SYSCALL_WORDSIZE
 64

	)

16 
	#__WORDSIZE_TIME64_COMPAT32
 0

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

62 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

64 
	~<bôs/uio_lim.h
>

65 #ifde‡
__IOV_MAX


66 
	#IOV_MAX
 
__IOV_MAX


	)

68 #unde‡
IOV_MAX


73 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

76 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

79 
	#NL_MSGMAX
 
INT_MAX


	)

83 #i‡
deföed
 
__USE_GNU
 || !deföed 
__USE_XOPEN2K8


84 
	#NL_NMAX
 
INT_MAX


	)

88 
	#NL_SETMAX
 
INT_MAX


	)

91 
	#NL_TEXTMAX
 
INT_MAX


	)

94 
	#NZERO
 20

	)

98 #ifde‡
INT_MAX


99 #i‡
INT_MAX
 == 32767

100 
	#WORD_BIT
 16

	)

102 #i‡
INT_MAX
 == 2147483647

103 
	#WORD_BIT
 32

	)

106 
	#WORD_BIT
 64

	)

109 #ñi‡
deföed
 
__INT_MAX__


110 #i‡
__INT_MAX__
 == 32767

111 
	#WORD_BIT
 16

	)

113 #i‡
__INT_MAX__
 == 2147483647

114 
	#WORD_BIT
 32

	)

117 
	#WORD_BIT
 64

	)

121 
	#WORD_BIT
 32

	)

125 #ifde‡
LONG_MAX


126 #i‡
LONG_MAX
 == 2147483647

127 
	#LONG_BIT
 32

	)

130 
	#LONG_BIT
 64

	)

132 #ñi‡
deföed
 
__LONG_MAX__


133 #i‡
__LONG_MAX__
 == 2147483647

134 
	#LONG_BIT
 32

	)

137 
	#LONG_BIT
 64

	)

140 
	~<bôs/w‹dsize.h
>

141 #i‡
__WORDSIZE
 == 64

142 
	#LONG_BIT
 64

	)

144 
	#LONG_BIT
 32

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

120 #unde‡
__USE_ISOC11


121 #unde‡
__USE_ISOC99


122 #unde‡
__USE_ISOC95


123 #unde‡
__USE_ISOCXX11


124 #unde‡
__USE_POSIX


125 #unde‡
__USE_POSIX2


126 #unde‡
__USE_POSIX199309


127 #unde‡
__USE_POSIX199506


128 #unde‡
__USE_XOPEN


129 #unde‡
__USE_XOPEN_EXTENDED


130 #unde‡
__USE_UNIX98


131 #unde‡
__USE_XOPEN2K


132 #unde‡
__USE_XOPEN2KXSI


133 #unde‡
__USE_XOPEN2K8


134 #unde‡
__USE_XOPEN2K8XSI


135 #unde‡
__USE_LARGEFILE


136 #unde‡
__USE_LARGEFILE64


137 #unde‡
__USE_FILE_OFFSET64


138 #unde‡
__USE_MISC


139 #unde‡
__USE_ATFILE


140 #unde‡
__USE_GNU


141 #unde‡
__USE_FORTIFY_LEVEL


142 #unde‡
__KERNEL_STRICT_NAMES


143 #unde‡
__GLIBC_USE_ISOC2X


144 #unde‡
__GLIBC_USE_DEPRECATED_GETS


145 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


149 #i‚de‡
_LOOSE_KERNEL_NAMES


150 
	#__KERNEL_STRICT_NAMES


	)

160 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


161 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

162 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

164 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

171 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


172 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

173 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

175 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

179 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

185 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

186 && !
deföed
 
	g_DEFAULT_SOURCE


188 #unde‡
_DEFAULT_SOURCE


189 
	#_DEFAULT_SOURCE
 1

	)

193 #ifde‡
_GNU_SOURCE


194 #unde‡
_ISOC95_SOURCE


195 
	#_ISOC95_SOURCE
 1

	)

196 #unde‡
_ISOC99_SOURCE


197 
	#_ISOC99_SOURCE
 1

	)

198 #unde‡
_ISOC11_SOURCE


199 
	#_ISOC11_SOURCE
 1

	)

200 #unde‡
_ISOC2X_SOURCE


201 
	#_ISOC2X_SOURCE
 1

	)

202 #unde‡
_POSIX_SOURCE


203 
	#_POSIX_SOURCE
 1

	)

204 #unde‡
_POSIX_C_SOURCE


205 
	#_POSIX_C_SOURCE
 200809L

	)

206 #unde‡
_XOPEN_SOURCE


207 
	#_XOPEN_SOURCE
 700

	)

208 #unde‡
_XOPEN_SOURCE_EXTENDED


209 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

210 #unde‡
_LARGEFILE64_SOURCE


211 
	#_LARGEFILE64_SOURCE
 1

	)

212 #unde‡
_DEFAULT_SOURCE


213 
	#_DEFAULT_SOURCE
 1

	)

214 #unde‡
_ATFILE_SOURCE


215 
	#_ATFILE_SOURCE
 1

	)

220 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

221 || (!
deföed
 
	g__STRICT_ANSI__
 \

222 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

223 && !
deföed
 
	g_ISOC2X_SOURCE
 \

224 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

225 && !
deföed
 
	g_XOPEN_SOURCE
))

226 #unde‡
_DEFAULT_SOURCE


227 
	#_DEFAULT_SOURCE
 1

	)

231 #i‡(
deföed
 
_ISOC2X_SOURCE
 \

232 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

233 
	#__GLIBC_USE_ISOC2X
 1

	)

235 
	#__GLIBC_USE_ISOC2X
 0

	)

239 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC2X_SOURCE
 \

240 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

241 
	#__USE_ISOC11
 1

	)

245 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

246 || 
deföed
 
_ISOC2X_SOURCE
 \

247 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

248 
	#__USE_ISOC99
 1

	)

252 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

253 || 
deföed
 
_ISOC2X_SOURCE
 \

254 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

255 
	#__USE_ISOC95
 1

	)

258 #ifde‡
__˝lu•lus


260 #i‡
__˝lu•lus
 >= 201703L

261 
	#__USE_ISOC11
 1

	)

265 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


266 
	#__USE_ISOCXX11
 1

	)

267 
	#__USE_ISOC99
 1

	)

274 #ifde‡
_DEFAULT_SOURCE


275 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


276 
	#__USE_POSIX_IMPLICITLY
 1

	)

278 #unde‡
_POSIX_SOURCE


279 
	#_POSIX_SOURCE
 1

	)

280 #unde‡
_POSIX_C_SOURCE


281 
	#_POSIX_C_SOURCE
 200809L

	)

284 #i‡((!
deföed
 
__STRICT_ANSI__
 \

285 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

286 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

287 
	#_POSIX_SOURCE
 1

	)

288 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

289 
	#_POSIX_C_SOURCE
 2

	)

290 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

291 
	#_POSIX_C_SOURCE
 199506L

	)

292 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

293 
	#_POSIX_C_SOURCE
 200112L

	)

295 
	#_POSIX_C_SOURCE
 200809L

	)

297 
	#__USE_POSIX_IMPLICITLY
 1

	)

306 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

307 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

308 
	#_POSIX_SOURCE
 1

	)

309 #unde‡
_POSIX_C_SOURCE


310 
	#_POSIX_C_SOURCE
 199506L

	)

313 #i‡(
deföed
 
_POSIX_SOURCE
 \

314 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

315 || 
deföed
 
_XOPEN_SOURCE
)

316 
	#__USE_POSIX
 1

	)

319 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


320 
	#__USE_POSIX2
 1

	)

323 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

324 
	#__USE_POSIX199309
 1

	)

327 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

328 
	#__USE_POSIX199506
 1

	)

331 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

332 
	#__USE_XOPEN2K
 1

	)

333 #unde‡
__USE_ISOC95


334 
	#__USE_ISOC95
 1

	)

335 #unde‡
__USE_ISOC99


336 
	#__USE_ISOC99
 1

	)

339 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

340 
	#__USE_XOPEN2K8
 1

	)

341 #unde‡
_ATFILE_SOURCE


342 
	#_ATFILE_SOURCE
 1

	)

345 #ifdef 
_XOPEN_SOURCE


346 
	#__USE_XOPEN
 1

	)

347 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

348 
	#__USE_XOPEN_EXTENDED
 1

	)

349 
	#__USE_UNIX98
 1

	)

350 #unde‡
_LARGEFILE_SOURCE


351 
	#_LARGEFILE_SOURCE
 1

	)

352 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

353 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

354 
	#__USE_XOPEN2K8
 1

	)

355 
	#__USE_XOPEN2K8XSI
 1

	)

357 
	#__USE_XOPEN2K
 1

	)

358 
	#__USE_XOPEN2KXSI
 1

	)

359 #unde‡
__USE_ISOC95


360 
	#__USE_ISOC95
 1

	)

361 #unde‡
__USE_ISOC99


362 
	#__USE_ISOC99
 1

	)

365 #ifde‡
_XOPEN_SOURCE_EXTENDED


366 
	#__USE_XOPEN_EXTENDED
 1

	)

371 #ifde‡
_LARGEFILE_SOURCE


372 
	#__USE_LARGEFILE
 1

	)

375 #ifde‡
_LARGEFILE64_SOURCE


376 
	#__USE_LARGEFILE64
 1

	)

379 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

380 
	#__USE_FILE_OFFSET64
 1

	)

383 #i‡
deföed
 
_DEFAULT_SOURCE


384 
	#__USE_MISC
 1

	)

387 #ifdef 
_ATFILE_SOURCE


388 
	#__USE_ATFILE
 1

	)

391 #ifdef 
_GNU_SOURCE


392 
	#__USE_GNU
 1

	)

395 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

396 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

397 #i‡
_FORTIFY_SOURCE
 > 1

398 
	#__USE_FORTIFY_LEVEL
 2

	)

400 
	#__USE_FORTIFY_LEVEL
 1

	)

403 
	#__USE_FORTIFY_LEVEL
 0

	)

410 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


411 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

413 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

428 #i‡(
deföed
 
__USE_GNU
 \

429 && (
deföed
 
	g__˝lu•lus
 \

430 ? (
	g__˝lu•lus
 < 201103L && !
deföed
 
	g__GXX_EXPERIMENTAL_CXX0X__
) \

431 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

432 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

434 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

439 
	~<°dc-¥edef.h
>

447 #unde‡
__GNU_LIBRARY__


448 
	#__GNU_LIBRARY__
 6

	)

452 
	#__GLIBC__
 2

	)

453 
	#__GLIBC_MINOR__
 31

	)

455 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

456 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

459 #i‚de‡
__ASSEMBLER__


460 #i‚de‡
_SYS_CDEFS_H


461 
	~<sys/cdefs.h
>

466 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


467 
	#__USE_LARGEFILE
 1

	)

468 
	#__USE_LARGEFILE64
 1

	)

474 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

475 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

476 && 
deföed
 
	g__exã∫_ölöe


477 
	#__USE_EXTERN_INLINES
 1

	)

485 
	~<gnu/°ubs.h
>

	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
	slc⁄v


55 *
	mdecimÆ_poöt
;

56 *
	mthoußnds_£p
;

62 *
	mgroupög
;

68 *
	möt_cuº_symbﬁ
;

69 *
	mcuºícy_symbﬁ
;

70 *
	mm⁄_decimÆ_poöt
;

71 *
	mm⁄_thoußnds_£p
;

72 *
	mm⁄_groupög
;

73 *
	mposôive_sign
;

74 *
	m√g©ive_sign
;

75 
	möt_‰ac_digôs
;

76 
	m‰ac_digôs
;

78 
	mp_cs_¥e˚des
;

80 
	mp_£p_by_•a˚
;

82 
	mn_cs_¥e˚des
;

84 
	mn_£p_by_•a˚
;

91 
	mp_sign_po¢
;

92 
	mn_sign_po¢
;

93 #ifde‡
__USE_ISOC99


95 
	möt_p_cs_¥e˚des
;

97 
	möt_p_£p_by_•a˚
;

99 
	möt_n_cs_¥e˚des
;

101 
	möt_n_£p_by_•a˚
;

108 
	möt_p_sign_po¢
;

109 
	möt_n_sign_po¢
;

111 
	m__öt_p_cs_¥e˚des
;

112 
	m__öt_p_£p_by_•a˚
;

113 
	m__öt_n_cs_¥e˚des
;

114 
	m__öt_n_£p_by_•a˚
;

115 
	m__öt_p_sign_po¢
;

116 
	m__öt_n_sign_po¢
;

122 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

125 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

128 #ifdef 
__USE_XOPEN2K8


135 
	~<bôs/ty≥s/loˇÀ_t.h
>

141 
loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

142 
loˇÀ_t
 
__ba£
Ë
__THROW
;

148 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

149 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

150 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

151 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

152 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

153 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

154 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

155 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

156 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

157 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

158 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

159 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

160 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

161 | 
LC_NUMERIC_MASK
 \

162 | 
LC_TIME_MASK
 \

163 | 
LC_COLLATE_MASK
 \

164 | 
LC_MONETARY_MASK
 \

165 | 
LC_MESSAGES_MASK
 \

166 | 
LC_PAPER_MASK
 \

167 | 
LC_NAME_MASK
 \

168 | 
LC_ADDRESS_MASK
 \

169 | 
LC_TELEPHONE_MASK
 \

170 | 
LC_MEASUREMENT_MASK
 \

171 | 
LC_IDENTIFICATION_MASK
 \

172 )

	)

176 
loˇÀ_t
 
	$du∂oˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

180 
	$‰ìloˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

187 
loˇÀ_t
 
	$u£loˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	#LC_GLOBAL_LOCALE
 ((
loˇÀ_t
Ë-1L)

	)

195 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

42 
__loff_t
 
	tloff_t
;

45 #i‚de‡
__öo_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__öo_t
 
	töo_t
;

49 
__öo64_t
 
	töo_t
;

51 
	#__öo_t_deföed


	)

53 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


54 
__öo64_t
 
	töo64_t
;

55 
	#__öo64_t_deföed


	)

58 #i‚de‡
__dev_t_deföed


59 
__dev_t
 
	tdev_t
;

60 
	#__dev_t_deföed


	)

63 #i‚de‡
__gid_t_deföed


64 
__gid_t
 
	tgid_t
;

65 
	#__gid_t_deföed


	)

68 #i‚de‡
__mode_t_deföed


69 
__mode_t
 
	tmode_t
;

70 
	#__mode_t_deföed


	)

73 #i‚de‡
__∆ök_t_deföed


74 
__∆ök_t
 
	t∆ök_t
;

75 
	#__∆ök_t_deföed


	)

78 #i‚de‡
__uid_t_deföed


79 
__uid_t
 
	tuid_t
;

80 
	#__uid_t_deföed


	)

83 #i‚de‡
__off_t_deföed


84 #i‚de‡
__USE_FILE_OFFSET64


85 
__off_t
 
	toff_t
;

87 
__off64_t
 
	toff_t
;

89 
	#__off_t_deföed


	)

91 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


92 
__off64_t
 
	toff64_t
;

93 
	#__off64_t_deföed


	)

96 #i‚de‡
__pid_t_deföed


97 
__pid_t
 
	tpid_t
;

98 
	#__pid_t_deföed


	)

101 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

102 && !
deföed
 
__id_t_deföed


103 
__id_t
 
	tid_t
;

104 
	#__id_t_deföed


	)

107 #i‚de‡
__ssize_t_deföed


108 
__ssize_t
 
	tssize_t
;

109 
	#__ssize_t_deföed


	)

112 #ifdef 
__USE_MISC


113 #i‚de‡
__daddr_t_deföed


114 
__daddr_t
 
	tdaddr_t
;

115 
__ˇddr_t
 
	tˇddr_t
;

116 
	#__daddr_t_deföed


	)

120 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


121 
__key_t
 
	tkey_t
;

122 
	#__key_t_deföed


	)

125 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


126 
	~<bôs/ty≥s/˛ock_t.h
>

128 
	~<bôs/ty≥s/˛ockid_t.h
>

129 
	~<bôs/ty≥s/time_t.h
>

130 
	~<bôs/ty≥s/timî_t.h
>

132 #ifde‡
__USE_XOPEN


133 #i‚de‡
__u£c⁄ds_t_deföed


134 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

135 
	#__u£c⁄ds_t_deföed


	)

137 #i‚de‡
__su£c⁄ds_t_deföed


138 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

139 
	#__su£c⁄ds_t_deföed


	)

143 
	#__√ed_size_t


	)

144 
	~<°ddef.h
>

146 #ifde‡
__USE_MISC


148 
	tul⁄g
;

149 
	tush‹t
;

150 
	tuöt
;

155 
	~<bôs/°döt-öä.h
>

158 
__uöt8_t
 
	tu_öt8_t
;

159 
__uöt16_t
 
	tu_öt16_t
;

160 
__uöt32_t
 
	tu_öt32_t
;

161 
__uöt64_t
 
	tu_öt64_t
;

163 #i‡
__GNUC_PREREQ
 (2, 7)

164 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

166 
	tªgi°î_t
;

171 
	#__BIT_TYPES_DEFINED__
 1

	)

174 #ifdef 
__USE_MISC


176 
	~<ídün.h
>

179 
	~<sys/£À˘.h
>

183 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

184 && !
deföed
 
__blksize_t_deföed


185 
__blksize_t
 
	tblksize_t
;

186 
	#__blksize_t_deföed


	)

190 #i‚de‡
__USE_FILE_OFFSET64


191 #i‚de‡
__blk˙t_t_deföed


192 
__blk˙t_t
 
	tblk˙t_t
;

193 
	#__blk˙t_t_deföed


	)

195 #i‚de‡
__fsblk˙t_t_deföed


196 
__fsblk˙t_t
 
	tfsblk˙t_t
;

197 
	#__fsblk˙t_t_deföed


	)

199 #i‚de‡
__fsfû˙t_t_deföed


200 
__fsfû˙t_t
 
	tfsfû˙t_t
;

201 
	#__fsfû˙t_t_deföed


	)

204 #i‚de‡
__blk˙t_t_deföed


205 
__blk˙t64_t
 
	tblk˙t_t
;

206 
	#__blk˙t_t_deföed


	)

208 #i‚de‡
__fsblk˙t_t_deföed


209 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

210 
	#__fsblk˙t_t_deföed


	)

212 #i‚de‡
__fsfû˙t_t_deföed


213 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

214 
	#__fsfû˙t_t_deföed


	)

218 #ifde‡
__USE_LARGEFILE64


219 
__blk˙t64_t
 
	tblk˙t64_t
;

220 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

221 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

226 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


227 
	~<bôs/±hªadty≥s.h
>

230 
	g__END_DECLS


	@/usr/include/bits/endianness.h

1 #i‚de‡
_BITS_ENDIANNESS_H


2 
	#_BITS_ENDIANNESS_H
 1

	)

4 #i‚de‡
_BITS_ENDIAN_H


9 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/floatn-common.h

20 #i‚de‡
_BITS_FLOATN_COMMON_H


21 
	#_BITS_FLOATN_COMMON_H


	)

23 
	~<„©uªs.h
>

24 
	~<bôs/l⁄g-doubÀ.h
>

34 
	#__HAVE_FLOAT16
 0

	)

35 
	#__HAVE_FLOAT32
 1

	)

36 
	#__HAVE_FLOAT64
 1

	)

37 
	#__HAVE_FLOAT32X
 1

	)

38 
	#__HAVE_FLOAT128X
 0

	)

52 
	#__HAVE_DISTINCT_FLOAT16
 
__HAVE_FLOAT16


	)

53 
	#__HAVE_DISTINCT_FLOAT32
 0

	)

54 
	#__HAVE_DISTINCT_FLOAT64
 0

	)

55 
	#__HAVE_DISTINCT_FLOAT32X
 0

	)

56 
	#__HAVE_DISTINCT_FLOAT64X
 0

	)

57 
	#__HAVE_DISTINCT_FLOAT128X
 
__HAVE_FLOAT128X


	)

63 
	#__HAVE_FLOAT128_UNLIKE_LDBL
 (
__HAVE_DISTINCT_FLOAT128
 \

64 && 
__LDBL_MANT_DIG__
 !113)

	)

69 #i‡
__GNUC_PREREQ
 (7, 0Ë&& !
deföed
 
__˝lu•lus


70 
	#__HAVE_FLOATN_NOT_TYPEDEF
 1

	)

72 
	#__HAVE_FLOATN_NOT_TYPEDEF
 0

	)

75 #i‚de‡
__ASSEMBLER__


80 #i‡
__HAVE_FLOAT16


81 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


83 
	#__f16
(
x
Ë((
_Flﬂt16
Ëx##
f
)

	)

85 
	#__f16
(
x
Ëx##
f16


	)

89 #i‡
__HAVE_FLOAT32


90 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


91 
	#__f32
(
x
Ëx##
f


	)

93 
	#__f32
(
x
Ëx##
f32


	)

97 #i‡
__HAVE_FLOAT64


98 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
	#__f64
(
x
Ëx##
l


	)

102 
	#__f64
(
x
Ë
	)
x

105 
	#__f64
(
x
Ëx##
f64


	)

109 #i‡
__HAVE_FLOAT32X


110 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


111 
	#__f32x
(
x
Ë
	)
x

113 
	#__f32x
(
x
Ëx##
f32x


	)

117 #i‡
__HAVE_FLOAT64X


118 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


119 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


120 
	#__f64x
(
x
Ëx##
l


	)

122 
	#__f64x
(
x
Ë
	`__f128
 (x)

	)

125 
	#__f64x
(
x
Ëx##
f64x


	)

129 #i‡
__HAVE_FLOAT128X


130 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


133 
	#__f128x
(
x
Ëx##
f128x


	)

138 #i‡
__HAVE_FLOAT16


139 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


140 
_Com∂ex
 
	t__cÊﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HC__
)));

141 
	#__CFLOAT16
 
__cÊﬂt16


	)

143 
	#__CFLOAT16
 
_Com∂ex
 
_Flﬂt16


	)

147 #i‡
__HAVE_FLOAT32


148 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


149 
	#__CFLOAT32
 
_Com∂ex
 

	)

151 
	#__CFLOAT32
 
_Com∂ex
 
_Flﬂt32


	)

155 #i‡
__HAVE_FLOAT64


156 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


157 #ifde‡
__NO_LONG_DOUBLE_MATH


158 
	#__CFLOAT64
 
_Com∂ex
 

	)

160 
	#__CFLOAT64
 
_Com∂ex
 

	)

163 
	#__CFLOAT64
 
_Com∂ex
 
_Flﬂt64


	)

167 #i‡
__HAVE_FLOAT32X


168 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


169 
	#__CFLOAT32X
 
_Com∂ex
 

	)

171 
	#__CFLOAT32X
 
_Com∂ex
 
_Flﬂt32x


	)

175 #i‡
__HAVE_FLOAT64X


176 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


177 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


178 
	#__CFLOAT64X
 
_Com∂ex
 

	)

180 
	#__CFLOAT64X
 
__CFLOAT128


	)

183 
	#__CFLOAT64X
 
_Com∂ex
 
_Flﬂt64x


	)

187 #i‡
__HAVE_FLOAT128X


188 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


191 
	#__CFLOAT128X
 
_Com∂ex
 
_Flﬂt128x


	)

196 #i‡
__HAVE_FLOAT16


198 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


199 
	t_Flﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HF__
)));

202 #i‡!
__GNUC_PREREQ
 (7, 0)

203 
	#__buûtö_huge_vÆf16
(Ë((
_Flﬂt16
Ë
	`__buûtö_huge_vÆ
 ())

	)

204 
	#__buûtö_öff16
(Ë((
_Flﬂt16
Ë
	`__buûtö_öf
 ())

	)

205 
	#__buûtö_«nf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«n
 (x))

	)

206 
	#__buûtö_«nsf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«ns
 (x))

	)

211 #i‡
__HAVE_FLOAT32


213 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


214 
	t_Flﬂt32
;

217 #i‡!
__GNUC_PREREQ
 (7, 0)

218 
	#__buûtö_huge_vÆf32
(Ë(
	`__buûtö_huge_vÆf
 ())

	)

219 
	#__buûtö_öff32
(Ë(
	`__buûtö_öff
 ())

	)

220 
	#__buûtö_«nf32
(
x
Ë(
	`__buûtö_«nf
 (x))

	)

221 
	#__buûtö_«nsf32
(
x
Ë(
	`__buûtö_«nsf
 (x))

	)

226 #i‡
__HAVE_FLOAT64


235 #ifde‡
__NO_LONG_DOUBLE_MATH


237 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


238 
	t_Flﬂt64
;

241 #i‡!
__GNUC_PREREQ
 (7, 0)

242 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

243 
	#__buûtö_öff64
(Ë(
	`__buûtö_öÊ
 ())

	)

244 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

245 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

250 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


251 
	t_Flﬂt64
;

254 #i‡!
__GNUC_PREREQ
 (7, 0)

255 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

256 
	#__buûtö_öff64
(Ë(
	`__buûtö_öf
 ())

	)

257 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«n
 (x))

	)

258 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

265 #i‡
__HAVE_FLOAT32X


267 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


268 
	t_Flﬂt32x
;

271 #i‡!
__GNUC_PREREQ
 (7, 0)

272 
	#__buûtö_huge_vÆf32x
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

273 
	#__buûtö_öff32x
(Ë(
	`__buûtö_öf
 ())

	)

274 
	#__buûtö_«nf32x
(
x
Ë(
	`__buûtö_«n
 (x))

	)

275 
	#__buûtö_«nsf32x
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

280 #i‡
__HAVE_FLOAT64X


282 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


284 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


285 
	t_Flﬂt64x
;

288 #i‡!
__GNUC_PREREQ
 (7, 0)

289 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

290 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öÊ
 ())

	)

291 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

292 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

297 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


298 
_Flﬂt128
 
	t_Flﬂt64x
;

301 #i‡!
__GNUC_PREREQ
 (7, 0)

302 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆf128
 ())

	)

303 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öff128
 ())

	)

304 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«nf128
 (x))

	)

305 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«nsf128
 (x))

	)

312 #i‡
__HAVE_FLOAT128X


314 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


318 #i‡!
__GNUC_PREREQ
 (7, 0)

319 
	#__buûtö_huge_vÆf128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_huge_vÆ
 ())

	)

320 
	#__buûtö_öff128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_öf
 ())

	)

321 
	#__buûtö_«nf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«n
 (x))

	)

322 
	#__buûtö_«nsf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«ns
 (x))

	)

	@/usr/include/bits/getopt_core.h

20 #i‚de‡
_GETOPT_CORE_H


21 
	#_GETOPT_CORE_H
 1

	)

28 
__BEGIN_DECLS


36 *
›èrg
;

50 
›töd
;

55 
›ãº
;

59 
›t›t
;

91 
	$gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

92 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

94 
__END_DECLS


	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/locale.h

19 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


23 #i‚de‡
_BITS_LOCALE_H


24 
	#_BITS_LOCALE_H
 1

	)

26 
	#__LC_CTYPE
 0

	)

27 
	#__LC_NUMERIC
 1

	)

28 
	#__LC_TIME
 2

	)

29 
	#__LC_COLLATE
 3

	)

30 
	#__LC_MONETARY
 4

	)

31 
	#__LC_MESSAGES
 5

	)

32 
	#__LC_ALL
 6

	)

33 
	#__LC_PAPER
 7

	)

34 
	#__LC_NAME
 8

	)

35 
	#__LC_ADDRESS
 9

	)

36 
	#__LC_TELEPHONE
 10

	)

37 
	#__LC_MEASUREMENT
 11

	)

38 
	#__LC_IDENTIFICATION
 12

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_COMMON_H


20 
	#_BITS_PTHREADTYPES_COMMON_H
 1

	)

23 
	~<bôs/thªad-sh¨ed-ty≥s.h
>

27 
	t±hªad_t
;

34 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

35 
	m__Æign
;

36 } 
	t±hªad_muãx©å_t
;

43 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

44 
	m__Æign
;

45 } 
	t±hªad_c⁄d©å_t
;

49 
	t±hªad_key_t
;

53 
	t__ONCE_ALIGNMENT
 
	t±hªad_⁄˚_t
;

56 
	u±hªad_©å_t


58 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

59 
	m__Æign
;

61 #i‚de‡
__have_±hªad_©å_t


62 
±hªad_©å_t
 
	t±hªad_©å_t
;

63 
	#__have_±hªad_©å_t
 1

	)

69 
__±hªad_muãx_s
 
	m__d©a
;

70 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

71 
	m__Æign
;

72 } 
	t±hªad_muãx_t
;

77 
__±hªad_c⁄d_s
 
	m__d©a
;

78 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

79 
__exãnsi⁄__
 
	m__Æign
;

80 } 
	t±hªad_c⁄d_t
;

83 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 
__±hªad_rwlock_¨ch_t
 
	m__d©a
;

89 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

90 
	m__Æign
;

91 } 
	t±hªad_rwlock_t
;

95 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

96 
	m__Æign
;

97 } 
	t±hªad_rwlock©å_t
;

101 #ifde‡
__USE_XOPEN2K


103 vﬁ©ûê
	t±hªad_•ölock_t
;

110 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

111 
	m__Æign
;

112 } 
	t±hªad_b¨rõr_t
;

116 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

117 
	m__Æign
;

118 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/strings_fortified.h

19 #i‚de‡
__STRINGS_FORTIFIED


20 
	#__STRINGS_FORTIFIED
 1

	)

22 
__f‹tify_fun˘i⁄
 

23 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

25 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

26 
	}
}

28 
__f‹tify_fun˘i⁄
 

29 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

31 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

32 
	}
}

	@/usr/include/bits/time64.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TIME64_H


24 
	#_BITS_TIME64_H
 1

	)

28 #i‡
__TIMESIZE
 == 64

30 
	#__TIME64_T_TYPE
 
__TIME_T_TYPE


	)

33 
	#__TIME64_T_TYPE
 
__SQUAD_TYPE


	)

	@/usr/include/bits/timesize.h

19 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


21 
	#__TIMESIZE
 64

	)

24 
	#__TIMESIZE
 
__WORDSIZE


	)

	@/usr/include/bits/types/__locale_t.h

20 #i‚de‡
_BITS_TYPES___LOCALE_T_H


21 
	#_BITS_TYPES___LOCALE_T_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

42 
__loˇÀ_°ru˘
 *
	t__loˇÀ_t
;

	@/usr/include/bits/types/__mbstate_t.h

1 #i‚de‡
____mb°©e_t_deföed


2 
	#____mb°©e_t_deföed
 1

	)

8 #i‚de‡
__WINT_TYPE__


9 
	#__WINT_TYPE__
 

	)

15 
	m__cou¡
;

18 
__WINT_TYPE__
 
	m__wch
;

19 
	m__wchb
[4];

20 } 
	m__vÆue
;

21 } 
	t__mb°©e_t
;

	@/usr/include/bits/types/clock_t.h

1 #i‚de‡
__˛ock_t_deföed


2 
	#__˛ock_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ock_t
 
	t˛ock_t
;

	@/usr/include/bits/types/clockid_t.h

1 #i‚de‡
__˛ockid_t_deföed


2 
	#__˛ockid_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ockid_t
 
	t˛ockid_t
;

	@/usr/include/bits/types/time_t.h

1 #i‚de‡
__time_t_deföed


2 
	#__time_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__time_t
 
	ttime_t
;

	@/usr/include/bits/types/timer_t.h

1 #i‚de‡
__timî_t_deföed


2 
	#__timî_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__timî_t
 
	ttimî_t
;

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__RLIM_T_MATCHES_RLIM64_T
 1

	)

89 
	#__STATFS_MATCHES_STATFS64
 1

	)

91 
	#__RLIM_T_MATCHES_RLIM64_T
 0

	)

93 
	#__STATFS_MATCHES_STATFS64
 0

	)

97 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio_lim.h

19 #i‚de‡
_BITS_UIO_LIM_H


20 
	#_BITS_UIO_LIM_H
 1

	)

30 
	#__IOV_MAX
 1024

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ídün.h
>

26 #ifde‡
__USE_MISC


27 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

28 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

29 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

30 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

33 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


35 
	~<bôs/byãsw≠.h
>

36 
	~<bôs/uöä-idítôy.h
>

38 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


39 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

40 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

41 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

42 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

44 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

45 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

46 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

47 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

49 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

50 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

51 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

52 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

55 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

56 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

57 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

58 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

60 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

61 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

62 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

63 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

65 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

66 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

67 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

68 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

58 
	#__NTHNL
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__NTHNL
(
f˘
Ëf˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

69 
	#__NTHNL
(
f˘
Ë
	)
fct

75 #i‡(
deföed
 
__˝lu•lus
 \

76 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

77 
	#__ölöe
 
ölöe


	)

79 
	#__ölöe


	)

82 
	#__THROW


	)

83 
	#__THROWNL


	)

84 
	#__NTH
(
f˘
Ë
	)
fct

91 #i‡
deföed
 
__˛™g__
 && deföed 
__has_exãnsi⁄


92 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë
	`__has_exãnsi⁄
 (ext)

	)

94 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë0

	)

99 
	#__P
(
¨gs
Ë
	)
args

100 
	#__PMT
(
¨gs
Ë
	)
args

105 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

106 
	#__STRING
(
x
Ë#x

	)

109 
	#__±r_t
 *

	)

113 #ifdef 
__˝lu•lus


114 
	#__BEGIN_DECLS
 "C" {

	)

115 
	#__END_DECLS
 }

	)

117 
	#__BEGIN_DECLS


	)

118 
	#__END_DECLS


	)

123 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

124 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

126 #i‡
__GNUC_PREREQ
 (4,3)

127 
	#__w¨nde˛
(
«me
, 
msg
) \

128 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

129 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

130 
	#__îr‹de˛
(
«me
, 
msg
) \

131 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

133 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

134 
	#__w¨«âr
(
msg
)

	)

135 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

142 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

143 
	#__Êex¨r
 []

	)

144 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

145 #ñi‡
__GNUC_PREREQ
 (2,97)

148 
	#__Êex¨r
 []

	)

149 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

150 #ñi‡
deföed
 
__GNUC__


153 
	#__Êex¨r
 [0]

	)

154 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

157 
	#__Êex¨r
 [1]

	)

158 
	#__glibc_c99_Êex¨r_avaûabÀ
 0

	)

172 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

174 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

175 #ifde‡
__˝lu•lus


176 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

177 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

179 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

182 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

183 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

184 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

186 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

187 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

200 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

201 
	#__©åibuã__
(
xyz
Ë

	)

207 #i‡
__GNUC_PREREQ
 (2,96)

208 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

210 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (4, 3)

216 
	#__©åibuã_Æloc_size__
(
∑øms
) \

217 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

219 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

225 #i‡
__GNUC_PREREQ
 (2,96)

226 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

228 
	#__©åibuã_puª__


	)

232 #i‡
__GNUC_PREREQ
 (2,5)

233 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

235 
	#__©åibuã_c⁄°__


	)

241 #i‡
__GNUC_PREREQ
 (3,1)

242 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

243 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

246 
	#__©åibuã_noölöe__


	)

250 #i‡
__GNUC_PREREQ
 (3,2)

251 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

253 
	#__©åibuã_dïªˇãd__


	)

259 #i‡
__GNUC_PREREQ
 (4,5) \

260 || 
	$__glibc_˛™g_has_exãnsi⁄
 (
__©åibuã_dïªˇãd_wôh_mesßge__
)

261 
	#__©åibuã_dïªˇãd_msg__
(
msg
) \

262 
	`__©åibuã__
 ((
	`__dïªˇãd__
 (
msg
)))

	)

264 
	#__©åibuã_dïªˇãd_msg__
(
msg
Ë
__©åibuã_dïªˇãd__


	)

273 #i‡
	`__GNUC_PREREQ
 (2,8)

274 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

276 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

283 #i‡
	`__GNUC_PREREQ
 (2,97)

284 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

285 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

287 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

292 #i‡
	`__GNUC_PREREQ
 (3,3)

293 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

295 
	#__n⁄nuŒ
(
∑øms
)

	)

300 #i‡
	`__GNUC_PREREQ
 (3,4)

301 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

302 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

303 #i‡
__USE_FORTIFY_LEVEL
 > 0

304 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

307 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

309 #i‚de‡
__wur


310 
	#__wur


	)

314 #i‡
	`__GNUC_PREREQ
 (3,2)

318 #unde‡
__Æways_ölöe


319 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

321 #unde‡
__Æways_ölöe


322 
	#__Æways_ölöe
 
__ölöe


	)

327 #i‡
	`__GNUC_PREREQ
 (4,3)

328 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

330 
	#__©åibuã_¨tificül__


	)

342 #i‡(!
deföed
 
__˝lu•lus
 || 
	`__GNUC_PREREQ
 (4,3) \

343 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

344 || 
deföed
 
__GNUC_GNU_INLINE__
)))

345 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


346 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

347 
	#__exã∫_Æways_ölöe
 \

348 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

350 
	#__exã∫_ölöe
 
__ölöe


	)

351 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

355 #ifde‡
__exã∫_Æways_ölöe


356 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

361 #i‡
	`__GNUC_PREREQ
 (4,3)

362 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

363 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

370 #i‡!
	`__GNUC_PREREQ
 (2,8)

371 
	#__exãnsi⁄__


	)

375 #i‡!
	`__GNUC_PREREQ
 (2,92)

376 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

377 
	#__ª°ri˘
 
ª°ri˘


	)

379 
	#__ª°ri˘


	)

386 #i‡
	`__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


387 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

389 #ifde‡
__GNUC__


390 
	#__ª°ri˘_¨r


	)

392 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

393 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

396 
	#__ª°ri˘_¨r


	)

401 #i‡
__GNUC__
 >= 3

402 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

403 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

405 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

406 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

409 #ifde‡
__has_©åibuã


410 
	#__glibc_has_©åibuã
(
©å
Ë
	`__has_©åibuã
 (©å)

	)

412 
	#__glibc_has_©åibuã
(
©å
Ë0

	)

415 #i‡(!
deföed
 
_N‹ëu∫
 \

416 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

417 && !
	$__GNUC_PREREQ
 (4,7))

418 #i‡
	`__GNUC_PREREQ
 (2,8)

419 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

421 
	#_N‹ëu∫


	)

425 #i‡
	`__GNUC_PREREQ
 (8, 0)

429 
	#__©åibuã_n⁄°rög__
 
	`__©åibuã__
 ((
__n⁄°rög__
))

	)

431 
	#__©åibuã_n⁄°rög__


	)

435 #unde‡
__©åibuã_c›y__


436 #i‡
	`__GNUC_PREREQ
 (9, 0)

439 
	#__©åibuã_c›y__
(
¨g
Ë
	`__©åibuã__
 ((
	`__c›y__
 (¨g)))

	)

441 
	#__©åibuã_c›y__
(
¨g
)

	)

444 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

445 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

446 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

447 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

448 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

449 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

452 
	~<bôs/w‹dsize.h
>

453 
	~<bôs/l⁄g-doubÀ.h
>

455 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


456 
	#__LDBL_COMPAT
 1

	)

457 #ifde‡
__REDIRECT


458 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

459 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

460 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

461 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

462 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

463 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

464 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

465 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

466 
	#__LDBL_REDIR_DECL
(
«me
) \

467 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

468 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

469 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

470 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

471 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

474 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


475 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

476 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

477 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

478 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

479 
	#__LDBL_REDIR_DECL
(
«me
)

	)

480 #ifde‡
__REDIRECT


481 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

482 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

483 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

492 #i‡
	`__GNUC_PREREQ
 (4,8Ë|| 
	`__glibc_˛™g_¥îeq
 (3,5)

493 
	#__glibc_ma¸o_w¨nög1
(
mesßge
Ë
	`_Pøgma
 (#mesßge)

	)

494 
	#__glibc_ma¸o_w¨nög
(
mesßge
) \

495 
	`__glibc_ma¸o_w¨nög1
 (
GCC
 
w¨nög
 
mesßge
)

	)

497 
	#__glibc_ma¸o_w¨nög
(
msg
)

	)

507 #i‡!
deföed
 
__˝lu•lus
 \

508 && (
	`__GNUC_PREREQ
 (4, 9) \

509 || 
	`__glibc_˛™g_has_exãnsi⁄
 (
c_gíîic_£À˘i⁄s
) \

510 || (!
deföed
 
__GNUC__
 && deföed 
__STDC_VERSION__
 \

511 && 
__STDC_VERSION__
 >= 201112L))

512 
	#__HAVE_GENERIC_SELECTION
 1

	)

514 
	#__HAVE_GENERIC_SELECTION
 0

	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/ty≥s/sig£t_t.h
>

36 
	~<bôs/ty≥s/time_t.h
>

37 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

38 #ifde‡
__USE_XOPEN2K


39 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

42 #i‚de‡
__su£c⁄ds_t_deföed


43 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

44 
	#__su£c⁄ds_t_deföed


	)

49 
	t__fd_mask
;

52 #unde‡
__NFDBITS


54 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

55 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

56 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

63 #ifde‡
__USE_XOPEN


64 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

65 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

67 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

68 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

70 } 
	tfd_£t
;

73 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

75 #ifde‡
__USE_MISC


77 
__fd_mask
 
	tfd_mask
;

80 
	#NFDBITS
 
__NFDBITS


	)

85 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

86 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

87 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

88 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

91 
__BEGIN_DECLS


101 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

102 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

103 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

104 
timevÆ
 *
__ª°ri˘
 
__timeout
);

106 #ifde‡
__USE_XOPEN2K


113 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

114 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

115 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

116 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

117 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

122 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


123 
	~<bôs/£À˘2.h
>

126 
	g__END_DECLS


	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	#__bsw≠_c⁄°™t_16
(
x
) \

31 ((
__uöt16_t
Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

33 
__ölöe
 
__uöt16_t


34 
	$__bsw≠_16
 (
__uöt16_t
 
__bsx
)

36 #i‡
	`__GNUC_PREREQ
 (4, 8)

37  
	`__buûtö_bsw≠16
 (
__bsx
);

39  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

41 
	}
}

44 
	#__bsw≠_c⁄°™t_32
(
x
) \

45 ((((
x
) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) \

46 | (((
x
Ë& 0x0000ff00uË<< 8Ë| (((xË& 0x000000ffuË<< 24))

	)

48 
__ölöe
 
__uöt32_t


49 
	$__bsw≠_32
 (
__uöt32_t
 
__bsx
)

51 #i‡
	`__GNUC_PREREQ
 (4, 3)

52  
	`__buûtö_bsw≠32
 (
__bsx
);

54  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

56 
	}
}

59 
	#__bsw≠_c⁄°™t_64
(
x
) \

60 ((((
x
) & 0xff00000000000000ull) >> 56) \

61 | (((
x
) & 0x00ff000000000000ull) >> 40) \

62 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

63 | (((
x
) & 0x000000ff00000000ull) >> 8) \

64 | (((
x
) & 0x00000000ff000000ull) << 8) \

65 | (((
x
) & 0x0000000000ff0000ull) << 24) \

66 | (((
x
) & 0x000000000000ff00ull) << 40) \

67 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

69 
__exãnsi⁄__
 
__ölöe
 
__uöt64_t


70 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

72 #i‡
	`__GNUC_PREREQ
 (4, 3)

73  
	`__buûtö_bsw≠64
 (
__bsx
);

75  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

77 
	}
}

	@/usr/include/bits/long-double.h

21 
	#__LONG_DOUBLE_USES_FLOAT128
 0

	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/thread-shared-types.h

19 #i‚de‡
_THREAD_SHARED_TYPES_H


20 
	#_THREAD_SHARED_TYPES_H
 1

	)

44 
	~<bôs/±hªadty≥s-¨ch.h
>

49 
	s__±hªad_öã∫Æ_li°


51 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

52 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

53 } 
	t__±hªad_li°_t
;

55 
	s__±hªad_öã∫Æ_¶i°


57 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

58 } 
	t__±hªad_¶i°_t
;

74 
	~<bôs/°ru˘_muãx.h
>

87 
	~<bôs/°ru˘_rwlock.h
>

92 
	s__±hªad_c⁄d_s


94 
__exãnsi⁄__
 union

96 
__exãnsi⁄__
 
	m__w£q
;

99 
	m__low
;

100 
	m__high
;

101 } 
	m__w£q32
;

103 
__exãnsi⁄__
 union

105 
__exãnsi⁄__
 
	m__g1_°¨t
;

108 
	m__low
;

109 
	m__high
;

110 } 
	m__g1_°¨t32
;

112 
	m__g_ªfs
[2] 
	m__LOCK_ALIGNMENT
;

113 
	m__g_size
[2];

114 
	m__g1_‹ig_size
;

115 
	m__wªfs
;

116 
	m__g_sig«ls
[2];

	@/usr/include/bits/types/sigset_t.h

1 #i‚de‡
__sig£t_t_deföed


2 
	#__sig£t_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__sig£t_t.h
>

7 
__sig£t_t
 
	tsig£t_t
;

	@/usr/include/bits/types/struct_timespec.h

2 #i‚de‡
_STRUCT_TIMESPEC


3 
	#_STRUCT_TIMESPEC
 1

	)

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ídün.h
>

10 
	stime•ec


12 
__time_t
 
	mtv_£c
;

13 #i‡
__WORDSIZE
 == 64 \

14 || (
deföed
 
	m__SYSCALL_WORDSIZE
 && __SYSCALL_WORDSIZE == 64) \

15 || 
__TIMESIZE
 == 32

16 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

18 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


20 
	mtv_n£c
;

22 
	mtv_n£c
;

	@/usr/include/bits/types/struct_timeval.h

1 #i‚de‡
__timevÆ_deföed


2 
	#__timevÆ_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stimevÆ


10 
__time_t
 
	mtv_£c
;

11 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/uintn-identity.h

19 #i‡!
deföed
 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_UINTN_IDENTITY_H


24 
	#_BITS_UINTN_IDENTITY_H
 1

	)

26 
	~<bôs/ty≥s.h
>

32 
__ölöe
 
__uöt16_t


33 
	$__uöt16_idítôy
 (
__uöt16_t
 
__x
)

35  
__x
;

36 
	}
}

38 
__ölöe
 
__uöt32_t


39 
	$__uöt32_idítôy
 (
__uöt32_t
 
__x
)

41  
__x
;

42 
	}
}

44 
__ölöe
 
__uöt64_t


45 
	$__uöt64_idítôy
 (
__uöt64_t
 
__x
)

47  
__x
;

48 
	}
}

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_fchÊags


	)

12 
	#__°ub_gây


	)

13 
	#__°ub_lchmod


	)

14 
	#__°ub_ªvoke


	)

15 
	#__°ub_£éogö


	)

16 
	#__°ub_sigªtu∫


	)

17 
	#__°ub_s°k


	)

18 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_gây


	)

14 
	#__°ub_lchmod


	)

15 
	#__°ub_ªvoke


	)

16 
	#__°ub_£éogö


	)

17 
	#__°ub_sigªtu∫


	)

18 
	#__°ub_s°k


	)

19 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub___com∑t_¸óã_moduÀ


	)

12 
	#__°ub___com∑t_gë_kî√l_syms


	)

13 
	#__°ub___com∑t_nfs£rv˘l


	)

14 
	#__°ub___com∑t_quîy_moduÀ


	)

15 
	#__°ub___com∑t_u£lib


	)

16 
	#__°ub_chÊags


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_gây


	)

19 
	#__°ub_lchmod


	)

20 
	#__°ub_ªvoke


	)

21 
	#__°ub_£éogö


	)

22 
	#__°ub_sigªtu∫


	)

23 
	#__°ub_s°k


	)

24 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

2 #i‚de‡
_LINUX_LIMITS_H


3 
	#_LINUX_LIMITS_H


	)

5 
	#NR_OPEN
 1024

	)

7 
	#NGROUPS_MAX
 65536

	)

8 
	#ARG_MAX
 131072

	)

9 
	#LINK_MAX
 127

	)

10 
	#MAX_CANON
 255

	)

11 
	#MAX_INPUT
 255

	)

12 
	#NAME_MAX
 255

	)

13 
	#PATH_MAX
 4096

	)

14 
	#PIPE_BUF
 4096

	)

15 
	#XATTR_NAME_MAX
 255

	)

16 
	#XATTR_SIZE_MAX
 65536

	)

17 
	#XATTR_LIST_MAX
 65536

	)

19 
	#RTSIG_MAX
 32

	)

	@/usr/include/asm-generic/errno.h

2 #i‚de‡
_ASM_GENERIC_ERRNO_H


3 
	#_ASM_GENERIC_ERRNO_H


	)

5 
	~<asm-gíîic/î∫o-ba£.h
>

7 
	#EDEADLK
 35

	)

8 
	#ENAMETOOLONG
 36

	)

9 
	#ENOLCK
 37

	)

18 
	#ENOSYS
 38

	)

20 
	#ENOTEMPTY
 39

	)

21 
	#ELOOP
 40

	)

22 
	#EWOULDBLOCK
 
EAGAIN


	)

23 
	#ENOMSG
 42

	)

24 
	#EIDRM
 43

	)

25 
	#ECHRNG
 44

	)

26 
	#EL2NSYNC
 45

	)

27 
	#EL3HLT
 46

	)

28 
	#EL3RST
 47

	)

29 
	#ELNRNG
 48

	)

30 
	#EUNATCH
 49

	)

31 
	#ENOCSI
 50

	)

32 
	#EL2HLT
 51

	)

33 
	#EBADE
 52

	)

34 
	#EBADR
 53

	)

35 
	#EXFULL
 54

	)

36 
	#ENOANO
 55

	)

37 
	#EBADRQC
 56

	)

38 
	#EBADSLT
 57

	)

40 
	#EDEADLOCK
 
EDEADLK


	)

42 
	#EBFONT
 59

	)

43 
	#ENOSTR
 60

	)

44 
	#ENODATA
 61

	)

45 
	#ETIME
 62

	)

46 
	#ENOSR
 63

	)

47 
	#ENONET
 64

	)

48 
	#ENOPKG
 65

	)

49 
	#EREMOTE
 66

	)

50 
	#ENOLINK
 67

	)

51 
	#EADV
 68

	)

52 
	#ESRMNT
 69

	)

53 
	#ECOMM
 70

	)

54 
	#EPROTO
 71

	)

55 
	#EMULTIHOP
 72

	)

56 
	#EDOTDOT
 73

	)

57 
	#EBADMSG
 74

	)

58 
	#EOVERFLOW
 75

	)

59 
	#ENOTUNIQ
 76

	)

60 
	#EBADFD
 77

	)

61 
	#EREMCHG
 78

	)

62 
	#ELIBACC
 79

	)

63 
	#ELIBBAD
 80

	)

64 
	#ELIBSCN
 81

	)

65 
	#ELIBMAX
 82

	)

66 
	#ELIBEXEC
 83

	)

67 
	#EILSEQ
 84

	)

68 
	#ERESTART
 85

	)

69 
	#ESTRPIPE
 86

	)

70 
	#EUSERS
 87

	)

71 
	#ENOTSOCK
 88

	)

72 
	#EDESTADDRREQ
 89

	)

73 
	#EMSGSIZE
 90

	)

74 
	#EPROTOTYPE
 91

	)

75 
	#ENOPROTOOPT
 92

	)

76 
	#EPROTONOSUPPORT
 93

	)

77 
	#ESOCKTNOSUPPORT
 94

	)

78 
	#EOPNOTSUPP
 95

	)

79 
	#EPFNOSUPPORT
 96

	)

80 
	#EAFNOSUPPORT
 97

	)

81 
	#EADDRINUSE
 98

	)

82 
	#EADDRNOTAVAIL
 99

	)

83 
	#ENETDOWN
 100

	)

84 
	#ENETUNREACH
 101

	)

85 
	#ENETRESET
 102

	)

86 
	#ECONNABORTED
 103

	)

87 
	#ECONNRESET
 104

	)

88 
	#ENOBUFS
 105

	)

89 
	#EISCONN
 106

	)

90 
	#ENOTCONN
 107

	)

91 
	#ESHUTDOWN
 108

	)

92 
	#ETOOMANYREFS
 109

	)

93 
	#ETIMEDOUT
 110

	)

94 
	#ECONNREFUSED
 111

	)

95 
	#EHOSTDOWN
 112

	)

96 
	#EHOSTUNREACH
 113

	)

97 
	#EALREADY
 114

	)

98 
	#EINPROGRESS
 115

	)

99 
	#ESTALE
 116

	)

100 
	#EUCLEAN
 117

	)

101 
	#ENOTNAM
 118

	)

102 
	#ENAVAIL
 119

	)

103 
	#EISNAM
 120

	)

104 
	#EREMOTEIO
 121

	)

105 
	#EDQUOT
 122

	)

107 
	#ENOMEDIUM
 123

	)

108 
	#EMEDIUMTYPE
 124

	)

109 
	#ECANCELED
 125

	)

110 
	#ENOKEY
 126

	)

111 
	#EKEYEXPIRED
 127

	)

112 
	#EKEYREVOKED
 128

	)

113 
	#EKEYREJECTED
 129

	)

116 
	#EOWNERDEAD
 130

	)

117 
	#ENOTRECOVERABLE
 131

	)

119 
	#ERFKILL
 132

	)

121 
	#EHWPOISON
 133

	)

	@/usr/include/bits/pthreadtypes-arch.h

18 #i‚de‡
_BITS_PTHREADTYPES_ARCH_H


19 
	#_BITS_PTHREADTYPES_ARCH_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

28 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

30 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

31 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

32 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

37 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

38 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

39 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

41 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

42 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

43 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

44 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

45 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

47 
	#__LOCK_ALIGNMENT


	)

48 
	#__ONCE_ALIGNMENT


	)

50 #i‚de‡
__x86_64__


52 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/struct_mutex.h

19 #i‚de‡
_THREAD_MUTEX_INTERNAL_H


20 
	#_THREAD_MUTEX_INTERNAL_H
 1

	)

22 
	s__±hªad_muãx_s


24 
	m__lock
;

25 
	m__cou¡
;

26 
	m__ow√r
;

27 #ifde‡
__x86_64__


28 
	m__nu£rs
;

32 
	m__köd
;

33 #ifde‡
__x86_64__


34 
	m__•ös
;

35 
	m__ñisi⁄
;

36 
__±hªad_li°_t
 
	m__li°
;

37 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

39 
	m__nu£rs
;

40 
__exãnsi⁄__
 union

44 
	m__e•ös
;

45 
	m__ìlisi⁄
;

46 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

47 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ìlisi⁄


	)

48 } 
	m__ñisi⁄_d©a
;

49 
__±hªad_¶i°_t
 
	m__li°
;

51 
	#__PTHREAD_MUTEX_HAVE_PREV
 0

	)

55 #ifde‡
__x86_64__


56 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

57 0, 0, 0, 0, 
__köd
, 0, 0, { 0, 0 }

	)

59 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

60 0, 0, 0, 
__köd
, 0, { { 0, 0 } }

	)

	@/usr/include/bits/struct_rwlock.h

20 #i‚de‡
_RWLOCK_INTERNAL_H


21 
	#_RWLOCK_INTERNAL_H


	)

23 
	s__±hªad_rwlock_¨ch_t


25 
	m__ªadîs
;

26 
	m__wrôîs
;

27 
	m__wΩha£_fuãx
;

28 
	m__wrôîs_fuãx
;

29 
	m__∑d3
;

30 
	m__∑d4
;

31 #ifde‡
__x86_64__


32 
	m__cur_wrôî
;

33 
	m__sh¨ed
;

34 sig√d 
	m__rwñisi⁄
;

35 #ifde‡ 
__ILP32__


36 
	m__∑d1
[3];

37 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

39 
	m__∑d1
[7];

40 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

42 
	m__∑d2
;

45 
	m__Êags
;

49 
	m__Êags
;

50 
	m__sh¨ed
;

51 sig√d 
	m__rwñisi⁄
;

52 
	m__∑d2
;

53 
	m__cur_wrôî
;

57 #ifde‡
__x86_64__


58 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

59 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 
__Êags


	)

61 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

62 0, 0, 0, 0, 0, 0, 
__Êags
, 0, 0, 0, 0

	)

	@/usr/include/bits/types/__sigset_t.h

1 #i‚de‡
____sig£t_t_deföed


2 
	#____sig£t_t_deföed


	)

4 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

7 
	m__vÆ
[
_SIGSET_NWORDS
];

8 } 
	t__sig£t_t
;

	@/usr/include/asm-generic/errno-base.h

2 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


3 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

5 
	#EPERM
 1

	)

6 
	#ENOENT
 2

	)

7 
	#ESRCH
 3

	)

8 
	#EINTR
 4

	)

9 
	#EIO
 5

	)

10 
	#ENXIO
 6

	)

11 
	#E2BIG
 7

	)

12 
	#ENOEXEC
 8

	)

13 
	#EBADF
 9

	)

14 
	#ECHILD
 10

	)

15 
	#EAGAIN
 11

	)

16 
	#ENOMEM
 12

	)

17 
	#EACCES
 13

	)

18 
	#EFAULT
 14

	)

19 
	#ENOTBLK
 15

	)

20 
	#EBUSY
 16

	)

21 
	#EEXIST
 17

	)

22 
	#EXDEV
 18

	)

23 
	#ENODEV
 19

	)

24 
	#ENOTDIR
 20

	)

25 
	#EISDIR
 21

	)

26 
	#EINVAL
 22

	)

27 
	#ENFILE
 23

	)

28 
	#EMFILE
 24

	)

29 
	#ENOTTY
 25

	)

30 
	#ETXTBSY
 26

	)

31 
	#EFBIG
 27

	)

32 
	#ENOSPC
 28

	)

33 
	#ESPIPE
 29

	)

34 
	#EROFS
 30

	)

35 
	#EMLINK
 31

	)

36 
	#EPIPE
 32

	)

37 
	#EDOM
 33

	)

38 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
119
3097
analyze.c
analyze.h
cgen.c
cgen.h
cminus.l
cminus.y
code.c
code.h
globals.h
lex.yy.c
main.c
parse.c
parse.h
scan.c
scan.h
symtab.c
symtab.h
tm.c
util.c
util.h
y.tab.c
y.tab.h
/usr/include/alloca.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/inttypes.h
/usr/include/libintl.h
/usr/include/limits.h
/usr/include/malloc.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/unistd.h
/usr/include/bits/confname.h
/usr/include/bits/endian.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/floatn.h
/usr/include/bits/getopt_posix.h
/usr/include/bits/libc-header-start.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/stdint-intn.h
/usr/include/bits/stdint-uintn.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string_fortified.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/types/FILE.h
/usr/include/bits/types/__FILE.h
/usr/include/bits/types/__fpos64_t.h
/usr/include/bits/types/__fpos_t.h
/usr/include/bits/types/cookie_io_functions_t.h
/usr/include/bits/types/error_t.h
/usr/include/bits/types/locale_t.h
/usr/include/bits/types/struct_FILE.h
/usr/include/bits/unistd.h
/usr/include/bits/unistd_ext.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/features.h
/usr/include/locale.h
/usr/include/strings.h
/usr/include/sys/types.h
/usr/include/bits/endianness.h
/usr/include/bits/floatn-common.h
/usr/include/bits/getopt_core.h
/usr/include/bits/local_lim.h
/usr/include/bits/locale.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/strings_fortified.h
/usr/include/bits/time64.h
/usr/include/bits/timesize.h
/usr/include/bits/types/__locale_t.h
/usr/include/bits/types/__mbstate_t.h
/usr/include/bits/types/clock_t.h
/usr/include/bits/types/clockid_t.h
/usr/include/bits/types/time_t.h
/usr/include/bits/types/timer_t.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio_lim.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/asm/errno.h
/usr/include/bits/byteswap.h
/usr/include/bits/long-double.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/thread-shared-types.h
/usr/include/bits/types/sigset_t.h
/usr/include/bits/types/struct_timespec.h
/usr/include/bits/types/struct_timeval.h
/usr/include/bits/uintn-identity.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/limits.h
/usr/include/asm-generic/errno.h
/usr/include/bits/pthreadtypes-arch.h
/usr/include/bits/struct_mutex.h
/usr/include/bits/struct_rwlock.h
/usr/include/bits/types/__sigset_t.h
/usr/include/asm-generic/errno-base.h
